 ' 文件类型：Windows控制台程序

 ' 程序名称：开黑啦易语言BOT
 ' 程序描述：kaiheila_EL_bot
@备注:
kaiheila_EL_bot
 ' 程序作者：萌动众生
 ' 邮政编码：
 ' 联系地址：
 ' 联系电话：
 ' 传真号码：
 ' 电子信箱：
 ' 主页地址：
 ' 版权声明：
 ' 版本号：1.0
 ' 创建号：0.0

窗口 窗口1
    左边 = 50
    顶边 = 50
    宽度 = 931
    高度 = 392
    鼠标指针 = { 0,0,0,0 }
    标记 = “”
    可视 = 真
    禁止 = 假
    边框 = 2
    底图方式 = 1
    底色 = 16777215 '  0xFFFFFF
    最大化按钮 = 假
    最小化按钮 = 真
    控制按钮 = 真
    位置 = 1
    可否移动 = 真
    背景音乐播放次数 = 0
    回车下移焦点 = 假
    Esc键关闭 = 真
    F1键打开帮助 = 假
    帮助标志值 = 0
    在任务栏中显示 = 真
    随意移动 = 假
    外形 = 0
    总在最前 = 假
    保持标题栏激活 = 假
    窗口类名 = “”
    底图 =  ' 空
    图标 =  ' 空
    背景音乐 =  ' 空
    标题 = “控制台”
    帮助文件名 = “”



.常量 旧窗口过程, "“oldWndProc”", 隐藏, 
.常量 LMEM_ZEROINIT, "64", 隐藏, 
.常量 WM_NOTIFY, "78", 隐藏, 当某个控件的某个事件已经发生或这个控件需要得到一些信息时，发送此消息给它的父窗口
.常量 NM_CUSTOMDRAW, "-12", 隐藏, 
.常量 CDDS_PREPAINT, "1", 隐藏, 
.常量 CDRF_NOTIFYSUBITEMDRAW, "32", 隐藏, 
.常量 CDDS_ITEMPREPAINT, "65537", 隐藏, 
.常量 CDDS_SUBITEM, "131072", 隐藏, 
.常量 DT_VCENTER, "4", 隐藏, 
.常量 DT_LEFT, "0", 隐藏, 
.常量 DT_SINGLELINE, "32", 隐藏, 
.常量 CDRF_SKIPDEFAULT, "4", 隐藏, 
.常量 WS_POPUP, "-2147483648", 隐藏, 
.常量 IMAGE_BITMAP, "0", 隐藏, 
.常量 IMAGE_ICON, "1", 隐藏, 
.常量 IMAGE_CURSOR, "2", 隐藏, 
.常量 STIF_DEFAULT, "0", 隐藏, 
.常量 STIF_SUPPORT_HEX, "1", 隐藏, 
.常量 CP_gb2312, "936", 隐藏, ANSI/OEM Simplified Chinese (PRC, Singapore); Chinese Simplified (GB2312)
.常量 CP_utf_8, "65001", 隐藏, Unicode (UTF-8)
.常量 HtmlEntitiesTable, "“Tab	9
NewLine	10
excl	33
quot	34
num	35
dollar	36
percnt	37
amp	38
apos	39
lpar	40
rpar	41
ast	42
plus	43
comma	44
period	46
sol	47
colon	58
semi	59
lt	60
equals	61
gt	62
quest	63
commat	64
lsqb	91
bsol	92
rsqb	93
Hat	94
lowbar	95
grave	96
lcub	123
verbar	124
rcub	125
nbsp	160
iexcl	161
cent	162
pound	163
curren	164
yen	165
brvbar	166
sect	167
Dot	168
copy	169
ordf	170
laquo	171
not	172
shy	173
reg	174
macr	175
deg	176
plusmn	177
sup2	178
sup3	179
acute	180
micro	181
para	182
middot	183
cedil	184
sup1	185
ordm	186
raquo	187
frac14	188
frac12	189
frac34	190
iquest	191
Agrave	192
Aacute	193
Acirc	194
Atilde	195
Auml	196
Aring	197
AElig	198
Ccedil	199
Egrave	200
Eacute	201
Ecirc	202
Euml	203
Igrave	204
Iacute	205
Icirc	206
Iuml	207
ETH	208
Ntilde	209
Ograve	210
Oacute	211
Ocirc	212
Otilde	213
Ouml	214
times	215
Oslash	216
Ugrave	217
Uacute	218
Ucirc	219
Uuml	220
Yacute	221
THORN	222
szlig	223
agrave	224
aacute	225
acirc	226
atilde	227
auml	228
aring	229
aelig	230
ccedil	231
egrave	232
eacute	233
ecirc	234
euml	235
igrave	236
iacute	237
icirc	238
iuml	239
eth	240
ntilde	241
ograve	242
oacute	243
ocirc	244
otilde	245
ouml	246
divide	247
oslash	248
ugrave	249
uacute	250
ucirc	251
uuml	252
yacute	253
thorn	254
yuml	255
Amacr	256
amacr	257
Abreve	258
abreve	259
Aogon	260
aogon	261
Cacute	262
cacute	263
Ccirc	264
ccirc	265
Cdot	266
cdot	267
Ccaron	268
ccaron	269
Dcaron	270
dcaron	271
Dstrok	272
dstrok	273
Emacr	274
emacr	275
Edot	278
edot	279
Eogon	280
eogon	281
Ecaron	282
ecaron	283
Gcirc	284
gcirc	285
Gbreve	286
gbreve	287
Gdot	288
gdot	289
Gcedil	290
Hcirc	292
hcirc	293
Hstrok	294
hstrok	295
Itilde	296
itilde	297
Imacr	298
imacr	299
Iogon	302
iogon	303
Idot	304
imath	305
IJlig	306
ijlig	307
Jcirc	308
jcirc	309
Kcedil	310
kcedil	311
kgreen	312
Lacute	313
lacute	314
Lcedil	315
lcedil	316
Lcaron	317
lcaron	318
Lmidot	319
lmidot	320
Lstrok	321
lstrok	322
Nacute	323
nacute	324
Ncedil	325
ncedil	326
Ncaron	327
ncaron	328
napos	329
ENG	330
eng	331
Omacr	332
omacr	333
Odblac	336
odblac	337
OElig	338
oelig	339
Racute	340
racute	341
Rcedil	342
rcedil	343
Rcaron	344
rcaron	345
Sacute	346
sacute	347
Scirc	348
scirc	349
Scedil	350
scedil	351
Scaron	352
scaron	353
Tcedil	354
tcedil	355
Tcaron	356
tcaron	357
Tstrok	358
tstrok	359
Utilde	360
utilde	361
Umacr	362
umacr	363
Ubreve	364
ubreve	365
Uring	366
uring	367
Udblac	368
udblac	369
Uogon	370
uogon	371
Wcirc	372
wcirc	373
Ycirc	374
ycirc	375
Yuml	376
Zacute	377
zacute	378
Zdot	379
zdot	380
Zcaron	381
zcaron	382
fnof	402
imped	437
gacute	501
jmath	567
circ	710
caron	711
breve	728
dot	729
ring	730
ogon	731
tilde	732
dblac	733
DownBreve	785
UnderBar	818
Alpha	913
Beta	914
Gamma	915
Delta	916
Epsilon	917
Zeta	918
Eta	919
Theta	920
Iota	921
Kappa	922
Lambda	923
Mu	924
Nu	925
Xi	926
Omicron	927
Pi	928
Rho	929
Sigma	931
Tau	932
Upsilon	933
Phi	934
Chi	935
Psi	936
Omega	937
alpha	945
beta	946
gamma	947
delta	948
epsiv	949
zeta	950
eta	951
theta	952
iota	953
kappa	954
lambda	955
mu	956
nu	957
xi	958
omicron	959
pi	960
rho	961
sigmav	962
sigma	963
tau	964
upsi	965
phi	966
chi	967
psi	968
omega	969
thetav	977
Upsi	978
straightphi	981
piv	982
Gammad	988
gammad	989
kappav	1008
rhov	1009
epsi	1013
bepsi	1014
IOcy	1025
DJcy	1026
GJcy	1027
Jukcy	1028
DScy	1029
Iukcy	1030
YIcy	1031
Jsercy	1032
LJcy	1033
NJcy	1034
TSHcy	1035
KJcy	1036
Ubrcy	1038
DZcy	1039
Acy	1040
Bcy	1041
Vcy	1042
Gcy	1043
Dcy	1044
IEcy	1045
ZHcy	1046
Zcy	1047
Icy	1048
Jcy	1049
Kcy	1050
Lcy	1051
Mcy	1052
Ncy	1053
Ocy	1054
Pcy	1055
Rcy	1056
Scy	1057
Tcy	1058
Ucy	1059
Fcy	1060
KHcy	1061
TScy	1062
CHcy	1063
SHcy	1064
SHCHcy	1065
HARDcy	1066
Ycy	1067
SOFTcy	1068
Ecy	1069
YUcy	1070
YAcy	1071
acy	1072
bcy	1073
vcy	1074
gcy	1075
dcy	1076
iecy	1077
zhcy	1078
zcy	1079
icy	1080
jcy	1081
kcy	1082
lcy	1083
mcy	1084
ncy	1085
ocy	1086
pcy	1087
rcy	1088
scy	1089
tcy	1090
ucy	1091
fcy	1092
khcy	1093
tscy	1094
chcy	1095
shcy	1096
shchcy	1097
hardcy	1098
ycy	1099
softcy	1100
ecy	1101
yucy	1102
yacy	1103
iocy	1105
djcy	1106
gjcy	1107
jukcy	1108
dscy	1109
iukcy	1110
yicy	1111
jsercy	1112
ljcy	1113
njcy	1114
tshcy	1115
kjcy	1116
ubrcy	1118
dzcy	1119
ensp	8194
emsp	8195
emsp13	8196
emsp14	8197
numsp	8199
puncsp	8200
thinsp	8201
hairsp	8202
ZeroWidthSpace	8203
zwnj	8204
zwj	8205
lrm	8206
rlm	8207
hyphen	8208
ndash	8211
mdash	8212
horbar	8213
Verbar	8214
lsquo	8216
rsquo	8217
lsquor	8218
ldquo	8220
rdquo	8221
ldquor	8222
dagger	8224
Dagger	8225
bull	8226
nldr	8229
hellip	8230
permil	8240
pertenk	8241
prime	8242
Prime	8243
tprime	8244
bprime	8245
lsaquo	8249
rsaquo	8250
oline	8254
caret	8257
hybull	8259
frasl	8260
bsemi	8271
qprime	8279
MediumSpace	8287
NoBreak	8288
ApplyFunction	8289
InvisibleTimes	8290
InvisibleComma	8291
euro	8364
tdot	8411
DotDot	8412
Copf	8450
incare	8453
gscr	8458
hamilt	8459
Hfr	8460
quaternions	8461
planckh	8462
planck	8463
Iscr	8464
image	8465
Lscr	8466
ell	8467
Nopf	8469
numero	8470
copysr	8471
weierp	8472
Popf	8473
rationals	8474
Rscr	8475
real	8476
reals	8477
rx	8478
trade	8482
integers	8484
ohm	8486
mho	8487
Zfr	8488
iiota	8489
angst	8491
bernou	8492
Cfr	8493
escr	8495
Escr	8496
Fscr	8497
phmmat	8499
order	8500
alefsym	8501
beth	8502
gimel	8503
daleth	8504
CapitalDifferentialD	8517
DifferentialD	8518
ExponentialE	8519
ImaginaryI	8520
frac13	8531
frac23	8532
frac15	8533
frac25	8534
frac35	8535
frac45	8536
frac16	8537
frac56	8538
frac18	8539
frac38	8540
frac58	8541
frac78	8542
larr	8592
uarr	8593
rarr	8594
darr	8595
harr	8596
varr	8597
nwarr	8598
nearr	8599
searr	8600
swarr	8601
nlarr	8602
nrarr	8603
rarrw	8605
Larr	8606
Uarr	8607
Rarr	8608
Darr	8609
larrtl	8610
rarrtl	8611
LeftTeeArrow	8612
UpTeeArrow	8613
map	8614
DownTeeArrow	8615
larrhk	8617
rarrhk	8618
larrlp	8619
rarrlp	8620
harrw	8621
nharr	8622
lsh	8624
rsh	8625
ldsh	8626
rdsh	8627
crarr	8629
cularr	8630
curarr	8631
olarr	8634
orarr	8635
lharu	8636
lhard	8637
uharr	8638
uharl	8639
rharu	8640
rhard	8641
dharr	8642
dharl	8643
rlarr	8644
udarr	8645
lrarr	8646
llarr	8647
uuarr	8648
rrarr	8649
ddarr	8650
lrhar	8651
rlhar	8652
nlArr	8653
nhArr	8654
nrArr	8655
lArr	8656
uArr	8657
rArr	8658
dArr	8659
hArr	8660
vArr	8661
nwArr	8662
neArr	8663
seArr	8664
swArr	8665
lAarr	8666
rAarr	8667
zigrarr	8669
larrb	8676
rarrb	8677
duarr	8693
loarr	8701
roarr	8702
hoarr	8703
forall	8704
comp	8705
part	8706
exist	8707
nexist	8708
empty	8709
nabla	8711
isin	8712
notin	8713
niv	8715
notni	8716
prod	8719
coprod	8720
sum	8721
minus	8722
mnplus	8723
plusdo	8724
setmn	8726
lowast	8727
compfn	8728
radic	8730
prop	8733
infin	8734
angrt	8735
ang	8736
angmsd	8737
angsph	8738
mid	8739
nmid	8740
par	8741
npar	8742
and	8743
or	8744
cap	8745
cup	8746
int	8747
Int	8748
tint	8749
conint	8750
Conint	8751
Cconint	8752
cwint	8753
cwconint	8754
awconint	8755
there4	8756
becaus	8757
ratio	8758
Colon	8759
minusd	8760
mDDot	8762
homtht	8763
sim	8764
bsim	8765
ac	8766
acd	8767
wreath	8768
nsim	8769
esim	8770
sime	8771
nsime	8772
cong	8773
simne	8774
ncong	8775
asymp	8776
nap	8777
ape	8778
apid	8779
bcong	8780
asympeq	8781
bump	8782
bumpe	8783
esdot	8784
eDot	8785
efDot	8786
erDot	8787
colone	8788
ecolon	8789
ecir	8790
cire	8791
wedgeq	8793
veeeq	8794
trie	8796
equest	8799
ne	8800
equiv	8801
nequiv	8802
le	8804
ge	8805
lE	8806
gE	8807
lnE	8808
gnE	8809
Lt	8810
Gt	8811
twixt	8812
NotCupCap	8813
nlt	8814
ngt	8815
nle	8816
nge	8817
lsim	8818
gsim	8819
nlsim	8820
ngsim	8821
lg	8822
gl	8823
ntlg	8824
ntgl	8825
pr	8826
sc	8827
prcue	8828
sccue	8829
prsim	8830
scsim	8831
npr	8832
nsc	8833
sub	8834
sup	8835
nsub	8836
nsup	8837
sube	8838
supe	8839
nsube	8840
nsupe	8841
subne	8842
supne	8843
cupdot	8845
uplus	8846
sqsub	8847
sqsup	8848
sqsube	8849
sqsupe	8850
sqcap	8851
sqcup	8852
oplus	8853
ominus	8854
otimes	8855
osol	8856
odot	8857
ocir	8858
oast	8859
odash	8861
plusb	8862
minusb	8863
timesb	8864
sdotb	8865
vdash	8866
dashv	8867
top	8868
bottom	8869
models	8871
vDash	8872
Vdash	8873
Vvdash	8874
VDash	8875
nvdash	8876
nvDash	8877
nVdash	8878
nVDash	8879
prurel	8880
vltri	8882
vrtri	8883
ltrie	8884
rtrie	8885
origof	8886
imof	8887
mumap	8888
hercon	8889
intcal	8890
veebar	8891
barvee	8893
angrtvb	8894
lrtri	8895
xwedge	8896
xvee	8897
xcap	8898
xcup	8899
diam	8900
sdot	8901
sstarf	8902
divonx	8903
bowtie	8904
ltimes	8905
rtimes	8906
lthree	8907
rthree	8908
bsime	8909
cuvee	8910
cuwed	8911
Sub	8912
Sup	8913
Cap	8914
Cup	8915
fork	8916
epar	8917
ltdot	8918
gtdot	8919
Ll	8920
Gg	8921
leg	8922
gel	8923
cuepr	8926
cuesc	8927
nprcue	8928
nsccue	8929
nsqsube	8930
nsqsupe	8931
lnsim	8934
gnsim	8935
prnsim	8936
scnsim	8937
nltri	8938
nrtri	8939
nltrie	8940
nrtrie	8941
vellip	8942
ctdot	8943
utdot	8944
dtdot	8945
disin	8946
isinsv	8947
isins	8948
isindot	8949
notinvc	8950
notinvb	8951
isinE	8953
nisd	8954
xnis	8955
nis	8956
notnivc	8957
notnivb	8958
barwed	8965
Barwed	8966
lceil	8968
rceil	8969
lfloor	8970
rfloor	8971
drcrop	8972
dlcrop	8973
urcrop	8974
ulcrop	8975
bnot	8976
profline	8978
profsurf	8979
telrec	8981
target	8982
ulcorn	8988
urcorn	8989
dlcorn	8990
drcorn	8991
frown	8994
smile	8995
lang	9001
rang	9002
cylcty	9005
profalar	9006
topbot	9014
ovbar	9021
solbar	9023
angzarr	9084
lmoust	9136
rmoust	9137
tbrk	9140
bbrk	9141
bbrktbrk	9142
OverParenthesis	9180
UnderParenthesis	9181
OverBrace	9182
UnderBrace	9183
trpezium	9186
elinters	9191
blank	9251
oS	9416
boxh	9472
boxv	9474
boxdr	9484
boxdl	9488
boxur	9492
boxul	9496
boxvr	9500
boxvl	9508
boxhd	9516
boxhu	9524
boxvh	9532
boxH	9552
boxV	9553
boxdR	9554
boxDr	9555
boxDR	9556
boxdL	9557
boxDl	9558
boxDL	9559
boxuR	9560
boxUr	9561
boxUR	9562
boxuL	9563
boxUl	9564
boxUL	9565
boxvR	9566
boxVr	9567
boxVR	9568
boxvL	9569
boxVl	9570
boxVL	9571
boxHd	9572
boxhD	9573
boxHD	9574
boxHu	9575
boxhU	9576
boxHU	9577
boxvH	9578
boxVh	9579
boxVH	9580
uhblk	9600
lhblk	9604
block	9608
blk14	9617
blk12	9618
blk34	9619
squ	9633
squf	9642
EmptyVerySmallSquare	9643
rect	9645
marker	9646
fltns	9649
xutri	9651
utrif	9652
utri	9653
rtrif	9656
rtri	9657
xdtri	9661
dtrif	9662
dtri	9663
ltrif	9666
ltri	9667
loz	9674
cir	9675
tridot	9708
xcirc	9711
ultri	9720
urtri	9721
lltri	9722
EmptySmallSquare	9723
FilledSmallSquare	9724
starf	9733
star	9734
phone	9742
female	9792
male	9794
spades	9824
clubs	9827
hearts	9829
diams	9830
sung	9834
flat	9837
natur	9838
sharp	9839
check	10003
cross	10007
malt	10016
sext	10038
VerticalSeparator	10072
lbbrk	10098
rbbrk	10099
lobrk	10214
robrk	10215
lang	10216
rang	10217
Lang	10218
Rang	10219
loang	10220
roang	10221
xlarr	10229
xrarr	10230
xharr	10231
xlArr	10232
xrArr	10233
xhArr	10234
xmap	10236
dzigrarr	10239
nvlArr	10498
nvrArr	10499
nvHarr	10500
Map	10501
lbarr	10508
rbarr	10509
lBarr	10510
rBarr	10511
RBarr	10512
DDotrahd	10513
UpArrowBar	10514
DownArrowBar	10515
Rarrtl	10518
latail	10521
ratail	10522
lAtail	10523
rAtail	10524
larrfs	10525
rarrfs	10526
larrbfs	10527
rarrbfs	10528
nwarhk	10531
nearhk	10532
searhk	10533
swarhk	10534
nwnear	10535
nesear	10536
seswar	10537
swnwar	10538
rarrc	10547
cudarrr	10549
ldca	10550
rdca	10551
cudarrl	10552
larrpl	10553
curarrm	10556
cularrp	10557
rarrpl	10565
harrcir	10568
Uarrocir	10569
lurdshar	10570
ldrushar	10571
LeftRightVector	10574
RightUpDownVector	10575
DownLeftRightVector	10576
LeftUpDownVector	10577
LeftVectorBar	10578
RightVectorBar	10579
RightUpVectorBar	10580
RightDownVectorBar	10581
DownLeftVectorBar	10582
DownRightVectorBar	10583
LeftUpVectorBar	10584
LeftDownVectorBar	10585
LeftTeeVector	10586
RightTeeVector	10587
RightUpTeeVector	10588
RightDownTeeVector	10589
DownLeftTeeVector	10590
DownRightTeeVector	10591
LeftUpTeeVector	10592
LeftDownTeeVector	10593
lHar	10594
uHar	10595
rHar	10596
dHar	10597
luruhar	10598
ldrdhar	10599
ruluhar	10600
rdldhar	10601
lharul	10602
llhard	10603
rharul	10604
lrhard	10605
udhar	10606
duhar	10607
RoundImplies	10608
erarr	10609
simrarr	10610
larrsim	10611
rarrsim	10612
rarrap	10613
ltlarr	10614
gtrarr	10616
subrarr	10617
suplarr	10619
lfisht	10620
rfisht	10621
ufisht	10622
dfisht	10623
lopar	10629
ropar	10630
lbrke	10635
rbrke	10636
lbrkslu	10637
rbrksld	10638
lbrksld	10639
rbrkslu	10640
langd	10641
rangd	10642
lparlt	10643
rpargt	10644
gtlPar	10645
ltrPar	10646
vzigzag	10650
vangrt	10652
angrtvbd	10653
ange	10660
range	10661
dwangle	10662
uwangle	10663
angmsdaa	10664
angmsdab	10665
angmsdac	10666
angmsdad	10667
angmsdae	10668
angmsdaf	10669
angmsdag	10670
angmsdah	10671
bemptyv	10672
demptyv	10673
cemptyv	10674
raemptyv	10675
laemptyv	10676
ohbar	10677
omid	10678
opar	10679
operp	10681
olcross	10683
odsold	10684
olcir	10686
ofcir	10687
olt	10688
ogt	10689
cirscir	10690
cirE	10691
solb	10692
bsolb	10693
boxbox	10697
trisb	10701
rtriltri	10702
LeftTriangleBar	10703
RightTriangleBar	10704
race	10714
iinfin	10716
infintie	10717
nvinfin	10718
eparsl	10723
smeparsl	10724
eqvparsl	10725
lozf	10731
RuleDelayed	10740
dsol	10742
xodot	10752
xoplus	10753
xotime	10754
xuplus	10756
xsqcup	10758
qint	10764
fpartint	10765
cirfnint	10768
awint	10769
rppolint	10770
scpolint	10771
npolint	10772
pointint	10773
quatint	10774
intlarhk	10775
pluscir	10786
plusacir	10787
simplus	10788
plusdu	10789
plussim	10790
plustwo	10791
mcomma	10793
minusdu	10794
loplus	10797
roplus	10798
Cross	10799
timesd	10800
timesbar	10801
smashp	10803
lotimes	10804
rotimes	10805
otimesas	10806
Otimes	10807
odiv	10808
triplus	10809
triminus	10810
tritime	10811
iprod	10812
amalg	10815
capdot	10816
ncup	10818
ncap	10819
capand	10820
cupor	10821
cupcap	10822
capcup	10823
cupbrcap	10824
capbrcup	10825
cupcup	10826
capcap	10827
ccups	10828
ccaps	10829
ccupssm	10832
And	10835
Or	10836
andand	10837
oror	10838
orslope	10839
andslope	10840
andv	10842
orv	10843
andd	10844
ord	10845
wedbar	10847
sdote	10854
simdot	10858
congdot	10861
easter	10862
apacir	10863
apE	10864
eplus	10865
pluse	10866
Esim	10867
Colone	10868
Equal	10869
eDDot	10871
equivDD	10872
ltcir	10873
gtcir	10874
ltquest	10875
gtquest	10876
les	10877
ges	10878
lesdot	10879
gesdot	10880
lesdoto	10881
gesdoto	10882
lesdotor	10883
gesdotol	10884
lap	10885
gap	10886
lne	10887
gne	10888
lnap	10889
gnap	10890
lEg	10891
gEl	10892
lsime	10893
gsime	10894
lsimg	10895
gsiml	10896
lgE	10897
glE	10898
lesges	10899
gesles	10900
els	10901
egs	10902
elsdot	10903
egsdot	10904
el	10905
eg	10906
siml	10909
simg	10910
simlE	10911
simgE	10912
LessLess	10913
GreaterGreater	10914
glj	10916
gla	10917
ltcc	10918
gtcc	10919
lescc	10920
gescc	10921
smt	10922
lat	10923
smte	10924
late	10925
bumpE	10926
pre	10927
sce	10928
prE	10931
scE	10932
prnE	10933
scnE	10934
prap	10935
scap	10936
prnap	10937
scnap	10938
Pr	10939
Sc	10940
subdot	10941
supdot	10942
subplus	10943
supplus	10944
submult	10945
supmult	10946
subedot	10947
supedot	10948
subE	10949
supE	10950
subsim	10951
supsim	10952
subnE	10955
supnE	10956
csub	10959
csup	10960
csube	10961
csupe	10962
subsup	10963
supsub	10964
subsub	10965
supsup	10966
suphsub	10967
supdsub	10968
forkv	10969
topfork	10970
mlcp	10971
Dashv	10980
Vdashl	10982
Barv	10983
vBar	10984
vBarv	10985
Vbar	10987
Not	10988
bNot	10989
rnmid	10990
cirmid	10991
midcir	10992
topcir	10993
nhpar	10994
parsim	10995
parsl	11005
fflig	64256
filig	64257
fllig	64258
ffilig	64259
ffllig	64260
Ascr	119964
Cscr	119966
Dscr	119967
Gscr	119970
Jscr	119973
Kscr	119974
Nscr	119977
Oscr	119978
Pscr	119979
Qscr	119980
Sscr	119982
Tscr	119983
Uscr	119984
Vscr	119985
Wscr	119986
Xscr	119987
Yscr	119988
Zscr	119989
ascr	119990
bscr	119991
cscr	119992
dscr	119993
fscr	119995
hscr	119997
iscr	119998
jscr	119999
kscr	120000
lscr	120001
mscr	120002
nscr	120003
pscr	120005
qscr	120006
rscr	120007
sscr	120008
tscr	120009
uscr	120010
vscr	120011
wscr	120012
xscr	120013
yscr	120014
zscr	120015
Afr	120068
Bfr	120069
Dfr	120071
Efr	120072
Ffr	120073
Gfr	120074
Jfr	120077
Kfr	120078
Lfr	120079
Mfr	120080
Nfr	120081
Ofr	120082
Pfr	120083
Qfr	120084
Sfr	120086
Tfr	120087
Ufr	120088
Vfr	120089
Wfr	120090
Xfr	120091
Yfr	120092
afr	120094
bfr	120095
cfr	120096
dfr	120097
efr	120098
ffr	120099
gfr	120100
hfr	120101
ifr	120102
jfr	120103
kfr	120104
lfr	120105
mfr	120106
nfr	120107
ofr	120108
pfr	120109
qfr	120110
rfr	120111
sfr	120112
tfr	120113
ufr	120114
vfr	120115
wfr	120116
xfr	120117
yfr	120118
zfr	120119
Aopf	120120
Bopf	120121
Dopf	120123
Eopf	120124
Fopf	120125
Gopf	120126
Iopf	120128
Jopf	120129
Kopf	120130
Lopf	120131
Mopf	120132
Oopf	120134
Sopf	120138
Topf	120139
Uopf	120140
Vopf	120141
Wopf	120142
Xopf	120143
Yopf	120144
aopf	120146
bopf	120147
copf	120148
dopf	120149
eopf	120150
fopf	120151
gopf	120152
hopf	120153
iopf	120154
jopf	120155
kopf	120156
lopf	120157
mopf	120158
nopf	120159
oopf	120160
popf	120161
qopf	120162
ropf	120163
sopf	120164
topf	120165
uopf	120166
vopf	120167
wopf	120168
xopf	120169
yopf	120170
zopf	120171”", 隐藏,  HTML Entity 目前最全转义表，没错，就是最
.常量 ERROR_BUFFER_OVERFLOW, "111", 隐藏, 111
.常量 ERROR_SUCCESS, "0", 隐藏, 0L
.常量 MIB_IF_TYPE_ETHERNET, "6", 隐藏, 以太网接口
.常量 MIB_IF_TYPE_FDDI, "15", 隐藏, 15
.常量 MIB_IF_TYPE_LOOPBACK, "24", 隐藏, 24
.常量 MIB_IF_TYPE_OTHER, "1", 隐藏, 其他类型的网络接口
.常量 MIB_IF_TYPE_PPP, "23", 隐藏, PPP(点到点协议)网络接口
.常量 MIB_IF_TYPE_SLIP, "28", 隐藏, 
.常量 MIB_IF_TYPE_TOKENRING, "9", 隐藏, 
.常量 MIB_IF_TYPE_IEEE80211, "71", 隐藏, IEEE 802.11 wireless network interface
.常量 ERROR_INSUFFICIENT_BUFFER, "122", 隐藏, 一个无效参数传递给函数。如果TableClass参数包含未在TCP_TABLE_CLASS枚举中定义的值， 则返回此错误。
.常量 WM_GETTEXTLENGTH, "14", 隐藏, 得到与一个窗口有关的文本的长度（不包含空字符）
.常量 SMTO_NORMAL, "0", 隐藏, 
.常量 服务器消息, "1029", 隐藏, 服务器消息
.常量 客户消息, "1030", 隐藏, 客户消息
.常量 FD_CLOSE, "32", 隐藏, 客户退出
.常量 FD_ACCEPT, "8", 隐藏, 客户进入
.常量 FD_READ, "1", 隐藏, 数据到达
.常量 PF_INET, "2", 隐藏, TCP/IP协议族
.常量 SOCK_STREAM, "1", 隐藏, 流套接字类型(TCP)
.常量 SOCK_DGRAM, "2", 隐藏, 数据报套接字类型(UDP)
.常量 IPPROTO_TCP, "6", 隐藏, 
.常量 IPPROTO_UDP, "17", 隐藏, 
.常量 SRCCOPY, "13369376", 隐藏, 直接复制，不做任何修改。
.常量 网页属性_网页标题, "“title”", 隐藏, 
.常量 网页属性_网页地址, "“location”", 隐藏, 
.常量 网页属性_网页源码, "“outerHTML”", 隐藏, outerHTML
.常量 网页属性_网页文本, "“innerText”", 隐藏, innerText
.常量 网页属性_网站域名, "“domain”", 隐藏, domain
.常量 网页属性_访问来源, "“referrer”", 隐藏, referrer
.常量 网页属性_创建时间, "“fileCreatedDate”", 隐藏, fileCreatedDate
.常量 网页属性_修改时间, "“lastModified”", 隐藏, lastModified
.常量 网页属性_Cookies, "“cookie”", 隐藏, cookie
.常量 网页属性_编码类型, "“charset”", 隐藏, charset
.常量 网页属性_文档大小, "“fileSize”", 隐藏, fileSize
.常量 脚本类型_JavaScript, "“JavaScript”", 隐藏, 
.常量 脚本类型_VBScript, "“VBScript”", 隐藏, 
.常量 网页事件_selectedIndex, "“selectedIndex”", 隐藏, 组合框被选择
.常量 网页事件_onabort, "“onabort”", 隐藏, 当用户中断下载图像时触发。.常量 网页事件_onactivate, "“onactivate”", 公开, 当对象设置为活动元素时触发。
.常量 网页事件_onafterprint, "“onafterprint”", 隐藏, 对象所关联的文档打印或打印预览后立即在对象上触发。
.常量 网页事件_onafterupdate, "“onafterupdate”", 隐藏, 当成功更新数据源对象中的关联对象后在数据绑定对象上触发。
.常量 网页事件_onbeforeactivate, "“onbeforeactivate”", 隐藏, 对象要被设置为当前元素前立即触发。
.常量 网页事件_onbeforecopy, "“onbeforecopy”", 隐藏, 当选中区复制到系统剪贴板之前在源对象触发。
.常量 网页事件_onbeforecut, "“onbeforecut”", 隐藏, 当选中区从文档中删除之前在源对象触发。
.常量 网页事件_onbeforedeactivate, "“onbeforedeactivate”", 隐藏, 在 activeElement 从当前对象变为父文档其它对象之前立即触发。
.常量 网页事件_onbeforeeditfocus, "“onbeforeeditfocus”", 隐藏, 在包含于可编辑元素内的对象进入用户界面激活状态前或可编辑容器变成控件选中区前触发。
.常量 网页事件_onbeforepaste, "“onbeforepaste”", 隐藏, 在选中区从系统剪贴板粘贴到文档前在目标对象上触发。
.常量 网页事件_onbeforeprint, "“onbeforeprint”", 隐藏, 对象的关联文档打印或打印预览前在对象上触发。
.常量 网页事件_onbeforeunload, "“onbeforeunload”", 隐藏, 在页面将要被卸载前触发。
.常量 网页事件_onbeforeupdate, "“onbeforeupdate”", 隐藏, 当成功更新数据源对象中的关联对象前在数据绑定对象上触发。
.常量 网页事件_onblur, "“onblur”", 隐藏, 在对象失去输入焦点时触发。***************
.常量 网页事件_onbounce, "“onbounce”", 隐藏, 当 marquee 对象的 behavior 属性设置为“alternate”且字幕的内容到达窗口一边时触发。
.常量 网页事件_oncellchange, "“oncellchange”", 隐藏, 在数据供应者中的数据变更时触发。
.常量 网页事件_onchange, "“onchange”", 隐藏, 当对象或选中区的内容改变时触发。
.常量 网页事件_oncontextmenu, "“oncontextmenu”", 隐藏, 在用户使用鼠标右键单击客户区打开上下文菜单时触发。
.常量 网页事件_oncontrolselect, "“oncontrolselect”", 隐藏, 当用户将要对该对象制作一个控件选中区时触发。
.常量 网页事件_oncopy, "“oncopy”", 隐藏, 当用户复制对象或选中区，将其添加到系统剪贴板上时在源元素上触发。
.常量 网页事件_oncut, "“oncut”", 隐藏, 当对象或选中区从文档中删除并添加到系统剪贴板上时在源元素上触发。
.常量 网页事件_ondataavailable, "“ondataavailable”", 隐藏, 每当异步传输数据的数据源对象的数据到达时触发。
.常量 网页事件_ondatasetchanged, "“ondatasetchanged”", 隐藏, 当数据源对象对应的数据集发生变更时触发。
.常量 网页事件_ondatasetcomplete, "“ondatasetcomplete”", 隐藏, 触发就表明数据源对象所有数据都可用。
.常量 网页事件_ondeactivate, "“ondeactivate”", 隐藏, 当 activeElement 从当前对象变为父文档其它对象时触发。
.常量 网页事件_ondrag, "“ondrag”", 隐藏, 当进行拖曳操作时在源对象上持续触发。
.常量 网页事件_ondragend, "“ondragend”", 隐藏, 当用户在拖曳操作结束后释放鼠标时在源对象上触发。
.常量 网页事件_ondragenter, "“ondragenter”", 隐藏, 当用户拖曳对象到一个合法拖曳目标时在目标元素上触发。
.常量 网页事件_ondragleave, "“ondragleave”", 隐藏, 当用户在拖曳操作过程中将鼠标移出合法拖曳目标时在目标对象上触发。
.常量 网页事件_ondragover, "“ondragover”", 隐藏, 当用户拖曳对象划过合法拖曳目标时持续在目标元素上触发。
.常量 网页事件_ondragstart, "“ondragstart”", 隐藏, 当用户开始拖曳文本选中区或选中对象时在源对象上触发。
.常量 网页事件_ondrop, "“ondrop”", 隐藏, 当鼠标按钮在拖曳操作过程中释放时在目标对象上触发。
.常量 网页事件_onerror, "“onerror”", 隐藏, 当对象装载过程中发生错误时触发。
.常量 网页事件_onerrorupdate, "“onerrorupdate”", 隐藏, 更新数据源对象中的关联数据出错时在数据绑定对象上触发。
.常量 网页事件_onfilterchange, "“onfilterchange”", 隐藏, 当可视滤镜更改状态或完成转换时触发。
.常量 网页事件_onfinish, "“onfinish”", 隐藏, 当字幕循环完成后触发。
.常量 网页事件_onfocus, "“onfocus”", 隐藏, 当对象获得焦点时触发。
.常量 网页事件_onfocusin, "“onfocusin”", 隐藏, 当元素将要被设置为焦点之前触发。
.常量 网页事件_onfocusout, "“onfocusout”", 隐藏, 在移动焦点到其它元素之后立即触发于当前拥有焦点的元素上触发。
.常量 网页事件_onhelp, "“onhelp”", 隐藏, 当用户在浏览器为当前窗口时按
.常量 网页事件_onkeydown, "“onkeydown”", 隐藏, 当用户按下键盘按键时触发。
.常量 网页事件_onkeypress, "“onkeypress”", 隐藏, 当用户按下字面键时触发。
.常量 网页事件_onkeyup, "“onkeyup”", 隐藏, 当用户释放键盘按键时触发。
.常量 网页事件_onlayoutcomplete, "“onlayoutcomplete”", 隐藏, 当打印或打印预览版面处理完成用来自于源文档的内容填充当前
.常量 网页事件_onload, "“onload”", 隐藏, 在浏览器完成对象的装载后立即触发。
.常量 网页事件_onlosecapture, "“onlosecapture”", 隐藏, 当对象失去鼠标捕捉时触发。
.常量 网页事件_onmousedown, "“onmousedown”", 隐藏, 当用户用任何鼠标按钮单击对象时触发。
.常量 网页事件_onmouseenter, "“onmouseenter”", 隐藏, 当用户将鼠标指针移动到对象内时触发。
.常量 网页事件_onmouseleave, "“onmouseleave”", 隐藏, 当用户将鼠标指针移出对象边界时触发。
.常量 网页事件_onmousemove, "“onmousemove”", 隐藏, 当用户将鼠标划过对象时触发。
.常量 网页事件_onmouseout, "“onmouseout”", 隐藏, 当用户将鼠标指针移出对象边界时触发。
.常量 网页事件_onmouseover, "“onmouseover”", 隐藏, 当用户将鼠标指针移动到对象内时触发。
.常量 网页事件_onmouseup, "“onmouseup”", 隐藏, 当用户在鼠标位于对象之上时释放鼠标按钮时触发。
.常量 网页事件_onmousewheel, "“onmousewheel”", 隐藏, 当鼠标滚轮按钮旋转时触发。
.常量 网页事件_onmove, "“onmove”", 隐藏, 当对象移动时触发。
.常量 网页事件_onmoveend, "“onmoveend”", 隐藏, 当对象停止移动时触发。
.常量 网页事件_onmovestart, "“onmovestart”", 隐藏, 当对象开始移动时触发。
.常量 网页事件_onpaste, "“onpaste”", 隐藏, 当用户粘贴数据以便从系统剪贴板向文档传送数据时在目标对象上触发。
.常量 网页事件_onpropertychange, "“onpropertychange”", 隐藏, 当在对象上发生属性更改时触发。
.常量 网页事件_onreadystatechange, "“onreadystatechange”", 隐藏, 当对象状态变更时触发。
.常量 网页事件_onreset, "“onreset”", 隐藏, 当用户重置表单时触发。
.常量 网页事件_onresize, "“onresize”", 隐藏, 当对象的大小将要改变时触发。
.常量 网页事件_onresizeend, "“onresizeend”", 隐藏, 当用户更改完控件选中区中对象的尺寸时触发。
.常量 网页事件_onresizestart, "“onresizestart”", 隐藏, 当用户开始更改控件选中区中对象的尺寸时触发。
.常量 网页事件_onrowenter, "“onrowenter”", 隐藏, 触发就表明当前行已经在数据源中更改，对象上有可用的新数据值。
.常量 网页事件_onrowexit, "“onrowexit”", 隐藏, 当数据源控件更改对象当前行前触发。
.常量 网页事件_onrowsdelete, "“onrowsdelete”", 隐藏, 当行将要从记录集中被删除时触发。
.常量 网页事件_onrowsinserted, "“onrowsinserted”", 隐藏, 当在当前记录集中插入新行后触发。
.常量 网页事件_onscroll, "“onscroll”", 隐藏, 当用户滚动对象的滚动条时触发。
.常量 网页事件_onselect, "“onselect”", 隐藏, 当当前选中区改变时触发。
.常量 网页事件_onselectionchange, "“onselectionchange”", 隐藏, 当文档的选中状态改变时触发。
.常量 网页事件_onselectstart, "“onselectstart”", 隐藏, 对象将要被选中时触发。
.常量 网页事件_onstart, "“onstart”", 隐藏, 在 marquee 对象的每次循环开始时触发。
.常量 网页事件_onstop, "“onstop”", 隐藏, 当用户单击停止按钮或离开
.常量 网页事件_onunload, "“onunload”", 隐藏, 在对象卸载前立即触发。
.常量 网页事件_onsubmit, "“onsubmit”", 隐藏, 当表单将要被提交时触发。
.常量 网页事件_focus, "“focus”", 隐藏, 控件获得焦点；
.常量 网页事件_click, "“click”", 隐藏, 在用户用鼠标左键单击对象时触发。
.常量 网页事件_onclick, "“onclick”", 隐藏, 在用户用鼠标左键单击对象时触发。
.常量 网页事件_ondblclick, "“ondblclick”", 隐藏, 当用户用鼠标左键双击对象时触发。
.常量 PROCESS_VM_OPERATION, "8", 隐藏, 内存操作
.常量 PROCESS_CREATE_THREAD, "2", 隐藏, 内存操作
.常量 PROCESS_DUP_HANDLE, "64", 隐藏, 内存操作
.常量 INFINITE, "-1", 隐藏, 内存操作
.常量 PROCESS_QUERY_INFORMATION, "1024", 隐藏, 内存操作
.常量 PROCESS_VM_READ, "16", 隐藏, 内存操作
.常量 PROCESS_ALL_ACCESS, "2035711", 隐藏, 内存操作
.常量 MEM_PRIVATE, "131072", 隐藏, 内存操作
.常量 PROCESS_VM_WRITE, "32", 隐藏, 内存操作
.常量 PAGE_READWRITE, "4", 隐藏, 内存操作
.常量 备份, "“SeBackupPrivilege”", 隐藏, 系统权限
.常量 启动, "“SeRestorePrivilege”", 隐藏, 系统权限
.常量 关机, "“SeShutdownPrivilege”", 隐藏, 系统权限
.常量 调试, "“SeDebugPrivilege”", 隐藏, 系统权限
.常量 GENERIC_READ, "-2147483648", 隐藏, 0x80000000
.常量 FILE_FLAG_SEQUENTIAL_SCAN, "134217728", 隐藏, 针对连续访问对文件缓冲进行优化
.常量 GENERIC_WRITE, "1073741824", 隐藏, 0x40000000
.常量 OPEN_ALWAYS, "4", 隐藏, 4
.常量 FILE_ATTRIBUTE_ARCHIVE, "32", 隐藏, 0x00000020
.常量 INTERNET_FLAG_RELOAD, "2147483648", 隐藏, 
.常量 INTERNET_COOKIE_THIRD_PARTY, "16", 隐藏, 运行第三方COOKIE
.常量 INTERNET_FLAG_NO_COOKIES, "524288", 隐藏, 
.常量 INTERNET_FLAG_NO_CACHE_WRITE, "67108864", 隐藏, 0x04000000
.常量 INTERNET_FLAG_NO_AUTO_REDIRECT, "2097152", 隐藏, HttpSendRequest、InternetOpenUrl 不自动处理重定向
.常量 INTERNET_FLAG_SECURE, "8388608", 隐藏, SSL访问
.常量 INTERNET_FLAG_IGNORE_REDIRECT_TO_HTTP, "32768", 隐藏, 禁用检测这一特殊类型的重新传入。当这个标志使用,WinINet透明允许将从HTTPS to HTTP的网址。这个标志可以使用的,HttpOpenRequest InternetOpenUrl
.常量 INTERNET_FLAG_IGNORE_REDIRECT_TO_HTTPS, "16384", 隐藏, 禁用检测这一特殊类型的重新传入。当这个标志使用,WinINet透明允许将从HTTP到HTTPS网址。这个标志可以使用的,HttpOpenRequest InternetOpenUrl
.常量 INTERNET_FLAG_PASSIVE, "134217728", 隐藏, FTP连接被动模式
.常量 INTERNET_OPTION_HTTP_DECODING, "65", 隐藏, Enables WinINet to perform decoding for the gzip and deflate encoding schemes. For more information, see Content Encoding
.常量 常量_SC_MANAGER_CREATE_SERVICE, "2", 隐藏, 
.常量 常量_SERVICE_ALL_ACCESS, "983551", 隐藏, 
.常量 常量_SERVICE_WIN32_OWN_PROCESS, "16", 隐藏, 
.常量 常量_SERVICE_STOPPED, "1", 隐藏, 
.常量 常量_SERVICE_ACCEPT_STOP, "1", 隐藏, 
.常量 常量_SERVICE_ACCEPT_SHUTDOWN, "4", 隐藏, 
.常量 常量_SERVICE_WIN32_SHARE_PROCESS, "32", 隐藏, 
.常量 常量_NO_ERROR, "0", 隐藏, 
.常量 常量_SERVICE_CONTROL_SHUTDOWN, "5", 隐藏, shutdown
.常量 常量_SERVICE_CONTROL_STOP, "1", 隐藏, 
.常量 常量_SERVICE_CONFIG_DESCRIPTION, "1", 隐藏, 
.常量 常量_SERVICE_ERROR_NORMAL, "1", 隐藏, 
.常量 常量_SERVICE_INTERACTIVE_PROCESS, "256", 隐藏, 
.常量 常量_SERVICE_AUTO_START, "2", 隐藏, 0x00000002
.常量 GENERIC_EXECUTE, "536870912", 隐藏, 0x20000000L
.常量 SERVICE_START, "16", 隐藏, 0x0010
.常量 SC_MANAGER_ALL_ACCESS, "983103", 隐藏, 0x000F003FL
.常量 SERVICE_QUERY_STATUS, "4", 隐藏, 0x0004
.常量 SERVICE_STOP, "32", 隐藏, 0x0020
.常量 DELETE, "65536", 隐藏, 0x00010000L
.常量 SC_MANAGER_LOCK, "8", 隐藏, 0x0008
.常量 SERVICE_CHANGE_CONFIG, "2", 隐藏, 0x0002
.常量 SERVICE_QUERY_CONFIG, "1", 隐藏, 0x0001
.常量 SERVICE_NO_CHANGE, "-1", 隐藏, 0xffffffff
.常量 SQL_NULL_HANDLE, "0", 隐藏, 
.常量 SQL_HANDLE_ENV, "1", 隐藏, 
.常量 SQL_HANDLE_DBC, "2", 隐藏, 
.常量 SQL_HANDLE_STMT, "3", 隐藏, 
.常量 SQL_HANDLE_DESC, "4", 隐藏, 
.常量 SQL_SUCCESS, "0", 隐藏, 
.常量 SQL_SUCCESS_WITH_INFO, "1", 隐藏, 
.常量 SQL_NO_DATA, "100", 隐藏, 
.常量 SQL_ERROR, "-1", 隐藏, 
.常量 SQL_INVALID_HANDLE, "-2", 隐藏, 
.常量 SQL_STILL_EXECUTING, "2", 隐藏, 
.常量 SQL_NEED_DATA, "99", 隐藏, 
.常量 SQL_ATTR_ODBC_VERSION, "200", 隐藏, 
.常量 SQL_ATTR_CONNECTION_POOLING, "201", 隐藏, 
.常量 SQL_ATTR_CP_MATCH, "202", 隐藏, 
.常量 SQL_OV_ODBC2, "2", 隐藏, 
.常量 SQL_OV_ODBC3, "3", 隐藏, 
.常量 SQL_IS_POINTER, "-4", 隐藏, 
.常量 SQL_IS_UINTEGER, "-5", 隐藏, 
.常量 SQL_IS_INTEGER, "-6", 隐藏, 
.常量 SQL_IS_USMALLINT, "-7", 隐藏, 
.常量 SQL_IS_SMALLINT, "-8", 隐藏, 
.常量 SQL_SIGNED_OFFSET, "-20", 隐藏, 
.常量 SQL_UNSIGNED_OFFSET, "-22", 隐藏, 
.常量 SQL_C_SLONG, "-16", 隐藏, 
.常量 SQL_DRIVER_NOPROMPT, "0", 隐藏, 
.常量 SQL_DRIVER_COMPLETE, "1", 隐藏, 
.常量 SQL_DRIVER_PROMPT, "2", 隐藏, 
.常量 SQL_DRIVER_COMPLETE_REQUIRED, "3", 隐藏, 
.常量 SQL_C_CHAR, "1", 隐藏, 
.常量 SQL_C_LONG, "4", 隐藏, 
.常量 SQL_C_SHORT, "5", 隐藏, 
.常量 SQL_C_FLOAT, "7", 隐藏, 
.常量 SQL_C_DOUBLE, "8", 隐藏, 
.常量 SQL_C_NUMERIC, "2", 隐藏, 
.常量 SQL_C_DEFAULT, "99", 隐藏, 
.常量 SQL_C_DATE, "9", 隐藏, 
.常量 SQL_C_TIME, "10", 隐藏, 
.常量 SQL_C_TIMESTAMP, "11", 隐藏, 
.常量 SQL_C_BINARY, "-2", 隐藏, 
.常量 SQL_C_BIT, "-7", 隐藏, 
.常量 SQL_C_SBIGINT, "-22", 隐藏, 
.常量 SQL_C_UBIGINT, "-24", 隐藏, 
.常量 SQL_C_TINYINT, "-6", 隐藏, 
.常量 SQL_UNKNOWN_TYPE, "0", 隐藏, 
.常量 SQL_CHAR, "1", 隐藏, 
.常量 SQL_NUMERIC, "2", 隐藏, 
.常量 SQL_DECIMAL, "3", 隐藏, 
.常量 SQL_INTEGER, "4", 隐藏, 
.常量 SQL_SMALLINT, "5", 隐藏, 
.常量 SQL_FLOAT, "6", 隐藏, 
.常量 SQL_REAL, "7", 隐藏, 
.常量 SQL_DOUBLE, "8", 隐藏, 
.常量 SQL_DATE, "9", 隐藏, 
.常量 SQL_TIME, "10", 隐藏, 
.常量 SQL_TIMESTAMP, "11", 隐藏, 
.常量 SQL_VARCHAR, "12", 隐藏, 
.常量 SQL_LONGVARCHAR, "-1", 隐藏, 
.常量 SQL_BINARY, "-2", 隐藏, 
.常量 SQL_VARBINARY, "-3", 隐藏, 
.常量 SQL_LONGVARBINARY, "-4", 隐藏, 
.常量 SQL_BIGINT, "-5", 隐藏, 
.常量 SQL_TINYINT, "-6", 隐藏, 
.常量 SQL_BIT, "-7", 隐藏, 
.常量 SQL_GUID, "-11", 隐藏, 
.常量 SQL_ATTR_ACCESS_MODE, "101", 隐藏, 
.常量 SQL_ATTR_AUTOCOMMIT, "102", 隐藏, 
.常量 SQL_ATTR_CONNECTION_TIMEOUT, "113", 隐藏, 
.常量 SQL_ATTR_CURRENT_CATALOG, "109", 隐藏, 
.常量 SQL_ATTR_DISCONNECT_BEHAVIOR, "114", 隐藏, 
.常量 SQL_ATTR_ENLIST_IN_DTC, "1207", 隐藏, 
.常量 SQL_ATTR_ENLIST_IN_XA, "1208", 隐藏, 
.常量 SQL_ATTR_LOGIN_TIMEOUT, "103", 隐藏, 
.常量 SQL_ATTR_ODBC_CURSORS, "110", 隐藏, 
.常量 SQL_ATTR_PACKET_SIZE, "112", 隐藏, 
.常量 SQL_ATTR_QUIET_MODE, "111", 隐藏, 
.常量 SQL_ATTR_TRACE, "104", 隐藏, 
.常量 SQL_ATTR_TRACEFILE, "105", 隐藏, 
.常量 SQL_ATTR_TRANSLATE_LIB, "106", 隐藏, 
.常量 SQL_ATTR_TRANSLATE_OPTION, "107", 隐藏, 
.常量 SQL_ATTR_TXN_ISOLATION, "108", 隐藏, 
.常量 SQL_ATTR_CONNECTION_DEAD, "1209", 隐藏, 
.常量 SQL_CD_TRUE, "1", 隐藏, 
.常量 SQL_CD_FALSE, "0", 隐藏, 
.常量 SQL_PARAM_TYPE_UNKNOWN, "0", 隐藏, 
.常量 SQL_PARAM_INPUT, "1", 隐藏, 
.常量 SQL_PARAM_INPUT_OUTPUT, "2", 隐藏, 
.常量 SQL_RESULT_COL, "3", 隐藏, 
.常量 SQL_PARAM_OUTPUT, "4", 隐藏, 
.常量 SQL_RETURN_VALUE, "5", 隐藏, 
.常量 SQL_NTS, "-3", 隐藏, 
.常量 SQL_AUTOCOMMIT_OFF, "0", 隐藏, 
.常量 SQL_AUTOCOMMIT_ON, "1", 隐藏, 
.常量 SQL_COMMIT, "0", 隐藏, 
.常量 SQL_ROLLBACK, "1", 隐藏, 
.常量 SQL_ATTR_CURSOR_TYPE, "6", 隐藏, 
.常量 SQL_ATTR_ROW_NUMBER, "14", 隐藏, 
.常量 SQL_ATTR_MAX_ROWS, "1", 隐藏, 
.常量 光标类型_向前, "0", 隐藏, SQL_CURSOR_FORWARD_ONLY
.常量 光标类型_键集, "1", 隐藏, SQL_CURSOR_KEYSET_DRIVEN
.常量 光标类型_动态, "2", 隐藏, SQL_CURSOR_DYNAMIC
.常量 光标类型_静态, "3", 隐藏, SQL_CURSOR_STATIC
.常量 SQL_FETCH_NEXT, "1", 隐藏, 移动_下一行
.常量 SQL_FETCH_FIRST, "2", 隐藏, 移动_首行
.常量 SQL_FETCH_LAST, "3", 隐藏, 移动_尾行
.常量 SQL_FETCH_PRIOR, "4", 隐藏, 移动_上一行
.常量 SQL_FETCH_ABSOLUTE, "5", 隐藏, 移动_绝对移动
.常量 SQL_FETCH_RELATIVE, "6", 隐藏, 移动_相对移动
.常量 INTERNET_OPTION_PROXY, "38", 隐藏, Internet常量代理服务器
.常量 INTERNET_OPTION_SETTINGS_CHANGED, "39", 隐藏, Internet常量IE设置改变
.常量 INTERNET_OPTION_CONNECT_TIMEOUT, "2", 隐藏, 连接超时
.常量 INTERNET_OPTION_SEND_TIMEOUT, "5", 隐藏, 发送超时
.常量 INTERNET_OPTION_RECEIVE_TIMEOUT, "6", 隐藏, 回复超时
.常量 INTERNET_OPEN_TYPE_DIRECT, "1", 隐藏, Internet打开类型-直连
.常量 INTERNET_OPEN_TYPE_PROXY, "3", 隐藏, Internet打开类型-代理
.常量 SQLITE_成功, "0", 隐藏, SQLITE_OK
.常量 SQLITE_错误, "1", 隐藏, SQLITE_ERROR SQL 错误或没有数据库
.常量 SQLITE_内部, "2", 隐藏, SQLITE_INTERNAL 一个SQLite内部的逻辑错误
.常量 SQLITE_权限, "3", 隐藏, SQLITE_PERM 访问权限被拒绝
.常量 SQLITE_终止, "4", 隐藏, SQLITE_ABORT 需要一个中断的Callback指令
.常量 SQLITE_繁忙, "5", 隐藏, SQLITE_BUSY 数据据库文件被锁定
.常量 SQLITE_锁定, "6", 隐藏, SQLITE_LOCKED 表被锁定
.常量 SQLITE_申请内存失败, "7", 隐藏, SQLITE_NOMEM
.常量 SQLITE_只读, "8", 隐藏, SQLITE_READONLY 试图写一个只读的数据库
.常量 SQLITE_中断, "9", 隐藏, SQLITE_INTERRUPT 操作被中断结束
.常量 SQLITE_IO错误, "10", 隐藏, SQLITE_IOERR 某种磁盘I/O错误发生
.常量 SQLITE_损坏, "11", 隐藏, SQLITE_CORRUPT 数据库磁盘镜像异常
.常量 SQLITE_为找到, "12", 隐藏, SQLITE_NOTFOUND 未使用。表或记录不存在
.常量 SQLITE_数据库满, "13", 隐藏, SQLITE_FULL 数据库满，插入失败
.常量 SQLITE_不能打开, "14", 隐藏, SQLITE_CANTOPEN 不能打开数据库文件
.常量 SQLITE_协议, "15", 隐藏, SQLITE_PROTOCOL 数据库错定协议错
.常量 SQLITE_无表, "16", 隐藏, SQLITE_EMPTY 数据库表为空
.常量 SQLITE_结构, "17", 隐藏, SQLITE_SCHEMA 数据库结构被改变
.常量 SQLITE_表太大, "18", 隐藏, SQLITE_TOOBIG 一个表的行数据过多
.常量 SQLITE_约束, "19", 隐藏, SQLITE_CONSTRAINT 由于约束冲突而中止
.常量 SQLITE_不匹配, "20", 隐藏, SQLITE_MISMATCH 数据类型不匹配
.常量 SQLITE_误用, "21", 隐藏, SQLITE_MISUSE 库被不正确使用
.常量 SQLITE_不支持OS, "22", 隐藏, SQLITE_NOLFS 主机不支持的OS特性
.常量 SQLITE_认证, "23", 隐藏, SQLITE_AUTH 授权被否定
.常量 SQLITE_格式, "24", 隐藏, SQLITE_FORMAT 辅助数据库格式错误
.常量 SQLITE_范围, "25", 隐藏, SQLITE_RANGE 绑定参数时索引超出范围
.常量 SQLITE_无数据库, "26", 隐藏, SQLITE_NOTADB 文件已打开但没有数据库
.常量 SQLITE_行, "100", 隐藏, SQLITE_ROW 有另一行就绪
.常量 SQLITE_完成, "101", 隐藏, SQLITE_DONE 已经完成执行
.常量 SQLITE_UTF8, "1", 隐藏, 
.常量 SQLITE_UTF16, "2", 隐藏, 
.常量 SQLITE_UTF16BE, "3", 隐藏, 
.常量 SQLITE_UTF16LE, "4", 隐藏, 
.常量 SQLITE_ANY, "5", 隐藏, 
.常量 SQLITE_OPEN_READONLY, "1", 隐藏, 
.常量 SQLITE_OPEN_READWRITE, "2", 隐藏, 
.常量 SQLITE_OPEN_CREATE, "4", 隐藏, 
.常量 S3字段类型_整型, "1", 隐藏, SQLITE_INTEGER
.常量 S3字段类型_浮点型, "2", 隐藏, SQLITE_FLOAT
.常量 S3字段类型_文本型, "3", 隐藏, SQLITE_TEXT
.常量 S3字段类型_字节集型, "4", 隐藏, SQLITE_BLOB
.常量 S3字段类型_空, "5", 隐藏, SQLITE_NULL
.常量 S3析构_静态, "0", 隐藏, SQLITE_STATIC
.常量 S3析构_临时, "-1", 隐藏, SQLITE_TRANSIENT
.常量 S3触发条件_插入, "0", 隐藏, 
.常量 S3触发条件_删除, "1", 隐藏, 
.常量 S3触发条件_更新, "2", 隐藏, 
.常量 S3触发条件_字段更新, "3", 隐藏, 
.常量 S3触发时间_普通模式, "0", 隐藏, 
.常量 S3触发时间_之前, "1", 隐藏, 
.常量 S3触发时间_之后, "2", 隐藏, 
.常量 SW_SHOWMINNOACTIVE, "7", 隐藏, 
.常量 SW_SHOWNOACTIVATE, "4", 隐藏, 
.常量 SW_SHOWMAXIMIZED, "3", 隐藏, 
.常量 SW_SHOWMINIMIZED, "2", 隐藏, 
.常量 SW_SHOWNORMAL, "1", 隐藏, 
.常量 SW_SHOWDEFAULT, "10", 隐藏, 按默认状态显示
.常量 SEE_MASK_FLAG_DDEWAIT, "256", 隐藏, 0x00000100
.常量 ABE_BOTTOM, "3", 隐藏, 系统_取DOS执行结果
.常量 SW_HIDE, "0", 隐藏, 
.常量 STARTF_USESHOWWINDOW, "1", 隐藏, 
.常量 STARTF_USESTDHANDLES, "256", 隐藏, 
.常量 STILL_ACTIVE, "259", 隐藏, 
.常量 URLMON_OPTION_USERAGENT, "268435457", 隐藏, 
.常量 HKEY_DYN_DATA, "-2147483642", 隐藏, 
.常量 HKEY_CURRENT_CONFIG, "-2147483643", 隐藏, 包含了当前系统配置的信息。 　
.常量 HKEY_PERFORMANCE_DATA, "-2147483644", 隐藏, 仅XP/winNT/win2000可用
.常量 HKEY_USERS, "-2147483645", 隐藏, 用作默认用户首选设置，也作为单个用户的首选设置。
.常量 HKEY_LOCAL_MACHINE, "-2147483646", 隐藏, 包含描述计算机及其配置的条目。其中包括关于处理器、系统主板、内存和已安装的软件和硬件的信息。 　
.常量 HKEY_CURRENT_USER, "-2147483647", 隐藏, 是用于当前（登录）用户的相关信息。 
.常量 HKEY_CLASSES_ROOT, "-2147483648", 隐藏, 是与文档类型和 OLE\COM 相关的信息的支持键。这个键是 HKEY_LOCAL_MACHINE的从属键。 
.常量 KEY_ALL_ACCESS, "983103", 隐藏, 所有权限:包括读/写KEY_READ/KEY_WRITE
.常量 KEY_WOW64_64KEY, "256", 隐藏, 0x0100
.常量 KEY_WOW64_32KEY, "512", 隐藏, 0x0200
.常量 KEY_READ, "131097", 隐藏, 
.常量 KEY_WRITE, "131078", 隐藏, 
.常量 REG_NONE, "0", 隐藏, 未定义值类型
.常量 REG_BINARY, "3", 隐藏, 二进制数据
.常量 REG_DWORD, "4", 隐藏, REG_DWORD
.常量 REG_SZ, "1", 隐藏, 文本型数据
.常量 REG_DWORD_LITTLE_ENDIAN, "4", 隐藏, 大计数法格式32位数字，一个字的有效字节是高端字
.常量 REG_DWORD_BIG_ENDIAN, "5", 隐藏, 大计数法格式32位数字，一个字的有效字节是低端字
.常量 REG_LINK, "6", 隐藏, 单一代码符号链
.常量 REG_EXPAND_SZ, "2", 隐藏, 空终止字符串，包括对"&TEMP&"之类环境变量的引用
.常量 REG_MULTI_SZ, "7", 隐藏, 定义包括空终止字符串的数组，数组被两个实际的空字符串结束
.常量 ERROR_MORE_DATA, "234", 隐藏, 
.常量 ERROR_NO_MORE_ITEMS, "259", 隐藏, 259L
.常量 WS_EX_TOPMOST, "8", 隐藏, 窗口置顶(停留在所有非最高层窗口的上面)
.常量 WS_DISABLED, "134217728", 隐藏, 不可用状态
.常量 CDS_FULLSCREEN, "4", 隐藏, 0x00000004
.常量 CDS_GLOBAL, "8", 隐藏, 0x00000008
.常量 CDS_UPDATEREGISTRY, "1", 隐藏, 0x00000001
.常量 WS_EX_ACCEPTFILES, "16", 隐藏, 
.常量 HEAP_ZERO_MEMORY, "8", 隐藏, 
.常量 INVALID_HANDLE, "-1", 隐藏, 
.常量 REG_OPTION_NON_VOLATILE, "0", 隐藏, 
.常量 REG_QWORD, "11", 隐藏, 
.常量 托盘事件_移动鼠标, "512", 隐藏, 移动鼠标
.常量 托盘事件_按下鼠标左键, "513", 隐藏, 按下鼠标左键
.常量 托盘事件_释放鼠标左键, "514", 隐藏, 释放鼠标左键
.常量 托盘事件_双击鼠标左键, "515", 隐藏, 双击鼠标左键
.常量 托盘事件_按下鼠标右键, "516", 隐藏, 按下鼠标右键
.常量 托盘事件_释放鼠标右键, "517", 隐藏, 释放鼠标右键
.常量 托盘事件_双击鼠标右键, "518", 隐藏, 双击鼠标右键
.常量 托盘事件_按下鼠标中键, "519", 隐藏, 按下鼠标中键
.常量 托盘事件_释放鼠标中键, "520", 隐藏, 释放鼠标中键
.常量 托盘事件_双击鼠标中键, "521", 隐藏, 双击鼠标中键
.常量 托盘事件_任务重建, "1120", 隐藏, 
.常量 托盘事件_托盘退出, "1130", 隐藏, 
.常量 托盘图标_无图标, "0", 隐藏, 
.常量 托盘图标_信息图标, "1", 隐藏, 
.常量 托盘图标_警告图标, "2", 隐藏, 
.常量 托盘图标_错误图标, "3", 隐藏, 
.常量 WS_CHILD, "1073741824", 隐藏, 
.常量 GW_HWNDLAST, "1", 隐藏, 
.常量 GW_HWNDPREV, "3", 隐藏, 
.常量 WINHTTP_ACCESS_TYPE_NO_PROXY, "1", 隐藏, 直接访问，不使用代理。
.常量 WINHTTP_ACCESS_TYPE_DEFAULT_PROXY, "2", 隐藏, 通过静态代理或注册表配置的代理访问。不继承和不共享IE的代理设置，调用WinHttpSetDefaultProxyConfiguration进行设置。
.常量 WINHTTP_ACCESS_TYPE_NAMED_PROXY, "3", 隐藏, 通过指定名称的代理访问。
.常量 INTERNET_SCHEME_HTTPS, "2", 隐藏, 
.常量 INTERNET_SCHEME_HTTP, "1", 隐藏, 
.常量 WINHTTP_NO_REFERER, "0", 隐藏, 没有来源页面
.常量 WINHTTP_DEFAULT_ACCEPT_TYPES, "0", 隐藏, 默认文件类型
.常量 WINHTTP_FLAG_SECURE, "8388608", 隐藏, SSL/TLS安全超文本协议。
.常量 WINHTTP_AUTH_TARGET_SERVER, "0", 隐藏, 验证目标：网站服务器。
.常量 WINHTTP_AUTH_TARGET_PROXY, "1", 隐藏, 验证目标：代理服务器。
.常量 WINHTTP_AUTH_SCHEME_BASIC, "1", 隐藏, 基本认证方式(BASE64加密)。
.常量 WINHTTP_OPTION_DISABLE_FEATURE, "63", 隐藏, 禁用功能
.常量 WINHTTP_OPTION_ENABLE_FEATURE, "79", 隐藏, 
.常量 WINHTTP_DISABLE_COOKIES, "1", 隐藏, 禁用自动设置COOKIES
.常量 WINHTTP_DISABLE_REDIRECTS, "2", 隐藏, 禁用重定向
.常量 WINHTTP_OPTION_SECURITY_FLAGS, "31", 隐藏, 忽略证书错误 #define WINHTTP_OPTION_SECURITY_FLAGS                31
.常量 WINHTTP_ADDREQ_FLAG_ADD, "536870912", 隐藏, 添加一个协议头，如果协议头已存在则被新值替换，与WINHTTP_ADDREQ_FLAG_REPLACE标志一起使用。
.常量 WINHTTP_ADDREQ_FLAG_REPLACE, "-2147483648", 隐藏, 替换或者删除一个协议头，如果值为空则删除，否则被替换。
.常量 WINHTTP_QUERY_RAW_HEADERS_CRLF, "22", 隐藏, 协议头以换行符分割
.常量 WINHTTP_NO_HEADER_INDEX, "0", 隐藏, 没有协议索引
.常量 WINHTTP_ADDREQ_FLAG_ADD_IF_NEW, "268435456", 隐藏, 只有不存在的时候才添加
.常量 WINHTTP_ADDREQ_FLAG_COALESCE, "1073741824", 隐藏, 合并相同的名称
.常量 WINHTTP_ADDREQ_FLAG_COALESCE_WITH_COMMA, "1073741824", 隐藏, 合并相同的名称使用逗号
.常量 WINHTTP_ADDREQ_FLAG_COALESCE_WITH_SEMICOLON, "16777216", 隐藏, 合并相投的名称使用分号
.常量 VER_NT_WORKSTATION, "1", 隐藏, 
.常量 SystemProcessInformation, "5", 隐藏, 进程_取父ID
.常量 WH_KEYBOARD, "2", 隐藏, 
.常量 WH_KEYBOARD_LL, "13", 隐藏, 
.常量 WH_MOUSE_LL, "14", 隐藏, 
.常量 WH_MOUSE, "7", 隐藏, 
.常量 HC_ACTION, "0", 隐藏, 
.常量 INVALID_HANDLE_VALUE, "-1", 隐藏, 
.常量 SERVICE_INTERACTIVE_PROCESS, "256", 隐藏, 
.常量 SERVICE_ALL_ACCESS, "983551", 隐藏, 
.常量 SERVICE_ERROR_NORMAL, "1", 隐藏, 
.常量 SC_MANAGER_CONNECT, "1", 隐藏, 
.常量 SERVICE_ENUMERATE_DEPENDENTS, "8", 隐藏, 
.常量 SC_MANAGER_ENUMERATE_SERVICE, "4", 隐藏, 
.常量 NIF_INFO, "16", 隐藏, 
.常量 NIF_ICON, "2", 隐藏, 
.常量 NIF_TIP, "4", 隐藏, 
.常量 NIF_MESSAGE, "1", 隐藏, 
.常量 STD_OUTPUT_HANDLE, "-11", 隐藏, 
.常量 STD_INPUT_HANDLE, "-10", 隐藏, 
.常量 EM_REPLACESEL, "194", 隐藏, 
.常量 FOREGROUND_RED, "4", 隐藏, 
.常量 FOREGROUND_INTENSITY, "8", 隐藏, 
.常量 FOREGROUND_GREEN, "2", 隐藏, 
.常量 FOREGROUND_BLUE, "1", 隐藏, 
.常量 GMEM_MOVEABLE, "2", 隐藏, 
.常量 sizeof_SECURITY_ATTRIBUTES, "12", 隐藏, 
.常量 sizeof_STARTUPINFO, "68", 隐藏, 
.常量 LIST_MODULES_32BIT, "1", 隐藏, 
.常量 LIST_MODULES_64BIT, "2", 隐藏, 
.常量 LIST_MODULES_ALL, "3", 隐藏, 
.常量 LIST_MODULES_DEFAULT, "0", 隐藏, 
.常量 AuAppBat, "“@echo off
 
set _task=程序名
set _svr=程序路径
 
:checkstart
tasklist|findstr /i %_task%&&goto checkag||goto startsvr
 
 
 
:startsvr
echo %time%
echo ********程序开始启动********
echo 程序重新启动于 %time% ,请检查系统日志 >> restart_service.txt
set/p=.<nul
for /L %%i in (1 1 2) do set /p a=.<nul&ping.exe /n 1 127.0.0.1>nul
echo .
start %_svr%
echo Wscript.Sleep WScript.Arguments(0) >%tmp%/delay.vbs
cscript //b //nologo %tmp%/delay.vbs 1000
echo ********程序启动完成********
goto checkstart
 
 
:checkag
echo %time% 程序运行正常,1秒后继续检查..
echo Wscript.Sleep WScript.Arguments(0) >%tmp%/delay.vbs
cscript //b //nologo %tmp%/delay.vbs 1000
goto checkstart”", 隐藏, 
.常量 AuAppVBs, "“option Explicit    
dim wmi,proc,procs,proname,flag,WshShell    
Do  
    proname="程序名"  
set wmi=getobject("winmgmts:{impersonationlevel=impersonate}!\\.\root\cimv2")    
set procs=wmi.execquery("select * from win32_process")    
  flag=true    
for each proc in procs    
    if strcomp(proc.name,proname)=0 then    
      flag=false    
      exit for    
    end if    
next    
  set wmi=nothing    
  if flag then    
    Set WshShell = Wscript.CreateObject("Wscript.Shell")    
    WshShell.Run ("程序路径")    
end if    
  wscript.sleep 1000 '检测间隔时间，这里是50秒    
loop”", 隐藏, 
.常量 IP_SUCCESS, "0", 隐藏, 
.常量 TIME_FORCE24HOURFORMAT, "8", 隐藏, 0x00000008 ----强制使用24小时制。
.常量 GWL_EXSTYLE, "-20", 隐藏, 设置/获取一个新的扩展风格。
.常量 GWL_HINSTANCE, "-6", 隐藏, 设置/获取一个新的应用程序实例句柄。
.常量 GWL_ID, "-12", 隐藏, 设置/获取一个新的窗口标识符。
.常量 GWL_STYLE, "-16", 隐藏, 设置/获取一个新的窗口风格。
.常量 GWL_USERDATA, "-21", 隐藏, 设置/获取与窗口有关的32位值。每个窗口均有一个由创建该窗口的应用程序使用的32位值。
.常量 GWL_WNDPROC, "-4", 隐藏, 设置一个新的处理函数。/获得窗口过程的地址，或代表窗口过程的地址的句柄。必须使用CallWindowProc函数调用窗口过程。
.常量 GWL_HWNDPARENT, "-8", 隐藏, 设置/获取子窗口的父窗口,应使用SetParent函数。
.常量 显示rar窗口, "2", 隐藏, 普通激活
.常量 隐藏rar窗口, "1", 隐藏, 隐藏窗口
.常量 系统_ALLUSERSPROFILE, "“ALLUSERSPROFILE”", 隐藏, 局部 返回所有“用户配置文件”的位置。
.常量 系统_APPDATA, "“APPDATA”", 隐藏, 局部 返回默认情况下应用程序存储数据的位置。
.常量 系统_CD, "“CD”", 隐藏, 局部 返回当前目录字符串。
.常量 系统_CMDCMDLINE, "“CMDCMDLINE”", 隐藏, 局部 返回用来启动当前的 Cmd.exe 的准确命令行。
.常量 系统_CMDEXTVERSION, "“CMDEXTVERSION”", 隐藏, 系统 返回当前的“命令处理程序扩展”的版本号。
.常量 系统_COMPUTERNAME, "“COMPUTERNAME”", 隐藏, 系统 返回计算机的名称。
.常量 系统_COMSPEC, "“COMSPEC”", 隐藏, 系统 返回命令行解释器可执行程序的准确路径。
.常量 系统_DATE, "“DATE”", 隐藏, 系统 返回当前日期。使用与 date /t 命令相同的格式。由 Cmd.exe 生成。有关 date 命令的详细信息，请参阅 Date。
.常量 系统_ERRORLEVEL, "“ERRORLEVEL”", 隐藏, 系统 返回使用过的命令的错误代码。通常用非零值表示错误。
.常量 系统_HOMEDRIVE, "“HOMEDRIVE”", 隐藏, 系统 返回连接到用户主目录的本地工作站驱动器号。基于主目录值的设置。用户主目录是在“本地用户和组”中指定的。
.常量 系统_HOMEPATH, "“HOMEPATH”", 隐藏, 系统 返回用户主目录的完整路径。基于主目录值的设置。用户主目录是在“本地用户和组”中指定的。
.常量 系统_HOMESHARE, "“HOMESHARE”", 隐藏, 系统 返回用户的共享主目录的网络路径。基于主目录值的设置。用户主目录是在“本地用户和组”中指定的。
.常量 系统_LOGONSEVER, "“LOGONSEVER”", 隐藏, 局部 返回验证当前登录会话的域控制器的名称。
.常量 系统_NUMBER_OF_PROCESSORS, "“NUMBER_OF_PROCESSORS”", 隐藏, 系统 指定安装在计算机上的处理器的数目。
.常量 系统_OS, "“OS”", 隐藏, 系统 返回操作系统的名称。Windows 2000 将操作系统显示为 Windows_NT。
.常量 系统_PATH, "“PATH”", 隐藏, 系统 指定可执行文件的搜索路径。
.常量 系统_PATHEXT, "“PATHEXT”", 隐藏, 系统 返回操作系统认为可执行的文件扩展名的列表。
.常量 系统_PROCESSOR_ARCHITECTURE, "“PROCESSOR_ARCHITECTURE”", 隐藏, 系统 返回处理器的芯片体系结构。值: x86，IA64。
.常量 系统_PROCESSOR_IDENTIFIER, "“PROCESSOR_IDENTIFIER”", 隐藏, 系统 返回处理器说明。
.常量 系统_PROCESSOR_LEVEL, "“PROCESSOR_LEVEL”", 隐藏, 系统 返回计算机上安装的处理器的型号。
.常量 系统_PROCESSOR_REVISION, "“PROCESSOR_REVISION”", 隐藏, 系统 返回处理器修订号的系统变量。
.常量 系统_PROMPT, "“PROMPT”", 隐藏, 局部 返回当前解释程序的命令提示符设置。由 Cmd.exe 生成。
.常量 系统_RANDOM, "“RANDOM”", 隐藏, 系统 返回 0 到 32767 之间的任意十进制数字。由 Cmd.exe 生成。
.常量 系统_SYSTEMDRIVE, "“SYSTEMDRIVE”", 隐藏, 系统 返回包含 Windows XP 根目录（即系统根目录）的驱动器。
.常量 系统_SYSTEMROOT, "“SYSTEMROOT”", 隐藏, 系统 返回 Windows XP 根目录的位置。
.常量 系统_TEMP, "“TEMP”", 隐藏, and %TMP% 系统和用户 返回对当前登录用户可用的应用程序所使用的默认临时目录。有些应用程序需要 TEMP，而其它应用程序则需要 TMP。
.常量 系统_TIME, "“TIME”", 隐藏, 系统 返回当前时间。使用与 time /t 命令相同的格式。由 Cmd.exe 生成。有关 time 命令的详细信息，请参阅 Time。
.常量 系统_USERDOMAIN, "“USERDOMAIN”", 隐藏, 局部 返回包含用户帐户的域的名称。
.常量 系统_USERNAME, "“USERNAME”", 隐藏, 局部 返回当前登录的用户的名称。
.常量 系统_UserProfile, "“UserProfile”", 隐藏, 局部 返回当前用户的配置文件的位置。
.常量 系统_WINDIR, "“WINDIR”", 隐藏, 系统 返回操作系统目录的位置。
.常量 PKCS5_PADDING, "1", 隐藏, 
.常量 RANDOM_PADDING, "2", 隐藏, 
.常量 ZERO_PADDING, "3", 隐藏, 
.常量 KP_IV, "1", 隐藏, 
.常量 KP_SALT, "2", 隐藏, 
.常量 KP_PADDING, "3", 隐藏, 
.常量 KP_MODE, "4", 隐藏, 
.常量 KP_MODE_BITS, "5", 隐藏, 
.常量 KP_PERMISSIONS, "6", 隐藏, 
.常量 KP_ALGID, "7", 隐藏, 
.常量 KP_BLOCKLEN, "8", 隐藏, 
.常量 KP_KEYLEN, "9", 隐藏, 
.常量 KP_SALT_EX, "10", 隐藏, 
.常量 KP_P, "11", 隐藏, 
.常量 KP_G, "12", 隐藏, 
.常量 KP_Q, "13", 隐藏, 
.常量 KP_X, "14", 隐藏, 
.常量 KP_Y, "15", 隐藏, 
.常量 KP_RA, "16", 隐藏, 
.常量 KP_RB, "17", 隐藏, 
.常量 KP_INFO, "18", 隐藏, 
.常量 KP_EFFECTIVE_KEYLEN, "19", 隐藏, 
.常量 KP_SCHANNEL_ALG, "20", 隐藏, 
.常量 KP_CLIENT_RANDOM, "21", 隐藏, 
.常量 KP_SERVER_RANDOM, "22", 隐藏, 
.常量 KP_RP, "23", 隐藏, 
.常量 KP_PRECOMP_MD5, "24", 隐藏, 
.常量 KP_PRECOMP_SHA, "25", 隐藏, 
.常量 KP_CERTIFICATE, "26", 隐藏, 
.常量 KP_CLEAR_KEY, "27", 隐藏, 
.常量 KP_PUB_EX_LEN, "28", 隐藏, 
.常量 KP_PUB_EX_VAL, "29", 隐藏, 
.常量 KP_KEYVAL, "30", 隐藏, 
.常量 KP_ADMIN_PIN, "31", 隐藏, 
.常量 KP_KEYEXCHANGE_PIN, "32", 隐藏, 
.常量 KP_SIGNATURE_PIN, "33", 隐藏, 
.常量 KP_ROUNDS, "35", 隐藏, 
.常量 KP_OAEP_PARAMS, "36", 隐藏, 
.常量 KP_CMS_KEY_INFO, "37", 隐藏, 
.常量 KP_CMS_DH_KEY_INFO, "38", 隐藏, 
.常量 KP_PUB_PARAMS, "39", 隐藏, 
.常量 KP_VERIFY_PARAMS, "40", 隐藏, 
.常量 KP_HIGHEST_VERSION, "41", 隐藏, 
.常量 KP_GET_USE_COUNT, "42", 隐藏, 
.常量 SIMPLEBLOB, "1", 隐藏, 
.常量 PUBLICKEYBLOB, "6", 隐藏, 
.常量 PRIVATEKEYBLOB, "7", 隐藏, 
.常量 PLAINTEXTKEYBLOB, "8", 隐藏, 
.常量 OPAQUEKEYBLOB, "9", 隐藏, 
.常量 PUBLICKEYBLOBEX, "10", 隐藏, 
.常量 SYMMETRICWRAPKEYBLOB, "11", 隐藏, 
.常量 CUR_BLOB_VERSION, "2", 隐藏, 
.常量 HP_HASHVAL, "2", 隐藏, 
.常量 CRYPT_MODE_CBC, "1", 隐藏, 
.常量 CRYPT_MODE_ECB, "2", 隐藏, 
.常量 CRYPT_MODE_OFB, "3", 隐藏, 
.常量 CRYPT_MODE_CFB, "4", 隐藏, 
.常量 CRYPT_MODE_CTS, "5", 隐藏, 
.常量 数据填充_NO_PADDING, "1", 隐藏, 
.常量 数据填充_ZERO_PADDING, "2", 隐藏, 
.常量 数据填充_ANSIX923_PADDING, "3", 隐藏, 
.常量 数据填充_ISO10126_PADDING, "4", 隐藏, 
.常量 数据填充_PKCS5_PADDING, "5", 隐藏, 
.常量 数据填充_PKCS7_PADDING, "7", 隐藏, 
.常量 对称算法_AES_CBC, "“AES-CBC”", 隐藏, 
.常量 对称算法_AES_ECB, "“AES-ECB”", 隐藏, 
.常量 对称算法_AES_OFB, "“AES-OFB”", 隐藏, win7 不支持
.常量 对称算法_AES_CFB, "“AES-CFB”", 隐藏, 
.常量 对称算法_AES_CTS, "“AES-CTS”", 隐藏, win7 不支持
.常量 对称算法_AES_192_CBC, "“AES192-CBC”", 隐藏, 
.常量 对称算法_AES_192_ECB, "“AES192-ECB”", 隐藏, 
.常量 对称算法_AES_192_OFB, "“AES192-OFB”", 隐藏, win7 不支持
.常量 对称算法_AES_192_CFB, "“AES192-CFB”", 隐藏, 
.常量 对称算法_AES_192_CTS, "“AES192-CTS”", 隐藏, win7 不支持
.常量 对称算法_AES_256_CBC, "“AES256-CBC”", 隐藏, 
.常量 对称算法_AES_256_ECB, "“AES256-ECB”", 隐藏, 
.常量 对称算法_AES_256_OFB, "“AES256-OFB”", 隐藏, win7 不支持
.常量 对称算法_AES_256_CFB, "“AES256-CFB”", 隐藏, 
.常量 对称算法_AES_256_CTS, "“AES256-CTS”", 隐藏, win7 不支持
.常量 对称算法_DES_CBC, "“DES-CBC”", 隐藏, 
.常量 对称算法_DES_ECB, "“DES-ECB”", 隐藏, 
.常量 对称算法_DES_OFB, "“DES-OFB”", 隐藏, win7 不支持
.常量 对称算法_DES_CFB, "“DES-CFB”", 隐藏, 
.常量 对称算法_DES_CTS, "“DES-CTS”", 隐藏, win7 不支持
.常量 对称算法_3DES_CBC, "“3DES-CBC”", 隐藏, 
.常量 对称算法_3DES_ECB, "“3DES-ECB”", 隐藏, 
.常量 对称算法_3DES_OFB, "“3DES-OFB”", 隐藏, win7 不支持
.常量 对称算法_3DES_CFB, "“3DES-CFB”", 隐藏, 
.常量 对称算法_3DES_CTS, "“3DES-CTS”", 隐藏, win7 不支持
.常量 对称算法_RC2, "“RC2”", 隐藏, 
.常量 对称算法_RC4, "“RC4”", 隐藏, 
.常量 NULL, "0", 隐藏, 
.常量 CALG_MD2, "32769", 隐藏, 
.常量 CALG_MD4, "32770", 隐藏, 
.常量 CALG_MD5, "32771", 隐藏, 
.常量 CALG_SHA, "32772", 隐藏, 
.常量 CALG_SHA1, "32772", 隐藏, 
.常量 CALG_MAC, "32773", 隐藏, 
.常量 CALG_RSA_SIGN, "9216", 隐藏, 
.常量 CALG_DSS_SIGN, "8704", 隐藏, 
.常量 CALG_NO_SIGN, "8192", 隐藏, 
.常量 CALG_RSA_KEYX, "41984", 隐藏, 
.常量 CALG_DES, "26113", 隐藏, 
.常量 CALG_3DES_112, "26121", 隐藏, 
.常量 CALG_3DES, "26115", 隐藏, 
.常量 CALG_DESX, "26116", 隐藏, 
.常量 CALG_RC2, "26114", 隐藏, 
.常量 CALG_RC4, "26625", 隐藏, 
.常量 CALG_SEAL, "26626", 隐藏, 
.常量 CALG_DH_SF, "43521", 隐藏, 
.常量 CALG_DH_EPHEM, "43522", 隐藏, 
.常量 CALG_AGREEDKEY_ANY, "43523", 隐藏, 
.常量 CALG_KEA_KEYX, "43524", 隐藏, 
.常量 CALG_HUGHES_MD5, "40963", 隐藏, 
.常量 CALG_SKIPJACK, "26122", 隐藏, 
.常量 CALG_TEK, "26123", 隐藏, 
.常量 CALG_CYLINK_MEK, "26124", 隐藏, 
.常量 CALG_SSL3_SHAMD5, "32776", 隐藏, 
.常量 CALG_SSL3_MASTER, "19457", 隐藏, 
.常量 CALG_SCHANNEL_MASTER_HASH, "19458", 隐藏, 
.常量 CALG_SCHANNEL_MAC_KEY, "19459", 隐藏, 
.常量 CALG_SCHANNEL_ENC_KEY, "19463", 隐藏, 
.常量 CALG_PCT1_MASTER, "19460", 隐藏, 
.常量 CALG_SSL2_MASTER, "19461", 隐藏, 
.常量 CALG_TLS1_MASTER, "19462", 隐藏, 
.常量 CALG_RC5, "26125", 隐藏, 
.常量 CALG_HMAC, "32777", 隐藏, 
.常量 CALG_TLS1PRF, "32778", 隐藏, 
.常量 CALG_HASH_REPLACE_OWF, "32779", 隐藏, 
.常量 CALG_AES_128, "26126", 隐藏, 
.常量 CALG_AES_192, "26127", 隐藏, 
.常量 CALG_AES_256, "26128", 隐藏, 
.常量 CALG_AES, "26129", 隐藏, 
.常量 CALG_SHA_256, "32780", 隐藏, 
.常量 CALG_SHA_384, "32781", 隐藏, 
.常量 CALG_SHA_512, "32782", 隐藏, 
.常量 CRYPT_VERIFYCONTEXT, "-268435456", 隐藏, 
.常量 CRYPT_NEWKEYSET, "8", 隐藏, 
.常量 CRYPT_DELETEKEYSET, "16", 隐藏, 
.常量 CRYPT_MACHINE_KEYSET, "32", 隐藏, 
.常量 CRYPT_SILENT, "64", 隐藏, 
.常量 CRYPT_EXPORTABLE, "1", 隐藏, 
.常量 CRYPT_USER_PROTECTED, "2", 隐藏, 
.常量 CRYPT_CREATE_SALT, "4", 隐藏, 
.常量 CRYPT_UPDATE_KEY, "8", 隐藏, 
.常量 CRYPT_NO_SALT, "16", 隐藏, 
.常量 CRYPT_PREGEN, "64", 隐藏, 
.常量 CRYPT_RECIPIENT, "16", 隐藏, 
.常量 CRYPT_INITIATOR, "64", 隐藏, 
.常量 CRYPT_ONLINE, "128", 隐藏, 
.常量 CRYPT_SF, "256", 隐藏, 
.常量 CRYPT_CREATE_IV, "512", 隐藏, 
.常量 CRYPT_KEK, "1024", 隐藏, 
.常量 CRYPT_DATA_KEY, "2048", 隐藏, 
.常量 CRYPT_VOLATILE, "4096", 隐藏, 
.常量 CRYPT_SGCKEY, "8192", 隐藏, 
.常量 CRYPT_ARCHIVABLE, "16384", 隐藏, 
.常量 RSA1024BIT_KEY, "67108864", 隐藏, 
.常量 CRYPT_SERVER, "1024", 隐藏, 
.常量 KEY_LENGTH_MASK, "-65536", 隐藏, 
.常量 CRYPT_Y_ONLY, "1", 隐藏, 
.常量 CRYPT_SSL2_FALLBACK, "2", 隐藏, 
.常量 CRYPT_DESTROYKEY, "4", 隐藏, 
.常量 CRYPT_OAEP, "64", 隐藏, 
.常量 CRYPT_BLOB_VER3, "128", 隐藏, 
.常量 CRYPT_IPSEC_HMAC_KEY, "256", 隐藏, 
.常量 CRYPT_DECRYPT_RSA_NO_PADDING_CHECK, "32", 隐藏, 
.常量 CRYPT_SECRETDIGEST, "1", 隐藏, 
.常量 CRYPT_OWF_REPL_LM_HASH, "1", 隐藏, 
.常量 CRYPT_LITTLE_ENDIAN, "1", 隐藏, 
.常量 CRYPT_NOHASHOID, "1", 隐藏, 
.常量 CRYPT_TYPE2_FORMAT, "2", 隐藏, 
.常量 CRYPT_X931_FORMAT, "4", 隐藏, 
.常量 CRYPT_MACHINE_DEFAULT, "1", 隐藏, 
.常量 CRYPT_USER_DEFAULT, "2", 隐藏, 
.常量 CRYPT_DELETE_DEFAULT, "4", 隐藏, 
.常量 PROV_RSA_FULL, "1", 隐藏, 
.常量 PROV_RSA_SIG, "2", 隐藏, 
.常量 PROV_DSS, "3", 隐藏, 
.常量 PROV_FORTEZZA, "4", 隐藏, 
.常量 PROV_MS_EXCHANGE, "5", 隐藏, 
.常量 PROV_SSL, "6", 隐藏, 
.常量 PROV_RSA_SCHANNEL, "12", 隐藏, 
.常量 PROV_DSS_DH, "13", 隐藏, 
.常量 PROV_EC_ECDSA_SIG, "14", 隐藏, 
.常量 PROV_EC_ECNRA_SIG, "15", 隐藏, 
.常量 PROV_EC_ECDSA_FULL, "16", 隐藏, 
.常量 PROV_EC_ECNRA_FULL, "17", 隐藏, 
.常量 PROV_DH_SCHANNEL, "18", 隐藏, 
.常量 PROV_SPYRUS_LYNKS, "20", 隐藏, 
.常量 PROV_RNG, "21", 隐藏, 
.常量 PROV_INTEL_SEC, "22", 隐藏, 
.常量 PROV_REPLACE_OWF, "23", 隐藏, 
.常量 PROV_RSA_AES, "24", 隐藏, 
.常量 OBJID_WINDOW, "0", 隐藏, 
.常量 ROLE_SYSTEM_TITLEBAR, "1", 隐藏, 
.常量 ROLE_SYSTEM_MENUBAR, "2", 隐藏, 
.常量 ROLE_SYSTEM_SCROLLBAR, "3", 隐藏, 
.常量 ROLE_SYSTEM_GRIP, "4", 隐藏, 
.常量 ROLE_SYSTEM_SOUND, "5", 隐藏, 
.常量 ROLE_SYSTEM_CURSOR, "6", 隐藏, 
.常量 ROLE_SYSTEM_CARET, "7", 隐藏, 
.常量 ROLE_SYSTEM_ALERT, "8", 隐藏, 
.常量 ROLE_SYSTEM_WINDOW, "9", 隐藏, 
.常量 ROLE_SYSTEM_CLIENT, "10", 隐藏, 
.常量 ROLE_SYSTEM_MENUPOPUP, "11", 隐藏, 
.常量 ROLE_SYSTEM_MENUITEM, "12", 隐藏, 
.常量 ROLE_SYSTEM_TOOLTIP, "13", 隐藏, 
.常量 ROLE_SYSTEM_APPLICATION, "14", 隐藏, 
.常量 ROLE_SYSTEM_DOCUMENT, "15", 隐藏, 
.常量 ROLE_SYSTEM_PANE, "16", 隐藏, 
.常量 ROLE_SYSTEM_CHART, "17", 隐藏, 
.常量 ROLE_SYSTEM_DIALOG, "18", 隐藏, 
.常量 ROLE_SYSTEM_BORDER, "19", 隐藏, 
.常量 ROLE_SYSTEM_GROUPING, "20", 隐藏, 
.常量 ROLE_SYSTEM_SEPARATOR, "21", 隐藏, 
.常量 ROLE_SYSTEM_TOOLBAR, "22", 隐藏, 
.常量 ROLE_SYSTEM_STATUSBAR, "23", 隐藏, 
.常量 ROLE_SYSTEM_TABLE, "24", 隐藏, 
.常量 ROLE_SYSTEM_COLUMNHEADER, "25", 隐藏, 
.常量 ROLE_SYSTEM_ROWHEADER, "26", 隐藏, 
.常量 ROLE_SYSTEM_COLUMN, "27", 隐藏, 
.常量 ROLE_SYSTEM_ROW, "28", 隐藏, 
.常量 ROLE_SYSTEM_CELL, "29", 隐藏, 
.常量 ROLE_SYSTEM_LINK, "30", 隐藏, 
.常量 ROLE_SYSTEM_HELPBALLOON, "31", 隐藏, 
.常量 ROLE_SYSTEM_CHARACTER, "32", 隐藏, 
.常量 ROLE_SYSTEM_LIST, "33", 隐藏, 
.常量 ROLE_SYSTEM_LISTITEM, "34", 隐藏, 
.常量 ROLE_SYSTEM_OUTLINE, "35", 隐藏, 
.常量 ROLE_SYSTEM_OUTLINEITEM, "36", 隐藏, 
.常量 ROLE_SYSTEM_PAGETAB, "37", 隐藏, 
.常量 ROLE_SYSTEM_PROPERTYPAGE, "38", 隐藏, 
.常量 ROLE_SYSTEM_INDICATOR, "39", 隐藏, 
.常量 ROLE_SYSTEM_GRAPHIC, "40", 隐藏, 
.常量 ROLE_SYSTEM_STATICTEXT, "41", 隐藏, 
.常量 ROLE_SYSTEM_TEXT, "42", 隐藏, 
.常量 ROLE_SYSTEM_PUSHBUTTON, "43", 隐藏, 
.常量 ROLE_SYSTEM_CHECKBUTTON, "44", 隐藏, 
.常量 ROLE_SYSTEM_RADIOBUTTON, "45", 隐藏, 
.常量 ROLE_SYSTEM_COMBOBOX, "46", 隐藏, 
.常量 ROLE_SYSTEM_DROPLIST, "47", 隐藏, 
.常量 ROLE_SYSTEM_PROGRESSBAR, "48", 隐藏, 
.常量 ROLE_SYSTEM_DIAL, "49", 隐藏, 
.常量 ROLE_SYSTEM_HOTKEYFIELD, "50", 隐藏, 
.常量 ROLE_SYSTEM_SLIDER, "51", 隐藏, 
.常量 ROLE_SYSTEM_SPINBUTTON, "52", 隐藏, 
.常量 ROLE_SYSTEM_DIAGRAM, "53", 隐藏, 
.常量 ROLE_SYSTEM_ANIMATION, "54", 隐藏, 
.常量 ROLE_SYSTEM_EQUATION, "55", 隐藏, 
.常量 ROLE_SYSTEM_BUTTONDROPDOWN, "56", 隐藏, 
.常量 ROLE_SYSTEM_BUTTONMENU, "57", 隐藏, 
.常量 ROLE_SYSTEM_BUTTONDROPDOWNGRID, "58", 隐藏, 
.常量 ROLE_SYSTEM_WHITESPACE, "59", 隐藏, 
.常量 ROLE_SYSTEM_PAGETABLIST, "60", 隐藏, 
.常量 ROLE_SYSTEM_CLOCK, "61", 隐藏, 
.常量 ROLE_SYSTEM_SPLITBUTTON, "62", 隐藏, 
.常量 ROLE_SYSTEM_IPADDRESS, "63", 隐藏, 
.常量 ROLE_SYSTEM_OUTLINEBUTTON, "64", 隐藏, 
.常量 STATE_SYSTEM_NORMAL, "0", 隐藏, 
.常量 STATE_SYSTEM_UNAVAILABLE, "1", 隐藏, 
.常量 STATE_SYSTEM_SELECTED, "2", 隐藏, 
.常量 STATE_SYSTEM_FOCUSED, "4", 隐藏, 
.常量 STATE_SYSTEM_PRESSED, "8", 隐藏, 
.常量 STATE_SYSTEM_CHECKED, "16", 隐藏, 
.常量 STATE_SYSTEM_MIXED, "32", 隐藏, 
.常量 STATE_SYSTEM_READONLY, "64", 隐藏, 
.常量 STATE_SYSTEM_HOTTRACKED, "128", 隐藏, 
.常量 STATE_SYSTEM_DEFAULT, "256", 隐藏, 
.常量 STATE_SYSTEM_EXPANDED, "512", 隐藏, 
.常量 STATE_SYSTEM_COLLAPSED, "1024", 隐藏, 
.常量 STATE_SYSTEM_BUSY, "2048", 隐藏, 
.常量 STATE_SYSTEM_FLOATING, "4096", 隐藏, 
.常量 STATE_SYSTEM_MARQUEED, "8192", 隐藏, 
.常量 STATE_SYSTEM_ANIMATED, "16384", 隐藏, 
.常量 STATE_SYSTEM_INVISIBLE, "32768", 隐藏, 
.常量 STATE_SYSTEM_OFFSCREEN, "65536", 隐藏, 
.常量 STATE_SYSTEM_SIZEABLE, "131072", 隐藏, 
.常量 STATE_SYSTEM_MOVEABLE, "262144", 隐藏, 
.常量 STATE_SYSTEM_SELFVOICING, "524288", 隐藏, 
.常量 STATE_SYSTEM_FOCUSABLE, "1048576", 隐藏, 
.常量 STATE_SYSTEM_SELECTABLE, "2097152", 隐藏, 
.常量 STATE_SYSTEM_LINKED, "4194304", 隐藏, 
.常量 STATE_SYSTEM_TRAVERSED, "8388608", 隐藏, 
.常量 STATE_SYSTEM_MULTISELECTABLE, "16777216", 隐藏, 
.常量 STATE_SYSTEM_EXTSELECTABLE, "33554432", 隐藏, 
.常量 STATE_SYSTEM_ALERT_LOW, "67108864", 隐藏, 
.常量 STATE_SYSTEM_ALERT_MEDIUM, "134217728", 隐藏, 
.常量 STATE_SYSTEM_ALERT_HIGH, "268435456", 隐藏, 
.常量 STATE_SYSTEM_PROTECTED, "536870912", 隐藏, 
.常量 SELFLAG_NONE, "0", 隐藏, 
.常量 SELFLAG_TAKEFOCUS, "1", 隐藏, 
.常量 SELFLAG_TAKESELECTION, "2", 隐藏, 
.常量 SELFLAG_EXTENDSELECTION, "4", 隐藏, 
.常量 SELFLAG_ADDSELECTION, "8", 隐藏, 
.常量 SELFLAG_REMOVESELECTION, "16", 隐藏, 
.常量 NAVDIR_UP, "1", 隐藏, 
.常量 NAVDIR_DOWN, "2", 隐藏, 
.常量 NAVDIR_LEFT, "3", 隐藏, 
.常量 NAVDIR_RIGHT, "4", 隐藏, 
.常量 NAVDIR_NEXT, "5", 隐藏, 
.常量 NAVDIR_PREVIOUS, "6", 隐藏, 
.常量 NAVDIR_FIRSTCHILD, "7", 隐藏, 
.常量 NAVDIR_LASTCHILD, "8", 隐藏, 
.常量 STATUS_INFO_LENGTH_MISMATCH, "-1073741820", 隐藏, 
.常量 STATUS_SUCCESS, "0", 隐藏, 
.常量 STATUS_INVALID_PARAMETER, "-1073741811", 隐藏, 
.常量 OBJ_INHERIT, "2", 隐藏, 
.常量 DUPLICATE_CLOSE_SOURCE, "1", 隐藏, 
.常量 DUPLICATE_SAME_ACCESS, "2", 隐藏, 
.常量 DUPLICATE_SAME_ATTRIBUTES, "4", 隐藏, 
.常量 OB_TYPE_PROCESS, "5", 隐藏, 
.常量 ZwGetCurrentProcess, "-1", 隐藏, 
.常量 JOB_OBJECT_ALL_ACCESS, "2031647", 隐藏, 
.常量 MEM_COMMIT, "4096", 隐藏, 为指定的空间提交物理内存
.常量 TB_BUTTONCOUNT, "1048", 隐藏, 
.常量 TB_GETBUTTON, "1047", 隐藏, 
.常量 TB_DELETEBUTTON, "1046", 隐藏, 
.常量 MEM_RELEASE, "32768", 隐藏, 
.常量 CP_ACP, "0", 隐藏, 
.常量 PAGE_EXECUTE_READWRITE, "64", 隐藏, 
.常量 CLSID_TaskbarList, "“{56FDF344-FD6D-11d0-958A-006097C9A090}”", 隐藏, 
.常量 IID_ITaskbarList, "“{56FDF342-FD6D-11d0-958A-006097C9A090}”", 隐藏, 
.常量 IID_ITaskbarList2, "“{602D4995-B13A-429b-A66E-1935E44F4317}”", 隐藏, 
.常量 IID_ITaskbarList3, "“{EA1AFB91-9E28-4B86-90E9-9E9F8A5EEFAF}”", 隐藏, 
.常量 CLSCTX_INPROC_SERVER, "1", 隐藏, 
.常量 任务栏进度_无, "0", 隐藏, TBPF_NOPROGRESS
.常量 任务栏进度_不确定, "1", 隐藏, TBPF_INDETERMINATE
.常量 任务栏进度_正常, "2", 隐藏, TBPF_NORMAL
.常量 任务栏进度_错误, "4", 隐藏, TBPF_ERROR
.常量 任务栏进度_暂停, "8", 隐藏, TBPF_PAUSED
.常量 WM_NULL, "0", 隐藏, 
.常量 WM_DESTROY, "2", 隐藏, 
.常量 MSGFLT_ADD, "1", 隐藏, 
.常量 WM_COMMAND, "273", 隐藏, 
.常量 WM_COPY, "769", 隐藏, 程序发送此消息给一个编辑框或combobox来复制当前选择的文本到剪贴板
.常量 WM_SETICON, "128", 隐藏, 程序发送此消息让一个新的大图标或小图标与某个窗口关联
.常量 WM_DRAWCLIPBOARD, "776", 隐藏, 当剪贴板的内容变化时发送此消息给剪贴板观察链的第一个窗口;它允许用剪贴板观察窗口来显示剪贴板的新内容
.常量 WM_CHANGECBCHAIN, "781", 隐藏, 当一个窗口从剪贴板观察链中移去时发送此消息给剪贴板观察链的第一个窗口
.常量 THBN_CLICKED, "6144", 隐藏, 
.常量 缩略图按钮掩码_图片索引, "1", 隐藏, THB_BITMAP “图片索引”成员有效
.常量 缩略图按钮掩码_图标句柄, "2", 隐藏, THB_ICON
.常量 缩略图按钮掩码_提示文本, "4", 隐藏, THB_TOOLTIP
.常量 缩略图按钮掩码_按钮风格, "8", 隐藏, THB_FLAGS
.常量 缩略图按钮_可用, "0", 隐藏, THBF_ENABLED
.常量 缩略图按钮_禁止, "1", 隐藏, THBF_DISABLED
.常量 缩略图按钮_点击关闭, "2", 隐藏, THBF_DISMISSONCLICK
.常量 缩略图按钮_无背景, "4", 隐藏, THBF_NOBACKGROUND
.常量 缩略图按钮_隐藏, "8", 隐藏, THBF_HIDDEN
.常量 缩略图按钮_无交互按钮, "16", 隐藏, THBF_NONINTERACTIVE
.常量 GMEM_ZEROINIT, "64", 隐藏, 
.常量 MN_GETHMENU, "481", 隐藏, 
.常量 WM_ENTERIDLE, "289", 隐藏, 
.常量 MSGF_MENU, "2", 隐藏, 
.常量 MF_SEPARATOR, "2048", 隐藏, 
.常量 MF_STRING, "0", 隐藏, 
.常量 WM_CONTEXTMENU, "123", 隐藏, 
.常量 WM_NCHITTEST, "132", 隐藏, 移动鼠标，按住或释放鼠标时发生
.常量 MF_BYPOSITION, "1024", 隐藏, 
.常量 MF_POPUP, "16", 隐藏, 
.常量 HTVSCROLL, "7", 隐藏, 7
.常量 FILE_SUPPORTS_SPARSE_FILES, "64", 隐藏, 
.常量 FSCTL_SET_SPARSE, "590020", 隐藏, 
.常量 FILE_ATTRIBUTE_SPARSE_FILE, "512", 隐藏, 
.常量 GENERIC_READ_, "2147483648", 隐藏, 
.常量 FILE_SHARE_READ, "1", 隐藏, 
.常量 FILE_SHARE_WRITE, "2", 隐藏, 
.常量 OPEN_EXISTING, "3", 隐藏, 
.常量 FEATURE_DISABLE_NAVIGATION_SOUNDS, "21", 隐藏, , 禁止跳转声音
.常量 SET_FEATURE_ON_PROCESS, "2", 隐藏, , 仅对当前进程有效
.常量 FORMAT_MESSAGE_FROM_SYSTEM, "4096", 隐藏, 
.常量 FORMAT_MESSAGE_IGNORE_INSERTS, "512", 隐藏, 
.常量 TCM_FIRST, "4864", 隐藏, 
.常量 CCM_FIRST, "8192", 隐藏, 
.常量 CCM_GETUNICODEFORMAT, "8198", 隐藏, 
.常量 CCM_SETUNICODEFORMAT, "8197", 隐藏, 
.常量 TCM_ADJUSTRECT, "4904", 隐藏, 调整矩形
.常量 TCM_DELETEALLITEMS, "4873", 隐藏, 删除全部子夹
.常量 TCM_DELETEITEM, "4872", 隐藏, 删除子夹
.常量 TCM_DESELECTALL, "4914", 隐藏, 全部取消选择
.常量 TCM_GETCURFOCUS, "4911", 隐藏, 获取光标焦点
.常量 TCM_GETCURSEL, "4875", 隐藏, 获取光标XXX？
.常量 TCM_GETEXTENDEDSTYLE, "4917", 隐藏, 取扩展风格
.常量 TCM_GETIMAGELIST, "4866", 隐藏, 取项目图片列表
.常量 TCM_GETITEMA, "4869", 隐藏, 取项目
.常量 TCM_GETITEMCOUNT, "4868", 隐藏, 取项目数
.常量 TCM_GETITEMRECT, "4874", 隐藏, 取项目矩形
.常量 TCM_GETROWCOUNT, "4908", 隐藏, 取行数
.常量 TCM_GETTOOLTIPS, "4909", 隐藏, 取工具条提示
.常量 TCM_GETUNICODEFORMAT, "8198", 隐藏, 取UNICODE格式
.常量 TCM_HIGHLIGHTITEM, "4915", 隐藏, 
.常量 TCM_HITTEST, "4877", 隐藏, 点击测试
.常量 TCM_INSERTITEMA, "4871", 隐藏, 插入子夹
.常量 TCM_REMOVEIMAGE, "4906", 隐藏, 移动图片
.常量 TCM_SETCURFOCUS, "4912", 隐藏, 置光标焦点
.常量 TCM_SETCURSEL, "4876", 隐藏, 置光标XXX？
.常量 TCM_SETEXTENDEDSTYLE, "4916", 隐藏, 置扩展风格
.常量 TCM_SETIMAGELIST, "4867", 隐藏, 置图片列表
.常量 TCM_SETITEMA, "4870", 隐藏, 置项目
.常量 TCM_SETITEMEXTRA, "4878", 隐藏, 置额外项目
.常量 TCM_SETITEMSIZE, "4905", 隐藏, 置项目尺寸
.常量 TCM_SETMINTABWIDTH, "4913", 隐藏, 置子夹栏最小宽度值
.常量 TCM_SETPADDING, "4907", 隐藏, 置子夹栏尺寸
.常量 TCM_SETTOOLTIPS, "4910", 隐藏, 置工具提示
.常量 TCM_SETUNICODEFORMAT, "8197", 隐藏, 置UNICODE格式
.常量 TCIF_IMAGE, "2", 隐藏, 项目图片
.常量 TCIF_PARAM, "8", 隐藏, 项目数值
.常量 TCIF_RTLREADING, "4", 隐藏, 项目右对齐
.常量 TCIF_STATE, "16", 隐藏, 状态
.常量 TCIF_TEXT, "1", 隐藏, 项目文本
.常量 WM_MEASUREITEM, "44", 隐藏, 
.常量 WM_WINDOWPOSCHANGED, "71", 隐藏, 
.常量 LVS_OWNERDRAWFIXED, "1024", 隐藏, 
.常量 CF_LIMITSIZE, "8192", 隐藏, 
.常量 HWND_TOP, "0", 隐藏, 将窗口置于Z序的顶部
.常量 SWP_NOMOVE, "2", 隐藏, 维持当前位置（忽略X和Y参数）
.常量 SWP_NOSIZE, "1", 隐藏, 维持当前尺寸（忽略cx和Cy参数）
.常量 SWP_NOACTIVATE, "16", 隐藏, 不激活窗口
.常量 HWND_TOPMOST, "-1", 隐藏, 窗口置顶，将窗口置于所有顶层窗口之上
.常量 HWND_NOTOPMOST, "-2", 隐藏, 
.常量 WS_EX_LAYERED, "524288", 隐藏, 分层或透明窗口,该样式可使用混合特效
.常量 WS_EX_TRANSPARENT, "32", 隐藏, 透明样式,在同属窗口已重画时该窗口才可重画
.常量 WS_EX_NOACTIVATE, "134217728", 隐藏, 处于顶层但不激活
.常量 WM_MBUTTONDBLCLK, "521", 隐藏, 双击鼠标中键
.常量 WM_RBUTTONUP, "517", 隐藏, 释放鼠标右键
.常量 WM_MBUTTONUP, "520", 隐藏, 释放鼠标中键
.常量 WM_MBUTTONDOWN, "519", 隐藏, 按下鼠标中键
.常量 WM_RBUTTONDBLCLK, "518", 隐藏, 双击鼠标右键
.常量 WM_RBUTTONDOWN, "516", 隐藏, 按下鼠标右键
.常量 WM_LBUTTONDBLCLK, "515", 隐藏, 双击鼠标左键
.常量 WM_LBUTTONUP, "514", 隐藏, 释放鼠标左键
.常量 WM_LBUTTONDOWN, "513", 隐藏, 按下鼠标左键
.常量 WM_MOUSEWHEEL, "522", 隐藏, 当鼠标轮子转动时发送此消息个当前有焦点的控件
.常量 DWM_BB_ENABLE, "1", 隐藏, 
.常量 DWM_BB_BLURREGION, "2", 隐藏, 
.常量 DWM_BB_TRANSITIONONMAXIMIZED, "4", 隐藏, 
.常量 DWMWA_NCRENDERING_ENABLED, "1", 隐藏, 
.常量 DWMWA_NCRENDERING_POLICY, "2", 隐藏, 
.常量 DWMWA_TRANSITIONS_FORCEDISABLED, "3", 隐藏, 
.常量 DWMWA_ALLOW_NCPAINT, "4", 隐藏, 
.常量 DWMWA_CAPTION_BUTTON_BOUNDS, "5", 隐藏, 
.常量 DWMWA_NONCLIENT_RTL_LAYOUT, "6", 隐藏, 
.常量 DWMWA_FORCE_ICONIC_REPRESENTATION, "7", 隐藏, 
.常量 DWMWA_FLIP3D_POLICY, "8", 隐藏, 
.常量 DWMWA_EXTENDED_FRAME_BOUNDS, "9", 隐藏, 
.常量 DWMWA_LAST, "10", 隐藏, 
.常量 DWMNCRP_USEWINDOWSTYLE, "0", 隐藏, 
.常量 DWMNCRP_DISABLED, "1", 隐藏, 
.常量 DWMNCRP_ENABLED, "2", 隐藏, 
.常量 DWMNCRP_LAST, "3", 隐藏, 
.常量 DWMFLIP3D_DEFAULT, "0", 隐藏, 
.常量 DWMFLIP3D_EXCLUDEBELOW, "1", 隐藏, 
.常量 DWMFLIP3D_EXCLUDEABOVE, "2", 隐藏, 
.常量 DWMFLIP3D_LAST, "3", 隐藏, 
.常量 DWM_TNP_RECTDESTINATION, "1", 隐藏, 
.常量 DWM_TNP_RECTSOURCE, "2", 隐藏, 
.常量 DWM_TNP_OPACITY, "4", 隐藏, 
.常量 DWM_TNP_VISIBLE, "8", 隐藏, 
.常量 DWM_TNP_SOURCECLIENTAREAONLY, "16", 隐藏, 
.常量 DWM_SOURCE_FRAME_SAMPLING_POINT, "0", 隐藏, 
.常量 DWM_SOURCE_FRAME_SAMPLING_COVERAGE, "1", 隐藏, 
.常量 DWM_SOURCE_FRAME_SAMPLING_LAST, "2", 隐藏, 
.常量 DWM_EC_DISABLECOMPOSITION, "0", 隐藏, 
.常量 DWM_EC_ENABLECOMPOSITION, "1", 隐藏, 
.常量 单位_世界坐标, "0", 隐藏, // 0 -- World coordinate (non-physical unit)
.常量 单位_Display, "1", 隐藏, // 1 -- Variable -- for PageTransform only
.常量 单位_像素, "2", 隐藏, // 2 -- Each unit is one device pixel.像素
.常量 单位_点, "3", 隐藏, // 3 -- Each unit is a printer's point 点
.常量 单位_英寸, "4", 隐藏, // 4 -- Each unit is 1 inch.英寸
.常量 单位_Document, "5", 隐藏, // 5 -- Each unit is 1/300 inch.
.常量 单位_毫米, "6", 隐藏, // 6 -- Each unit is 1 millimeter.毫米
.常量 像素格式_Indexed, "65536", 隐藏, Indexed 该像素数据包含颜色索引值，这意味着这些值是系统颜色表中颜色的索引，而不是单个颜色值。
.常量 像素格式_GDI, "131072", 隐藏, Gdi 像素数据包含 GDI 颜色。
.常量 像素格式_Alpha, "262144", 隐藏, Alpha 像素数据包含没有进行过自左乘的 alpha 值。
.常量 像素格式_PAlpha, "524288", 隐藏, PAlpha 像素格式包含自左乘的 alpha 值。
.常量 像素格式_Extended, "1048576", 隐藏, Extended 保留。
.常量 像素格式_Canonical, "2097152", 隐藏, Canonical 保留。
.常量 像素格式_Undefined, "0", 隐藏, Undefined 未定义像素格式。
.常量 像素格式_DontCare, "0", 隐藏, DontCare 没有指定像素格式。
.常量 像素格式_1bppIndexed, "196865", 隐藏, Format1bppIndexed 指定像素格式为每像素 1 位，并指定它使用索引颜色。因此颜色表中有两种颜色。
.常量 像素格式_4bppIndexed, "197634", 隐藏, Format4bppIndexed 指定格式为每像素 4 位而且已创建索引。
.常量 像素格式_8bppIndexed, "198659", 隐藏, Format8bppIndexed 指定格式为每像素 8 位而且已创建索引。因此颜色表中有 256 种颜色。
.常量 像素格式_16bppGrayScale, "1052676", 隐藏, Format16bppGrayScale 像素格式为每像素 16 位。该颜色信息指定 65536 种灰色调。
.常量 像素格式_16bppRGB555, "135173", 隐藏, Format16bppRgb555 指定格式为每像素 16 位；红色、绿色和蓝色分量各使用 5 位。剩余的 1 位未使用。
.常量 像素格式_16bppRGB565, "135174", 隐藏, Format16bppRgb565 指定格式为每像素 16 位；红色分量使用 5 位，绿色分量使用 6 位，蓝色分量使用 5 位。
.常量 像素格式_16bppARGB1555, "397319", 隐藏, Format16bppArgb1555 像素格式为每像素 16 位。该颜色信息指定 32
.常量 像素格式_24bppRGB, "137224", 隐藏, Format24bppRgb 指定格式为每像素 24 位；红色、绿色和蓝色分量各使用 8 位。
.常量 像素格式_32bppRGB, "139273", 隐藏, Format32bppRgb 指定格式为每像素 32 位；红色、绿色和蓝色分量各使用 8 位。剩余的 8 位未使用。
.常量 像素格式_32bppARGB, "2498570", 隐藏, Format32bppArgb 指定格式为每像素 32 位；alpha、红色、绿色和蓝色分量各使用 8 位。
.常量 像素格式_32bppPARGB, "925707", 隐藏, Format32bppPArgb 指定格式为每像素 32 位；alpha、红色、绿色和蓝色分量各使用 8 位。根据 alpha 分量，对红色、绿色和蓝色分量进行自左乘。
.常量 像素格式_48bppRGB, "1060876", 隐藏, Format48bppRgb 指定格式为每像素 48 位；红色、绿色和蓝色分量各使用 16 位。
.常量 像素格式_64bppARGB, "3424269", 隐藏, Format64bppArgb 指定格式为每像素 64 位；alpha、红色、绿色和蓝色分量各使用 16 位。
.常量 像素格式_64bppPARGB, "1851406", 隐藏, Format64bppPArgb 指定格式为每像素 64 位；alpha、红色、绿色和蓝色分量各使用 16 位。根据 alpha 分量，对红色、绿色和蓝色分量进行自左乘。
.常量 像素格式_Max, "15", 隐藏, Max 此枚举的最大值。
.常量 常量_代码页标识符, "“037|IBM037|IBM EBCDIC美国 - 加拿大
437|IBM437|OEM美国
500|IBM500|IBM EBCDIC International
708|ASMO-708|阿拉伯语（ASMO 708）
709||阿拉伯语（ASMO-449 +，BCON V4）
710||阿拉伯语 - 透明阿拉伯
720|DOS-720|阿拉伯语（透明ASMO）; 阿拉伯语（DOS）
737|ibm737|OEM希腊语（原名437G）; 希腊语（DOS）
775|ibm775|OEM波罗的海; 波罗的海（DOS）
850|ibm850|OEM多语种拉丁语1; 西欧（DOS）
852|ibm852|OEM拉丁文2; 中欧（DOS）
855|IBM855|OEM西里尔文（主要是俄罗斯）
857|ibm857|OEM土耳其; 土耳其语（DOS）
858|IBM00858|OEM多语言拉丁语1 +欧元符号
860|IBM860|OEM葡萄牙语; 葡萄牙语（DOS）
861|ibm861|OEM冰岛; 冰岛语（DOS）
862|DOS-862|OEM希伯来语; 希伯来语（DOS）
863|IBM863|OEM法国加拿大人; 法语加拿大人（DOS）
864|IBM864|OEM阿拉伯语; 阿拉伯语（864）
865|IBM865|OEM北欧; 北欧（DOS）
866|CP866|OEM俄罗斯; 西里尔文（DOS）
869|ibm869|OEM现代希腊语; 希腊语，现代（DOS）
870|IBM870|IBM EBCDIC Multilingual / ROECE（Latin 2）; IBM EBCDIC多语种拉丁语2
874|窗户-874|ANSI / OEM Thai（ISO 8859-11）; 泰语（Windows）
875|cp875|IBM EBCDIC希腊现代版
932|shift_jis访问|ANSI / OEM日语; 日语（Shift-JIS）
936|GB2312|ANSI / OEM简体中文（中国，新加坡）; 简体中文（GB2312）
949|ks_c_5601-1987|ANSI / OEM韩语（统一韩语代码）
950|中文|ANSI / OEM繁体中文（台湾;中国香港特别行政区）; 繁体中文（Big5）
1026|IBM1026|IBM EBCDIC土耳其语（拉丁语5）
1047|IBM01047|IBM EBCDIC Latin 1 / Open System
1140|IBM01140|IBM EBCDIC美国 - 加拿大（037 +欧元符号）; IBM EBCDIC（美国 - 加拿大 - 欧元）
1141|IBM01141|IBM EBCDIC德国（20273 +欧元符号）; IBM EBCDIC（德国 - 欧元）
1142|IBM01142|IBM EBCDIC丹麦 - 挪威（20277 +欧元符号）; IBM EBCDIC（丹麦 - 挪威 - 欧元）
1143|IBM01143|IBM EBCDIC芬兰 - 瑞典（20278 +欧元符号）; IBM EBCDIC（芬兰 - 瑞典 - 欧元）
1144|IBM01144|IBM EBCDIC意大利（20280 +欧元符号）; IBM EBCDIC（意大利 - 欧元）
1145|IBM01145|IBM EBCDIC拉丁美洲 - 西班牙（20284 +欧元符号）; IBM EBCDIC（西班牙 - 欧元）
1146|IBM01146|IBM EBCDIC英国（20285 +欧元符号）; IBM EBCDIC（英国 - 欧元）
1147|IBM01147|IBM EBCDIC France（20297 +欧元符号）; IBM EBCDIC（法国 - 欧元）
1148|IBM01148|IBM EBCDIC International（500 +欧元符号）; IBM EBCDIC（国际 - 欧元）
1149|IBM01149|IBM EBCDIC Icelandic（20871 +欧元符号）; IBM EBCDIC（冰岛 - 欧元）
1200|UTF-16|Unicode UTF-16，小端字节顺序（ISO 10646的BMP）; 仅适用于托管应用程序
1201|unicodeFFFE|Unicode UTF-16，大端字节顺序; 仅适用于托管应用程序
1250|窗户-1250|ANSI中欧; 中欧（Windows）
1251|窗户-1251|ANSI西里尔文; 西里尔文（Windows）
1252|窗口1252|ANSI Latin 1; 西欧（Windows）
1253|窗户-1253|ANSI希腊语; 希腊语（Windows）
1254|窗户-1254|ANSI土耳其语; 土耳其语（Windows）
1255|窗户-1255|ANSI希伯来语; 希伯来语（Windows）
1256|窗户-1256|ANSI阿拉伯语; 阿拉伯语（Windows）
1257|窗户-1257|ANSI波罗的海; 波罗的海（Windows）
1258|窗户-1258|ANSI / OEM越南语; 越南语（Windows）
1361|裘哈|韩国人（Johab）
10000|苹果|MAC罗马; 西欧（Mac）
10001|X-MAC-日本|日语（Mac）
10002|X-MAC-chinesetrad|MAC繁体中文（Big5）; 繁体中文（Mac）
10003|X-MAC-韩国|韩语（Mac）
10004|X-MAC-阿拉伯语|阿拉伯语（Mac）
10005|X-MAC-希伯来语|希伯来语（Mac）
10006|X-MAC-希腊|希腊语（Mac）
10007|X-MAC-西里尔|西里尔文（Mac）
10008|X-MAC-chinesesimp|MAC简体中文（GB 2312）; 简体中文（Mac）
10010|X-MAC-罗马尼亚|罗马尼亚语（Mac）
10017|X-MAC-乌克兰|乌克兰语（Mac）
10021|X-MAC泰|泰语（Mac）
10029|X-MAC-CE|MAC拉丁文2; 中欧（Mac）
10079|X-MAC-冰岛|冰岛语（Mac）
10081|X-MAC-土耳其|土耳其语（Mac）
10082|X-MAC-克罗地亚|克罗地亚语（Mac）
12000|UTF-32|Unicode UTF-32，小端字节顺序; 仅适用于托管应用程序
12001|UTF-32BE|Unicode UTF-32，大端字节顺序; 仅适用于托管应用程序
20000|X-Chinese_CNS|CNS台湾; 繁体中文（CNS）
20001|X-cp20001|TCA台湾
20002|x_Chinese，倚天|台湾; 繁体中文（Eten）
20003|X-cp20003|IBM5550台湾
20004|X-cp20004|TeleText台湾
20005|X-cp20005|王台湾
20105|X-IA5|IA5（IRV国际字母第5号，7位）; 西欧（IA5）
20106|X-IA5德|IA5德语（7位）
20107|X-IA5瑞典|IA5瑞典语（7位）
20108|X-IA5挪威|IA5挪威语（7位）
20127|US-ASCII|US-ASCII（7位）
20261|X-cp20261|T.61
20269|X-cp20269|ISO 6937非间距重音
20273|IBM273|IBM EBCDIC德国
20277|IBM277|IBM EBCDIC丹麦 - 挪威
20278|IBM278|IBM EBCDIC芬兰 - 瑞典
20280|IBM280|IBM EBCDIC意大利
20284|IBM284|IBM EBCDIC拉丁美洲 - 西班牙
20285|IBM285|IBM EBCDIC英国
20290|IBM290|IBM EBCDIC日语片假名扩展
20297|IBM297|IBM EBCDIC France
20420|IBM420|IBM EBCDIC阿拉伯语
20423|IBM423|IBM EBCDIC希腊语
20424|IBM424|IBM EBCDIC希伯来语
20833|X-EBCDIC-KoreanExtended|IBM EBCDIC Korean Extended
20838|IBM泰|IBM EBCDIC Thai
20866|KOI8-R|俄语（KOI8-R）; 西里尔文（KOI8-R）
20871|IBM871|IBM EBCDIC冰岛语
20880|IBM880|IBM EBCDIC西里尔语俄语
20905|IBM905|IBM EBCDIC土耳其语
20924|IBM00924|IBM EBCDIC Latin 1 /开放系统（1047 +欧元符号）
20932|EUC-JP|日语（JIS 0208-1990和0212-1990）
20936|X-cp20936|简体中文（GB2312）; 简体中文（GB2312-80）
20949|X-cp20949|韩国万松
21025|CP1025|IBM EBCDIC Cyrillic Serbian-Bulgarian
21027||（废弃）
21866|KOI8-U|乌克兰语（KOI8-U）; 西里尔文（KOI8-U）
28591|ISO-8859-1|ISO 8859-1拉丁文1; 西欧（ISO）
28592|ISO-8859-2|ISO 8859-2中欧; 中欧（ISO）
28593|ISO-8859-3|ISO 8859-3拉丁文3
28594|ISO-8859-4|ISO 8859-4波罗的海
28595|ISO-8859-5|ISO 8859-5西里尔文
28596|ISO-8859-6|ISO 8859-6阿拉伯文
28597|ISO-8859-7|ISO 8859-7希腊语
28598|ISO-8859-8|ISO 8859-8希伯来语; 希伯来语（ISO-Visual）
28599|ISO-8859-9|ISO 8859-9土耳其语
28603|ISO-8859-13|ISO 8859-13爱沙尼亚语
28605|ISO-8859-15|ISO 8859-15拉丁文9
29001|X-欧罗巴|欧罗巴3
38598|ISO-8859-8-I|ISO 8859-8希伯来语; 希伯来语（ISO-Logical）
50220|ISO-2022-JP|ISO 2022日语，没有半宽片假名; 日语（JIS）
50221|csISO2022JP|带有半宽片假名的ISO 2022日语; 日语（JIS-Allow 1字节假名）
50222|ISO-2022-JP|ISO 2022日本JIS X 0201-1989; 日语（JIS-Allow 1字节假名 - SO / SI）
50225|ISO-2022-KR|ISO 2022韩语
50227|X-cp50227|ISO 2022简体中文; 简体中文（ISO 2022）
50229||ISO 2022繁体中文
50930||EBCDIC日语（片假名）扩展
50931||EBCDIC美国 - 加拿大和日本
50933||EBCDIC韩语扩展和韩语
50935||EBCDIC简体中文扩展和简体中文
50936||EBCDIC简体中文
50937||EBCDIC美国 - 加拿大和繁体中文
50939||EBCDIC日语（拉丁语）扩展和日语
51932|EUC-JP|EUC日语
51936|EUC-CN|EUC简体中文; 简体中文（EUC）
51949|EUC-KR|EUC韩语
51950||EUC繁体中文
52936|HZ-GB-2312|HZ-GB2312简体中文; 简体中文（HZ）
54936|GB18030|Windows XP及更高版本： GB18030简体中文（4字节）; 简体中文（GB18030）
57002|X-ISCII-DE|ISCII梵文
57003|的x ISCII待|ISCII孟加拉语
57004|的x ISCII-TA|ISCII泰米尔语
57005|的x ISCII-TE|ISCII泰卢固语
57006|的x ISCII-作为|ISCII阿萨姆
57007|的x ISCII-或|ISCII Odia
57008|X-ISCII-KA|ISCII卡纳达语
57009|X-ISCII-MA|ISCII马拉雅拉姆语
57010|X-ISCII区|ISCII古吉拉特语
57011|X-ISCII-PA|ISCII旁遮普语
65000|UTF-7|Unicode（UTF-7）
65001|UTF-8|Unicode（UTF-8）”", 隐藏, 
.常量 SB_CTL, "2", 隐藏, 
.常量 SB_HORZ, "0", 隐藏, 
.常量 SB_VERT, "1", 隐藏, 
.常量 SIF_DISABLENOSCROLL, "8", 隐藏, 
.常量 SIF_PAGE, "2", 隐藏, 
.常量 SIF_POS, "4", 隐藏, 
.常量 SIF_TRACKPOS, "16", 隐藏, 
.常量 SIF_RANGE, "1", 隐藏, 
.常量 SIF_ALL, "23", 隐藏, 
.常量 OBJID_VSCROLL, "-5", 隐藏, 
.常量 LVM_APPROXIMATEVIEWRECT, "4160", 隐藏, 超列表_计算显示一个项目所需的宽度和高度
.常量 LVM_ARRANGE, "4118", 隐藏, 超列表_在图象显示时自动排列
.常量 LVM_CREATEDRAGIMAGE, "4129", 隐藏, 超列表_为指定的项目产生一个拖曳图像列表
.常量 LVM_DELETEALLITEMS, "4105", 隐藏, 超列表_清空
.常量 LVM_DELETECOLUMN, "4124", 隐藏, 超列表_删除列
.常量 LVM_DELETEITEM, "4104", 隐藏, 超列表_删除行
.常量 LVM_EDITLABELW, "4214", 隐藏, 超列表_编辑指定位置
.常量 LVM_ENABLEGROUPVIEW, "4253", 隐藏, 超列表_显示或禁止项目
.常量 LVM_ENSUREVISIBLE, "4115", 隐藏, 超列表_保证显示
.常量 LVM_FINDITEMW, "4179", 隐藏, 超列表_查找
.常量 LVM_GETBKCOLOR, "4096", 隐藏, 取背景颜色
.常量 LVM_GETBKIMAGEW, "4235", 隐藏, 取背景图片
.常量 LVM_GETCALLBACKMASK, "4106", 隐藏, 取回调掩码
.常量 LVM_GETCOLUMNW, "4191", 隐藏, 超列表_取列信息
.常量 LVM_GETCOLUMNORDERARRAY, "4155", 隐藏, 超列表_取对齐方式
.常量 LVM_GETCOLUMNWIDTH, "4125", 隐藏, 超列表_取列宽
.常量 LVM_GETCOUNTPERPAGE, "4136", 隐藏, 取可视的项目数量
.常量 LVM_GETEDITCONTROL, "4120", 隐藏, 当列表框在进行编辑时，返回这引编辑框的句柄
.常量 LVM_GETEXTENDEDLISTVIEWSTYLE, "4151", 隐藏, 取当前扩展风格
.常量 LVM_GETGROUPINFO, "4245", 隐藏, 取块的信息
.常量 LVM_GETGROUPCOUNT, "4248", 隐藏, 
.常量 LVM_GETGROUPINFOBYINDEX, "4249", 隐藏, 
.常量 LVM_GETGROUPMETRICS, "4252", 隐藏, 取块的规格
.常量 LVM_GETHEADER, "4127", 隐藏, 超列表_取表头句柄
.常量 LVM_GETHOTCURSOR, "4159", 隐藏, 如果激活了热点跟随踪，当鼠标在某个项目上时，返回其句柄
.常量 LVM_GETHOTITEM, "4157", 隐藏, 取鼠标指针指向项目的索引
.常量 LVM_GETHOVERTIME, "4168", 隐藏, ？？？取鼠标在项目上停留的时间？
.常量 LVM_GETIMAGELIST, "4098", 隐藏, 取图片组
.常量 LVM_GETINSERTMARK, "4263", 隐藏, 取插入掩码
.常量 LVM_GETINSERTMARKCOLOR, "4267", 隐藏, 取插入掩码颜色
.常量 LVM_GETINSERTMARKRECT, "4265", 隐藏, 取插入掩码的矩形范围
.常量 LVM_GETITEMW, "4171", 隐藏, 超列表_取项目
.常量 LVM_GETITEMCOUNT, "4100", 隐藏, 超列表_取表项总数
.常量 LVM_GETITEMPOSITION, "4112", 隐藏, 超列表_取图标位置
.常量 LVM_GETITEMRECT, "4110", 隐藏, 取指定项目的矩形范围
.常量 LVM_GETITEMSPACING, "4147", 隐藏, 取项目之间的间隔距离
.常量 LVM_GETITEMSTATE, "4140", 隐藏, 超列表_取项目状态
.常量 LVM_GETITEMTEXTW, "4211", 隐藏, 取项目正文
.常量 LVM_GETNEXTITEM, "4108", 隐藏, 取下一项目
.常量 LVM_GETNUMBEROFWORKAREAS, "4169", 隐藏, 取当前列表框工作区中的项目数量
.常量 LVM_GETOUTLINECOLOR, "4272", 隐藏, 取列表框边框颜色
.常量 LVM_GETSELECTEDCOLUMN, "4270", 隐藏, 取选择列
.常量 LVM_GETSELECTEDCOUNT, "4146", 隐藏, 超列表_取被选择项目数
.常量 LVM_GETSELECTIONMARK, "4162", 隐藏, 超列表_取现行选中项
.常量 LVM_GETSTRINGWIDTHA, "4113", 隐藏, 取显示一个文本所需要的列宽度
.常量 LVM_GETSUBITEMRECT, "4152", 隐藏, 取子项目的矩形范围
.常量 LVM_GETTEXTBKCOLOR, "4133", 隐藏, 取正文背景色
.常量 LVM_GETTEXTCOLOR, "4131", 隐藏, 取正文颜色
.常量 LVM_GETTOOLTIPS, "4174", 隐藏, 取工具提示
.常量 LVM_GETTOPINDEX, "4135", 隐藏, 取在可视范围中第一个项目的索引
.常量 LVM_GETVIEW, "4239", 隐藏, 取超级列表框当前的类型
.常量 LVM_GETVIEWRECT, "4130", 隐藏, 取当前所有项目所占用的矩形范围
.常量 LVM_GETWORKAREAS, "4166", 隐藏, 取工作区的矩形范围
.常量 LVM_INSERTCOLUMNW, "4193", 隐藏, 超列框_插入列
.常量 LVM_INSERTGROUP, "4241", 隐藏, 插入块
.常量 LVM_INSERTGROUPSORTED, "4255", 隐藏, 插入块种类
.常量 LVM_INSERTITEMW, "4173", 隐藏, 超列框_插入项目
.常量 LVM_ISGROUPVIEWENABLED, "4271", 隐藏, 块检视是否激活
.常量 LVM_MOVEITEMTOGROUP, "4250", 隐藏, 移动项目到块
.常量 LVM_REDRAWITEMS, "4117", 隐藏, 重画项目
.常量 LVM_REMOVEALLGROUPS, "4256", 隐藏, 移动全部块
.常量 LVM_SCROLL, "4116", 隐藏, 移动滚动条
.常量 LVM_SETBKCOLOR, "4097", 隐藏, 设置背景色
.常量 LVM_SETBKIMAGEW, "4234", 隐藏, 设置背景图片
.常量 LVM_SETCALLBACKMASK, "4107", 隐藏, 设置回调掩码
.常量 LVM_SETCOLUMNW, "4192", 隐藏, 超列表_置列信息
.常量 LVM_SETCOLUMNORDERARRAY, "4154", 隐藏, 设置列显示的排序
.常量 LVM_SETCOLUMNWIDTH, "4126", 隐藏, 设置列宽
.常量 LVM_SETEXTENDEDLISTVIEWSTYLE, "4150", 隐藏, 设置扩展风格
.常量 LVM_SETGROUPINFO, "4243", 隐藏, 设置块信息
.常量 LVM_SETHOTITEM, "4156", 隐藏, 置鼠标指针指向项目的索引？？？
.常量 LVM_SETICONSPACING, "4149", 隐藏, 置图标间隔
.常量 LVM_SETIMAGELIST, "4099", 隐藏, 置图片组
.常量 LVM_SETINFOTIP, "4269", 隐藏, 置信息提示
.常量 LVM_SETINSERTMARK, "4262", 隐藏, 置插入掩码
.常量 LVM_SETINSERTMARKCOLOR, "4266", 隐藏, 置插入掩码颜色
.常量 LVM_SETITEMW, "4172", 隐藏, 超列表_置项目
.常量 LVM_SETITEMCOUNT, "4143", 隐藏, 虚拟一个列表项目总数
.常量 LVM_SETITEMPOSITION, "4111", 隐藏, 超列表_置表项坐标
.常量 LVM_SETITEMSTATE, "4139", 隐藏, 超列表_置项目状态
.常量 LVM_SETITEMTEXTA, "4142", 隐藏, 置项目正文
.常量 LVM_SETOUTLINECOLOR, "4273", 隐藏, 置列表框边框颜色
.常量 LVM_SETSELECTEDCOLUMN, "4236", 隐藏, 置现行选择列
.常量 LVM_SETSELECTIONMARK, "4163", 隐藏, 置选择标志
.常量 LVM_SETTEXTBKCOLOR, "4134", 隐藏, 置正文背景色
.常量 LVM_SETTEXTCOLOR, "4132", 隐藏, 置文本颜色
.常量 LVM_SETTOOLTIPS, "4170", 隐藏, 置工具条
.常量 LVM_SETVIEW, "4238", 隐藏, 置列表框类型
.常量 LVM_SETWORKAREAS, "4161", 隐藏, 置工作区
.常量 LVM_SORTGROUPS, "4254", 隐藏, 群（块）分类
.常量 LVM_SORTITEMS, "4144", 隐藏, 排序分类
.常量 LVM_SORTITEMSEX, "4177", 隐藏, 项目分类扩展
.常量 LVM_UPDATE, "4138", 隐藏, 刷新列表框
.常量 LVM_SUBITEMHITTEST, "4153", 隐藏, 取坐标表项索引
.常量 LVM_CANCELEDITLABEL, "4275", 隐藏, 
.常量 LVM_INSERTMARKHITTEST, "4264", 隐藏, 
.常量 LVM_SETITEMPOSITION32, "4145", 隐藏, 
.常量 窗口风格_单边框, "8388608", 隐藏, WS_BORDER
.常量 窗口风格_标题栏, "12582912", 隐藏, WS_CAPTION 有标题和边框（包括WS_BODER风格）。
.常量 窗口风格_子窗口, "1073741824", 隐藏, WS_CHILD 不能与“窗口风格_弹出式窗口”合用。
.常量 窗口风格_排除子窗口重画, "33554432", 隐藏, WS_CLIPCHILDREN 在创建父窗口时使用这个风格。
.常量 窗口风格_排除重叠窗口重画, "67108864", 隐藏, WS_CLIPSIBLINGS 使窗口排除子窗口之间的相对区域。
.常量 窗口风格_禁止, "134217728", 隐藏, WS_DISABLED
.常量 窗口风格_对话框边框, "4194304", 隐藏, WS_DLGFRAME
.常量 窗口风格_组样式, "131072", 隐藏, WS_GROUP
.常量 窗口风格_水平滚动条, "1048576", 隐藏, WS_HSCROLL
.常量 窗口风格_最大化状态, "16777216", 隐藏, WS_MAXIMIZE
.常量 窗口风格_最大化按钮, "65536", 隐藏, WS_MAXIMIZEBOX
.常量 窗口风格_最小化状态, "536870912", 隐藏, WS_MINIMIZE
.常量 窗口风格_最小化按钮, "131072", 隐藏, WS_MINIMIZEBOX
.常量 窗口风格_默认, "13565952", 隐藏, WS_OVERLAPPEDWINDOW具有层叠，标题框，系统菜单，可调边框，系统按钮。
.常量 窗口风格_弹出式窗口, "2147483648", 隐藏, WS_POPUP 不能与“窗口风格_子窗口”合用。
.常量 窗口风格_可调边框, "262144", 隐藏, WS_SIZEBOX
.常量 窗口风格_系统菜单, "524288", 隐藏, WS_SYSMENU 必须同时设定“窗口风格_标题栏”风格。
.常量 窗口风格_可停留焦点, "65536", 隐藏, WS_TABSTOP
.常量 窗口风格_层叠窗口, "13565952", 隐藏, WS_TILEDWINDOW 创建一个具有WS_OVERLAPPED，WS_CAPTION，WS_SYSMENU MS_THICKFRAME
.常量 窗口风格_可视, "268435456", 隐藏, WS_VISIBLE
.常量 窗口风格_垂直滚动条, "2097152", 隐藏, WS_VSCROLL
.常量 窗口风格_无边框, "2147483648", 隐藏, WS_POPUP 不能与“窗口风格_子窗口”合用。
.常量 窗口扩展_阴影边缘, "512", 隐藏, WS_EX_CLIENTEDGE
.常量 窗口扩展_双层边框, "1", 隐藏, WS_EX_DLGMODALFRAME
.常量 窗口扩展_凸起阴影, "768", 隐藏, WS_EX_OVERLAPPEDWINDOW
.常量 窗口扩展_三维边缘, "131072", 隐藏, WS_EX_STATICEDGE
.常量 窗口扩展_凸起边框, "256", 隐藏, WS_EX_WINDOWEDGE
.常量 窗口扩展_容器窗口, "65536", 隐藏, WS_EX_CONTROLPARENT 允许用户使用Tab键在窗口的子窗口间搜索
.常量 窗口扩展_分层, "524288", 隐藏, WS_EX_LAYERED 透明窗口或分层，该样式可使用混合特效
.常量 窗口扩展_总在最前, "8", 隐藏, WS_EX_TOPMOST
.常量 窗口扩展_工具条窗口, "128", 隐藏, WS_EX_TOOLWINDOW
.常量 窗口扩展_可接受拖放, "16", 隐藏, WS_EX_ACCEPTFILES 可接受拖放文件
.常量 窗口扩展_在任务栏显示, "262144", 隐藏, WS_EX_APPWINDOW 当窗口可见时，将一个顶层窗口放置到任务条上
.常量 窗口扩展_帮助按钮, "1024", 隐藏, WS_EX_CONTEXTHELP。在窗口的标题条包含一个问号标志，
.常量 窗口扩展_垂直滚动条居左, "16384", 隐藏, WS_EX_LEFTSCROLLBAR 垂直滚动条在窗口左边界
.常量 窗口扩展_MDI子窗口, "64", 隐藏, WS_EX_MDICHILD。MDI子窗口
.常量 窗口扩展_右对齐, "4096", 隐藏, WS_EX_RIGHT
.常量 窗口扩展_文本从右到左, "8192", 隐藏, WS_EX_RTLREADING 窗口文本从右到左显示
.常量 窗口扩展_透明, "32", 隐藏, WS_EX_TRANSPARENT。透明样式，在同属窗口已重画时，该窗口才可以重画
.常量 CB_ADDSTRING, "323", 隐藏, 组合框_添加项目
.常量 CB_DELETESTRING, "324", 隐藏, 组合框_删除项目
.常量 CB_ERR, "-1", 隐藏, 组合框_错误
.常量 CB_FINDSTRING, "332", 隐藏, 组合框_前缀查找
.常量 CB_FINDSTRINGEXACT, "344", 隐藏, 组合框_精确查找
.常量 CB_GETCOUNT, "326", 隐藏, 组合框_取项目总数
.常量 CB_GETCURSEL, "327", 隐藏, 组合框_取现行选中项
.常量 CB_GETDROPPEDCONTROLRECT, "338", 隐藏, 组合框_列表框的屏幕位置
.常量 CB_GETDROPPEDSTATE, "343", 隐藏, 组合框_列表框是否可见
.常量 CB_GETDROPPEDWIDTH, "351", 隐藏, 组合框_列表框的宽度。
.常量 CB_GETEDITSEL, "320", 隐藏, 组合框_编辑控件中选定内容的范围
.常量 CB_GETEXTENDEDUI, "342", 隐藏, 组合框_是否存在扩展界面
.常量 CB_GETITEMDATA, "336", 隐藏, 组合框_取项目数值
.常量 CB_GETITEMHEIGHT, "340", 隐藏, 组合框_取列表框项目高度
.常量 CB_GETLBTEXT, "328", 隐藏, 组合框_取项目文本
.常量 CB_GETLBTEXTLEN, "329", 隐藏, 组合框_取项目文本长度
.常量 CB_GETTOPINDEX, "347", 隐藏, 组合框_取组合框中列表框中第一个可见项的索引
.常量 CB_INSERTSTRING, "330", 隐藏, 组合框_指定位置插入字符串。
.常量 CB_LIMITTEXT, "321", 隐藏, 组合框_限制编辑控件文本的最大长度
.常量 CB_RESETCONTENT, "331", 隐藏, 组合框_清空
.常量 CB_SELECTSTRING, "333", 隐藏, 组合框_设定与指定字符串相匹配的列表项为选中项。
.常量 CB_SETCURSEL, "334", 隐藏, 组合框_置现行选中项
.常量 CB_SETDROPPEDWIDTH, "352", 隐藏, 组合框_列表框最大允许宽度
.常量 CB_SETEDITSEL, "322", 隐藏, 组合框_编辑控件中文本选定内容范围
.常量 CB_SETEXTENDEDUI, "341", 隐藏, 组合框_是使用默认界面或扩展界面
.常量 CB_SETHORIZONTALEXTENT, "350", 隐藏, 组合框_置列表宽度
.常量 CB_SETITEMDATA, "337", 隐藏, 组合框_置项目数值
.常量 CB_SETITEMHEIGHT, "339", 隐藏, 组合框_列表项显示高度
.常量 CB_SETTOPINDEX, "348", 隐藏, 组合框_置为列表框的第一个可见项
.常量 CB_SHOWDROPDOWN, "335", 隐藏, 组合框_显示列表。
.常量 CB_GETCOMBOBOXINFO, "356", 隐藏, 
.常量 MOD_ALT, "1", 隐藏, 功能键_Alt
.常量 MOD_CONTROL, "2", 隐藏, 功能键_Ctrl
.常量 MOD_SHIFT, "4", 隐藏, 功能键_Shift
.常量 鼠标指针_标准型, "32512", 隐藏, 标准的箭头IDC_ARROW
.常量 鼠标指针_文本编辑型, "32513", 隐藏, 文本编辑IDC_IBEAM
.常量 鼠标指针_沙漏型, "32514", 隐藏, 沙漏IDC_WAIT
.常量 鼠标指针_十字型, "32515", 隐藏, 十字光标IDC_CROSS
.常量 鼠标指针_UPARROW, "32516", 隐藏, 向上垂直箭头IDC_UPARROW
.常量 鼠标指针_SIZENWSE, "32642", 隐藏, 双箭头指向西北和东南IDC_SIZENWSE
.常量 鼠标指针_SIZENESW, "32643", 隐藏, 双箭头指向东北和西南IDC_SIZENESW
.常量 鼠标指针_SIZEWE, "32644", 隐藏, 双箭头指向西和东IDC_SIZEWE
.常量 鼠标指针_SIZENS, "32645", 隐藏, 双箭头指向南北IDC_SIZENS
.常量 鼠标指针_四向箭头, "32646", 隐藏, 四向箭头指向东、西、南、北IDC_SIZEALL
.常量 鼠标指针_禁止型, "32648", 隐藏, 禁止圈IDC_NO
.常量 鼠标指针_手型, "32649", 隐藏, 手型IDC_HAND
.常量 鼠标指针_APPSTARTING, "32650", 隐藏, 标准的箭头和小沙漏IDC_APPSTARTING
.常量 鼠标指针_帮助, "32651", 隐藏, 箭头和问号IDC_HELP
.常量 HOOK状态_成功, "0", 隐藏, 
.常量 HOOK状态_修改内存保护失败, "1", 隐藏, 
.常量 HOOK状态_已HOOK, "2", 隐藏, 如果需要继续HOOK请先卸载
.常量 HOOK状态_欲HOOK地址为0, "3", 隐藏, 欲HOOK地址不能为0
.常量 HOOK状态_读取内存失败, "4", 隐藏, 请检查打开进程权限
.常量 HOOK状态_写入内存失败, "5", 隐藏, 请检查打开进程权限
.常量 HOOK状态_申请远程内存失败, "6", 隐藏, 
.常量 CF_TEXT, "1", 隐藏, 文字格式。每行以回车/换行（CR-LF）组合结束。空字符表示数据的结尾。对ANSI文本使用此格式。
.常量 CF_BITMAP, "2", 隐藏, 位图的句柄（HBITMAP）
.常量 CF_METAFILEPICT, "3", 隐藏, 处理由METAFILEPICT结构定义的图元文件图片格式。通过动态数据交换（DDE）传递CF_METAFILEPICT句柄时，负责删除【HMEM】的应用程序也应该释放CF_METAFILEPICT句柄引用的元文件。
.常量 CF_SYLK, "4", 隐藏, Microsoft符号链接（SYLK）格式。
.常量 CF_DIF, "5", 隐藏, 软件艺术数据交换格式。
.常量 CF_TIFF, "6", 隐藏, 标记图像文件格式。
.常量 CF_OEMTEXT, "7", 隐藏, 文字格式包含OEM字符集中的字符。每行以回车/换行（CR-LF）组合结束。空字符表示数据的结尾。
.常量 CF_DIB, "8", 隐藏, 一个包含BITMAPINFO结构的内存对象，后跟位图位。
.常量 CF_PALETTE, "9", 隐藏, 处理调色板。每当应用程序将数据放置在依赖于或假定调色板的剪贴板中时，它也应将调色板放在剪贴板上。如果剪贴板包含CF_PALETTE（逻辑调色板）格式的数据，则应用程序应使用SelectPalette和RealizePalette函数来实现（比较）剪贴板中与该逻辑调色板的任何其他数据。当显示剪贴板数据时，Windows剪贴板始终将剪贴板上的任何对象用作CF_PALETTE格式的当前调色板。
.常量 CF_PENDATA, "10", 隐藏, 用于Pen Computing的Microsoft Windows笔的扩展数据。
.常量 CF_RIFF, "11", 隐藏, 表示音频数据比CF_WAVE标准波形格式更复杂。
.常量 CF_WAVE, "12", 隐藏, 以诸如11 kHz或22 kHz脉冲编码调制（PCM）的标准波形格式之一表示音频数据。
.常量 CF_UNICODETEXT, "13", 隐藏, 仅Windows NT： Unicode文字格式。每行以回车/换行（CR-LF）组合结束。空字符表示数据的结尾。
.常量 CF_ENHMETAFILE, "14", 隐藏, 增强图元文件的句柄（HENHMETAFILE）。
.常量 CF_HDROP, "15", 隐藏, 类型为HDROP的句柄，用于标识文件列表。应用程序可以通过将句柄传递给DragQueryFile函数来检索有关文件的信息。
.常量 MAX_PATH, "260", 隐藏, 编译器所支持的最长全路径名的长度


 ' 所需要的支持库：
 ' krnln d09f2340818511d396f6aaf844c7e325 5 7 系统核心支持库
 ' iext 27bb20fdd3e145e4bee3db39ddd6e64c 2 0 扩展界面支持库一
 ' EThread 5F99C1642A2F4e03850721B4F5D7C3F8 2 0 多线程支持库
 ' spec A512548E76954B6E92C21055517615B0 3 1 特殊功能支持库



 ' 所需要的模块
 ' 菜鸟开发模块 C:\Users\asus\OneDrive\项目组-FXSLB2020\公用模块组\菜鸟开发模块.ec
 ' 精易模块 C:\Users\asus\OneDrive\项目组-FXSLB2020\公用模块组\精易模块[v8.4.5].ec


数据类型 精易_表头样式, 公开, 
    .成员 参_列索引, 整数型, , , 
    .成员 参_文本色, 整数型, , , 
    .成员 参_背景色, 整数型, , , 

数据类型 RECT, 公开, 
    .成员 left, 整数型, , , 
    .成员 top, 整数型, , , 
    .成员 right, 整数型, , , 
    .成员 bottom, 整数型, , , 

数据类型 剪辑版数据, 公开, 
    .成员 剪辑版数据格式, 整数型, , , 
    .成员 文本型数据, 文本型, , , 
    .成员 字节集长度, 整数型, , , 
    .成员 字节集数据, 字节集, , , 

数据类型 VM_COUNTERS, 公开, 进程_取父ID
    .成员 PeakVirtualSize, 整数型, , , 
    .成员 VirtualSize, 整数型, , , 
    .成员 PageFaultCount, 整数型, , , 
    .成员 PeakWorkingSetSize, 整数型, , , 
    .成员 WorkingSetSize, 整数型, , , 
    .成员 QuotaPeakPagedPoolUsage, 整数型, , , 
    .成员 QuotaPagedPoolUsage, 整数型, , , 
    .成员 QuotaPeakNonPagedPoolUsage, 整数型, , , 
    .成员 QuotaNonPagedPoolUsage, 整数型, , , 
    .成员 PagefileUsage, 整数型, , , 
    .成员 PeakPagefileUsage, 整数型, , , 

数据类型 菜单消息, 公开, 
    .成员 名称, 文本型, , , 
    .成员 是否插入, 逻辑型, , , 默认为假 假=在菜单末尾添加新的菜单
    .成员 事件, 子程序指针, , , 

数据类型 精易_任务栏缩略图按钮, 公开, 
    .成员 掩码, 整数型, , , “缩略图按钮掩码_”开头常量组合
    .成员 ID, 整数型, , , 
    .成员 图片索引, 整数型, , , 
    .成员 图标, 整数型, , , 
    .成员 提示文本, 文本型, , , 
    .成员 按钮风格, 整数型, , , “缩略图按钮_”开头常量组合

数据类型 DISPLAY_DEVICEA, 公开, 
    .成员 cb, 整数型, , , 
    .成员 DeviceName, 字节型, , "32", 
    .成员 DeviceString, 字节型, , "128", 
    .成员 StateFlags, 整数型, , , 
    .成员 DeviceID, 字节型, , "128", 
    .成员 DeviceKey, 字节型, , "128", 

数据类型 MOUSEHOOKSTRUCT, 公开, 
    .成员 pt, POINT, , , 
    .成员 hwnd, 整数型, , , 如果消息是WM_MOUSEWHEEL，则该成员的高位字是轮增量。低位字是保留的。正值表示车轮向前旋转，远离用户; 负值表示车轮向后旋转，朝向用户。单轮定位单击定义为WHEEL_DELTA，即120。如果消息是WM_XBUTTONDOWN，WM_XBUTTONUP，WM_XBUTTONDBLCLK，WM_NCXBUTTONDOWN，WM_NCXBUTTONUP或WM_NCXBUTTONDBLCLK，则高位字指定按下或释放哪个X按钮，并保留低位字。
    .成员 wHitTestCode, 整数型, , , 
    .成员 dwExtraInfo, 整数型, , , 

数据类型 POINT, 公开, 
    .成员 X, 整数型, , , 
    .成员 Y, 整数型, , , 

数据类型 模块信息, 公开, 
    .成员 模块句柄, 文本型, , , 
    .成员 模块路径, 文本型, , , 

数据类型 精易_网卡信息, 公开, 
    .成员 名称, 文本型, , , 
    .成员 连接名称, 文本型, , , 
    .成员 Mac, 文本型, , , 
    .成员 Ip, 文本型, , , 
    .成员 掩码, 文本型, , , 
    .成员 网关, 文本型, , , 
    .成员 DNS1, 文本型, , , 
    .成员 DNS2, 文本型, , , 

数据类型 精易_运行信息, 公开, 
    .成员 进程句柄, 整数型, , , 
    .成员 主线程句柄, 整数型, , , 
    .成员 进程ID, 整数型, , , 
    .成员 主线程ID, 整数型, , , 

数据类型 临界许可, 公开, 临界许可类
    .成员 标识, 整数型, , , DebugInfo 这个只要大于0就表示许可证存在
    .成员 LockCount, 整数型, , , 
    .成员 RecursionCount, 整数型, , , 
    .成员 OwningThread, 整数型, , , 
    .成员 LockSemaphore, 整数型, , , 
    .成员 SpinCount, 整数型, , , 

数据类型 矩形信息, 公开, 
    .成员 左边, 整数型, , , 
    .成员 顶边, 整数型, , , 
    .成员 宽度, 整数型, , , 
    .成员 高度, 整数型, , , 

数据类型 精易_详细信息, 公开, 用于存放解析的自绘窗口元素信息
    .成员 子窗口数, 文本型, , , 
    .成员 控件ID, 文本型, , , 
    .成员 控件描述, 文本型, , , 
    .成员 控件名称, 文本型, , , 
    .成员 控件状态, 文本型, , , 
    .成员 控件类型, 文本型, , , 
    .成员 控件值, 文本型, , , 
    .成员 窗口位置, 文本型, , , 
    .成员 矩形信息, 矩形信息, , , 
    .成员 默认动作, 文本型, , , 
    .成员 状态标识, 文本型, , , 
    .成员 类型标识, 文本型, , , 
    .成员 屏幕位置, 文本型, , , 
    .成员 窗口大小, 文本型, , , 

数据类型 精易_鼠标移入移出事件, 公开, 
    .成员 句柄, 整数型, , , 
    .成员 消息钩子句柄, 整数型, , , 
    .成员 移入事件, 子程序指针, , , 
    .成员 移出事件, 子程序指针, , , 

数据类型 PROCESS_BASIC_INFORMATION, 公开, 
    .成员 ExitStatus, 整数型, , , 
    .成员 PebBaseAddress, 整数型, , , 
    .成员 AffinityMask, 整数型, , , 
    .成员 BasePriority, 整数型, , , 
    .成员 UniqueProcessId, 整数型, , , 
    .成员 InheritedFromUniqueProcessId, 整数型, , , 

数据类型 客户信息, 公开, 
    .成员 IP, 文本型, , , 
    .成员 端口, 短整数型, , , 
    .成员 句柄, 整数型, , , 

数据类型 套接字地址, 公开, sockaddr
    .成员 常量, 短整数型, , , sin_family
    .成员 端口, 短整数型, , , sin_port
    .成员 地址, 整数型, , , sin_addr
    .成员 地址范围, 字节型, , "8", sin_zero

数据类型 精易_磁盘信息, 公开, 
    .成员 型号, 文本型, , , 
    .成员 序列号, 文本型, , , 
    .成员 固件版本, 文本型, , , 

数据类型 项目数据, 公开, 树型框操作类
    .成员 项目文本, 文本型, , , 项目文本
    .成员 图片索引, 整数型, , , 图象
    .成员 选中图片索引, 整数型, , , 选择图象
    .成员 项目数值, 整数型, , , 项目数值
    .成员 是否加粗, 逻辑型, , , 
    .成员 项目句柄, 长整数型, 传址, , 

数据类型 线程许可证, 公开, 
    .成员 调试信息, 整数型, , , 
    .成员 锁计数, 整数型, , , 
    .成员 递归计数, 整数型, , , 
    .成员 拥有线程, 整数型, , , 
    .成员 锁信号量, 整数型, , , 
    .成员 自旋数, 整数型, , , 

数据类型 列表框信息, 公开, 
    .成员 标题, 文本型, 传址, , 本参数指定表项的标题文本(也即是第0列的标题)。
    .成员 图片索引, 整数型, , , 图片索引用于指定“图片组”属性中的某张图片。索引值从 0 开始，-1 表示无图片。
    .成员 状态图片索引, 整数型, , , 状态图片索引用于指定“状态图片组”属性中的某张图片。索引值从 0 开始，-1 表示无图片。
    .成员 表项数值, 整数型, , , 该数值与指定表项相关联。
    .成员 缩进数目, 整数型, , , “缩进数目”仅在报表型列表框才有效，用作指定显示时在表项首部增加的空白数。
    .成员 列标题, 文本型, , "1", 从第1列开始计起的列标题，多列请按列索引次序依次写到相应的数组成员中
    .成员 列图片索引, 整数型, , "1", 从第1列开始计起，可以被省略。图片索引用于指定“图片组”属性中的某张图片。索引值从 0 开始，-1 表示无图片。如果本参数被省略，默认值为 -1 。

数据类型 精易_颜色对话框, 公开, 
    .成员 长度, 整数型, , , 
    .成员 窗口句柄, 整数型, , , 
    .成员 hInstance, 整数型, , , 
    .成员 rgbResult, 整数型, , , 
    .成员 颜色数长度, 文本型, , , 
    .成员 lCustData, 整数型, , , 
    .成员 lpfnHook, 整数型, , , 
    .成员 lpTemplateName, 文本型, , , 

数据类型 精易_模块信息, 公开, 进程模块信息
    .成员 size, 整数型, , , 1
    .成员 mid, 整数型, , , 模块ID
    .成员 pid, 整数型, , , 进程ID
    .成员 gusage, 整数型, , , 全局引用数
    .成员 pusage, 整数型, , , 引用数
    .成员 base, 整数型, , , 模块基址
    .成员 大小, 整数型, , , 模块大小
    .成员 模块句柄, 整数型, , , 模块句柄
    .成员 模块文件名, 字节型, , "256", 模块名
    .成员 模块完整路径, 字节型, , "256", 模块路径

数据类型 精易_进程信息, 公开, 
    .成员 进程ID, 整数型, , , 
    .成员 进程名, 文本型, , , 
    .成员 进程全路径名, 文本型, , , 

数据类型 精易_进程结构, 公开, 
    .成员 进程句柄, 整数型, , , hProcess
    .成员 线程句柄, 整数型, , , hThread
    .成员 进程标识符, 整数型, , , dwProcessId
    .成员 线程标识符, 整数型, , , dwThreadId

数据类型 StartupInfo, 公开, 
    .成员 cbSize, 整数型, , , 
    .成员 lpReserved, 整数型, , , 
    .成员 lpDesktop, 整数型, , , 
    .成员 lpTitle, 整数型, , , 
    .成员 dwX, 整数型, , , 
    .成员 dwY, 整数型, , , 
    .成员 dwXSize, 整数型, , , 
    .成员 dwYSize, 整数型, , , 
    .成员 dwXCountChars, 整数型, , , 
    .成员 dwYCountChars, 整数型, , , 
    .成员 dwFillAttribute, 整数型, , , 
    .成员 dwFlags, 整数型, , , 
    .成员 wShowWindow, 长整数型, , , 
    .成员 cbReserved2, 长整数型, , , 
    .成员 lpReserved2, 整数型, , , 
    .成员 hStdInput, 整数型, , , 
    .成员 hStdOutput, 整数型, , , 
    .成员 hStdError, 整数型, , , 

数据类型 精易_窗口信息, 公开, 
    .成员 窗口句柄, 整数型, , , 
    .成员 进程ID, 整数型, , , 
    .成员 线程ID, 整数型, , , 
    .成员 窗口标题, 文本型, , , 
    .成员 窗口类名, 文本型, , , 

数据类型 精易_进程信息数组, 公开, 
    .成员 进程标识符, 整数型, , , 初始值为 0 。
    .成员 进程名称, 文本型, , , 初始值为“”。
    .成员 进程模块标识符, 整数型, , , 初始值为 0 。
    .成员 父进程标识符, 整数型, , , 初始值为 0 。
    .成员 线程优先权, 整数型, , , 初始值为 0 。
    .成员 线程数, 整数型, , , 初始值为 0 。

数据类型 精易_进程信息列表, 公开, PROCESSENTRY32
    .成员 dwSize, 整数型, , , 1
    .成员 cntUsage, 整数型, , , 2
    .成员 进程ID, 整数型, , , 3
    .成员 th32DefaultHeapID, 整数型, , , 4
    .成员 th32ModuleID, 整数型, , , 5
    .成员 cntThreads, 整数型, , , 6
    .成员 th32ParentProcessID, 整数型, , , 7
    .成员 pcPriClassBase, 整数型, , , 8
    .成员 dwFlags, 整数型, , , 9
    .成员 进程名称, 字节型, , "260", 10

数据类型 精易_坐标, 公开, 
    .成员 横, 整数型, , , 横X
    .成员 纵, 整数型, , , 纵Y

数据类型 点阵, 公开, 
    .成员 点, 整数型, , "1", 低16位X,高16位Y

数据类型 精易_位置和大小, 公开, 
    .成员 左边, 整数型, , , 左边，相当于左上角的x
    .成员 顶边, 整数型, , , 顶边，相当于左上角的y
    .成员 宽度, 整数型, , , 窗口的宽度
    .成员 高度, 整数型, , , 窗口的高度

数据类型 精易_矩形, 公开, 
    .成员 左边, 整数型, , , 左边，相当于左上角的x
    .成员 顶边, 整数型, , , 顶边，相当于左上角的y
    .成员 右边, 整数型, , , 右边，相当于右下角的x
    .成员 底边, 整数型, , , 底边，相当于右下角的y

数据类型 表项结构信息, 公开, 
    .成员 横向, 整数型, , , 
    .成员 纵向, 整数型, , , 
    .成员 flags, 整数型, , , 
    .成员 行, 整数型, , , 
    .成员 列, 整数型, , , 

数据类型 精易_内存属性, 公开, MEMORY_BASIC_INFORMATION
    .成员 区域地址, 整数型, , , BaseAddress
    .成员 分配地址, 整数型, , , AllocationBase
    .成员 初始属性, 整数型, , , AllocationProtect
    .成员 区域长度, 整数型, , , RegionSize
    .成员 保留值, 整数型, , , 已提交值,保留值,自由值State
    .成员 当前属性, 整数型, , , Protect
    .成员 页类型, 整数型, , , lType

数据类型 OPENFILENAME, 公开, 打开文件名结构
    .成员 结构大小, 整数型, , , win2k以上为88，以下为76  1
    .成员 窗口句柄, 整数型, , , 2
    .成员 实例句柄, 整数型, , , 3
    .成员 过滤器, 字节集, , , 4
    .成员 自定义过滤器, 文本型, , , 5
    .成员 自定义过滤器最大长度, 整数型, , , 6
    .成员 过滤器索引, 整数型, , , 7
    .成员 文件名, 字节集, , , 8
    .成员 文件名最大长度, 整数型, , , 9
    .成员 文件标题, 文本型, , , 10
    .成员 文件标题最大长度, 整数型, , , 11
    .成员 初始目录, 文本型, , , 12
    .成员 标题, 文本型, , , 13
    .成员 标志, 整数型, , , 14
    .成员 文件偏移量, 短整数型, , , 15
    .成员 文件扩展名, 短整数型, , , 16
    .成员 默认扩展名, 文本型, , , 17
    .成员 自定义数据, 整数型, , , 18
    .成员 回调函数地址, 整数型, , , 19
    .成员 模板名, 整数型, , , 20

数据类型 精易_时间, 公开, , SYSTEMTIME
    .成员 年, 短整数型, , , wYear
    .成员 月, 短整数型, , , wMonth
    .成员 星期, 短整数型, , , 
    .成员 日, 短整数型, , , wDay
    .成员 时, 短整数型, , , wHour
    .成员 分, 短整数型, , , wMinute
    .成员 秒, 短整数型, , , wSecond
    .成员 毫, 短整数型, , , wMilliseconds

数据类型 OSVERSIONINFOEX, 公开, 系统_取操作系统类别
    .成员 dwOSVersionInfoSize, 整数型, , , 结构的大小
    .成员 dwMajorVersion, 整数型, , , 主版本号
    .成员 dwMinorVersion, 整数型, , , 次版本号
    .成员 dwBuildNumber, 整数型, , , 构建号
    .成员 dwPlatformId, 整数型, , , 支持的平台
    .成员 szCSDVersion, 字节型, , "128", 补丁包的名称
    .成员 wServicePackMajor, 短整数型, , , 补丁包的主版本
    .成员 wServicePackMinor, 短整数型, , , 补丁包的次版本
    .成员 wSuiteMask, 短整数型, , , 系统上的程序组
    .成员 wProductType, 字节型, , , 系统类型
    .成员 wReserved, 字节型, , , 保留

数据类型 注册表_键, 公开, 
    .成员 键名称, 文本型, , , 
    .成员 键值, 字节集, , , 
    .成员 类型, 整数型, , , 

数据类型 GUID, 公开, 
    .成员 Data1, 整数型, , , 
    .成员 Data2, 短整数型, , , 
    .成员 Data3, 短整数型, , , 
    .成员 Data4, 字节型, , "8", 

数据类型 URL_COMPONENTS, 公开, 
    .成员 dwStructSize, 整数型, , , 本结构长度，注：60
    .成员 lpszScheme, 整数型, , , 协议类型
    .成员 dwSchemeLength, 整数型, , , 协议类型缓冲区长度
    .成员 nScheme, 整数型, , , 链接类型，1=http，2=https。（INTERNET_SCHEME_HTTP=1，INTERNET_SCHEME_HTTPS=2）
    .成员 lpszHostName, 整数型, , , 主机域名(Host)
    .成员 dwHostNameLength, 整数型, , , 主机域名缓冲区长度
    .成员 nPort, 整数型, , , 端口
    .成员 lpszUserName, 整数型, , , 帐号
    .成员 dwUserNameLength, 整数型, , , 帐号缓冲区长度
    .成员 lpszPassword, 整数型, , , 密码
    .成员 dwPasswordLength, 整数型, , , 密码缓冲区长度
    .成员 lpszUrlPath, 整数型, , , 路径(页面地址)
    .成员 dwUrlPathLength, 整数型, , , 路径缓冲区长度
    .成员 lpszExtraInfo, 整数型, , , 额外信息，比如“?”或“#”之后的参数字符串。
    .成员 dwExtraInfoLength, 整数型, , , 额外信息长度

数据类型 LOGFONT, 公开, 定义字体的属性
    .成员 lfHeight, 整数型, , , 字体单元格或字符的高度（以逻辑单位表示）。字符高度值（也称为em高度）是字符单元格高度值减去内部前导值。
    .成员 lfWidth, 整数型, , , 字体中字符的平均宽度（以逻辑单位表示）。如果lfWidth为零，则设备的宽高比与可用字体的数字化宽高比相匹配，以找到最接近的匹配，由差值的绝对值确定。
    .成员 lfEscapement, 整数型, , , 设备x轴之间的角度，以十分之一度为单位
    .成员 lfOrientation, 整数型, , , 每个字符的基线和设备的x轴之间的角度，以十分之一度为单位。
    .成员 lfWeight, 整数型, , , 字体的权重范围为0到1000.例如，400表示正常，700表示粗体。如果此值为零，则使用默认权重。
    .成员 lfItalic, 字节型, , , 斜体
    .成员 lfUnderline, 字节型, , , 下划线
    .成员 lfStrikeOut, 字节型, , , 删除线
    .成员 lfCharSet, 字节型, , , 字符集
    .成员 lfOutPrecision, 字节型, , , 输出精度。输出精度定义输出必须与请求的字体的高度，宽度，字符方向，擒纵，音高和字体类型匹配的程度。
    .成员 lfClipPrecision, 字节型, , , 剪裁精度。裁剪精度定义了如何剪辑部分位于裁剪区域之外的字符。
    .成员 lfQuality, 字节型, , , 输出质量。输出质量定义了图形设备接口（GDI）必须如何仔细地将逻辑字体属性与实际物理字体的属性相匹配。
    .成员 lfPitchAndFamily, 字节型, , , 字体族
    .成员 lfFaceName, 字节型, , "32", W版为64个成员的字节数组或者32个成员的短整数数组,以null结尾的字符串，用于指定字体的字体名称。此字符串的长度不得超过32个TCHAR值，包括终止NULL。该EnumFontFamiliesEx函数可用于枚举所有当前可用字体的字体名称。如果lfFaceName是空字符串，则GDI使用与其他指定属性匹配的第一个字体。

数据类型 配置节数据, 公开, 
    .成员 节名称, 文本型, , , 
    .成员 项, 配置项数据, , "1", 

数据类型 配置项数据, 公开, 
    .成员 配置项名称, 文本型, , , 
    .成员 值, 文本型, , , 

数据类型 SYSTEM_PROCESS_INFORMATION, 公开, 进程_取父ID
    .成员 NextEntryDelta, 整数型, , , 
    .成员 ThreadCount, 整数型, , , 
    .成员 Reserved1, 未知类型0x41012C57, , "3", 
    .成员 CreateTime, 未知类型0x41012C57, , , 
    .成员 UserTime, 未知类型0x41012C57, , , 
    .成员 KernelTime, 未知类型0x41012C57, , , 
    .成员 ImageName, 未知类型0x41012C58, , , 
    .成员 BasePriority, 整数型, , , KPRIORITY               
    .成员 ProcessId, 整数型, , , 
    .成员 InheritedFromProcessId, 整数型, , , 
    .成员 HandleCount, 整数型, , , 
    .成员 Reserved2, 整数型, , "2", 
    .成员 VirtualMemoryCounters, VM_COUNTERS, , , VM_COUNTERS             
    .成员 IoCounters, 未知类型0x41012C59, , , IO_COUNTERS             

数据类型 精易_系统服务列表, 公开, 系统服务_枚举系统服务
    .成员 服务名称, 文本型, , , 
    .成员 显示名称, 文本型, , , 
    .成员 描述, 文本型, , , 
    .成员 文件路径, 文本型, , , 
    .成员 启动类型, 文本型, , , 
    .成员 服务状态, 文本型, , , 
    .成员 登陆为, 文本型, , , 

数据类型 精易_系统服务列表Ex, 公开, 系统服务_枚举系统服务
    .成员 服务名称, 文本型, , , 
    .成员 显示名称, 文本型, , , 
    .成员 描述, 文本型, , , 
    .成员 进程ID, 整数型, , , 
    .成员 文件路径, 文本型, , , 
    .成员 启动类型, 文本型, , , 
    .成员 服务状态, 文本型, , , 
    .成员 登陆为, 文本型, , , 

数据类型 Cookie, 公开, cookie类型
    .成员 健, 文本型, , , 
    .成员 值, 文本型, , , 

数据类型 精易_网卡信息_彗星, 公开, 网卡信息
    .成员 网卡名称, 文本型, , , 网卡名称
    .成员 网卡描述, 文本型, , , 网卡描述
    .成员 连接名称, 文本型, , , 友好名称，本地连接
    .成员 网卡类型n, 整数型, , , 
    .成员 网卡类型, 文本型, , , 网卡类型
    .成员 MAC地址, 文本型, , , MAC地址
    .成员 IP地址, 文本型, , , IP地址
    .成员 子网掩码, 文本型, , , 子网掩码
    .成员 网关地址, 文本型, , , 网关地址
    .成员 首选DNS服务器, 文本型, , , 首选DNS服务器
    .成员 备用DNS服务器, 文本型, , , 备用DNS服务器
    .成员 是否启用DHCP, 逻辑型, , , 

数据类型 精易_IP归属地, 公开, 
    .成员 IP, 文本型, , , 
    .成员 国家, 文本型, , , 
    .成员 省份, 文本型, , , 
    .成员 城市, 文本型, , , 
    .成员 运营商, 文本型, , , 

数据类型 模糊属性, 公开, _DWM_BLURBEHIND
    .成员 dwFlags, 整数型, , , DWM Blur Behind常量值的按位组合，指示已设置此结构的哪些成员。
    .成员 fEnable, 逻辑型, , , TRUE将窗口句柄注册到DWM模糊后面; FALSE从DWM注销的窗口句柄模糊后面。
    .成员 hRgnBlur, 整数型, , , 客户区内将应用模糊的区域。一个NULL值将应用于整个客户区域的模糊。
    .成员 fTransitionOnMaximized, 整数型, , , 如果窗口的着色应转换为与最大化窗口匹配，则为TRUE ; 否则，FALSE。

数据类型 缩略图属性, 公开, _DWM_THUMBNAIL_PROPERTIES
    .成员 dwFlags, 整数型, , , 按位组合DWM略缩图常数值，该值指示设置了此结构的哪些成员。1=源矩形，2=显示矩形，4=透明度，8=可视，16=仅工作区
    .成员 目标矩形, 精易_矩形, , , rcDestination         1.略缩图将显示到目标窗口中的矩形区域。
    .成员 源矩形, 精易_矩形, , , rcSource              2.要用作略缩图的源窗口的区域。默认情况下，整个窗口用作略缩图。
    .成员 透明度, 字节型, , , opacity               4.渲染略缩图的不透明度。取值0-255。0是完全透明的，而255是完全不透明的。默认值为255。
    .成员 可视, 逻辑型, , , fVisible              8.可视
    .成员 仅工作区, 逻辑型, , , fSourceClientAreaOnly 16.仅使用略缩图源的工作区

数据类型 COMBOBOXINFO, 公开, 
    .成员 cbSize, 整数型, , , 结构大小
    .成员 rcItem, RECT, , , 条目矩形
    .成员 rcButton, RECT, , , 按钮矩形
    .成员 stateButton, 整数型, , , 按钮状态
    .成员 hwndCombo, 整数型, , , 超级组合框句柄
    .成员 hwndItem, 整数型, , , 编辑框句柄
    .成员 hwndList, 整数型, , , 列表框句柄

数据类型 WINDOWPLACEMENT, 公开, 
    .成员 Length, 整数型, , , 结构的长度
    .成员 flags, 整数型, , , 控制最小化窗口的位置和恢复窗口的方法(#WPF_xxx)
    .成员 showCmd, 整数型, , , 窗口的当前显示状态(#SW_xxx)
    .成员 ptMinPosition, POINT, , , 窗口最小化时窗口左上角的坐标
    .成员 ptMaxPosition, POINT, , , 窗口最大化时窗口左上角的坐标
    .成员 rcNormalPosition, RECT, , , 当窗口处于恢复位置时窗口的坐标

数据类型 botMsg, , 
    .成员 username, 文本型, , , 
    .成员 id, 文本型, , , 
    .成员 quard, 文本型, , , 

数据类型 role, , 
    .成员 permissions, 整数型, , "32", 

数据类型 role_new, , 
    .成员 _0, 整数型, , , 1 管理员 拥有此权限会获得完整的管理权，包括绕开所有其他权限（包括频道权限）限制，属于危险权限。
    .成员 _1, 整数型, , , 2 管理服务器 拥有此权限的成员可以修改服务器名称和更换区域。
    .成员 _2, 整数型, , , 4 查看管理日志 拥有此权限的成员可以查看服务器的管理日志。
    .成员 _3, 整数型, , , 8 创建服务器邀请 能否创建服务器邀请链接
    .成员 _4, 整数型, , , 16 管理邀请 拥有该权限可以管理服务器的邀请
    .成员 _5, 整数型, , , 32 频道管理 拥有此权限的成员可以创建新的频道以及编辑或删除已存在的频道。
    .成员 _6, 整数型, , , 64 踢出用户
    .成员 _7, 整数型, , , 128 封禁用户
    .成员 _8, 整数型, , , 256 管理自定义表情
    .成员 _9, 整数型, , , 512 修改服务器昵称 拥有此权限的用户可以更改他们的昵称。
    .成员 _10, 整数型, , , 1024 管理角色权限 拥有此权限成员可以创建新的角色和编辑删除低于该角色的身份。
    .成员 _11, 整数型, , , 2048 查看文字、语音频道 
    .成员 _12, 整数型, , , 4096 发布消息
    .成员 _13, 整数型, , , 8192 管理消息 拥有此权限的成员可以删除其他成员发出的消息和置顶消息。
    .成员 _14, 整数型, , , 16384 上传文件
    .成员 _15, 整数型, , , 32768 语音链接
    .成员 _16, 整数型, , , 65536 语音管理 拥有此权限的成员可以把其他成员移动和踢出频道；但此类移动仅限于在该成员和被移动成员均有权限的频道之间进行。
    .成员 _17, 整数型, , , 131072 提及@全体成员 拥有此权限的成员可使用@全体成员以提及该频道中所有成员。
    .成员 _18, 整数型, , , 262144 添加反应 拥有此权限的成员可以对消息添加新的反应。
    .成员 _19, 整数型, , , 524288 跟随添加反应 拥有此权限的成员可以跟随使用已经添加的反应。
    .成员 _20, 整数型, , , 1048576 被动连接语音频道 拥有此限制的成员无法主动连接语音频道，只能在被动邀请或被人移动时，才可以进入语音频道。
    .成员 _21, 整数型, , , 2097152 仅使用按键说话 拥有此限制的成员加入语音频道后，只能使用按键说话。
    .成员 _22, 整数型, , , 4194304 使用自由麦 没有此权限的成员，必须在频道内使用按键说话。
    .成员 _23, 整数型, , , 8388608 说话
    .成员 _24, 整数型, , , 16777216 服务器静音
    .成员 _25, 整数型, , , 33554432 服务器闭麦
    .成员 _26, 整数型, , , 108864 修改他人昵称 拥有此权限的用户可以更改他人的昵称
    .成员 _27, 整数型, , , 134217728 播放伴奏 拥有此权限的成员可在语音频道中播放音乐伴奏
    .成员 _28, 整数型, , , 
    .成员 _29, 整数型, , , 
    .成员 _30, 整数型, , , 
    .成员 _31, 整数型, , , 
    .成员 _32, 整数型, , , 

数据类型 function, , 
    .成员 name, 文本型, , , 
    .成员 prefix, 文本型, , , 
    .成员 fundaddr, 子程序指针, , , 

数据类型 plugin, , 
    .成员 插件名, 文本型, , , 1
    .成员 版本, 文本型, , , 2
    .成员 作者, 文本型, , , 3
    .成员 介绍, 文本型, , , 4
    .成员 格式左, 文本型, , , 5
    .成员 调用名, 文本型, , , 6
    .成员 功能中显示, 逻辑型, , , 7
    .成员 文件名, 文本型, , , 8
    .成员 启用状态, 逻辑型, , , 9

.全局变量 g_baseUrl, 文本型, , , 
.全局变量 g_apiVer, 文本型, , , 
.全局变量 g_token, 文本型, , , 
.全局变量 g_url, 文本型, , , 
.全局变量 普通填表, 普通填表, 公开, , 
.全局变量 内存, 类_内存, 公开, , 内存操作
.全局变量 g_msgList, 文本型, , "0", 
.全局变量 Version, 文本型, , , 
.全局变量 g_msgList_id, 空白型, , , 
.全局变量 g_MsgID, 整数型, , , 
.全局变量 g_conID, 整数型, , , 
.全局变量 g_bot, botMsg, , , 
.全局变量 匿名全局变量_13445, 空白型, , , 
.全局变量 core_function, function, , "0", 
.全局变量 plugins, plugin, , "0", 

.DLL命令 HeapSize, 整数型, "kernel32.dll", "HeapSize", 公开, 返回堆对象的大小
    .参数 hHeap, 整数型, , 
    .参数 dwFlags, 整数型, , 
    .参数 lpMem, 整数型, , 

.DLL命令 GetOEMCP, 整数型, "kernel32.dll", "GetOEMCP", 公开, 判断在OEM和ANSI字符集间转换的windows代码页

.DLL命令 GdipDeleteBrush, 整数型, "GdiPlus.dll", "GdipDeleteBrush", 公开, 
    .参数 brush, 整数型, , 

.DLL命令 SetConsoleMode, 逻辑型, "kernel32.dll", "SetConsoleMode", 公开, 对输入句柄的工作模式进行设置
    .参数 hConsoleHandle, 整数型, , 控制台句柄
    .参数 dwMode, 整数型, , 

.DLL命令 GetConsoleMode, 逻辑型, "kernel32.dll", "GetConsoleMode", 公开, 
    .参数 hConsoleHandle, 整数型, , 0
    .参数 lpMode, 整数型, , 0

.DLL命令 InvalidateRect, 整数型, "user32.dll", "InvalidateRect", 公开, 这个函数屏蔽一个窗口客户区的全部或部分区域。这会导致窗口在事件期间部分重画  非零表示成功，零表示失败
    .参数 hWnd, 整数型, , 待屏蔽窗口的句柄
    .参数 lpRect, 整数型, , RECT，用于描述待屏蔽矩形部分的一个矩形结构。可用InvalidateRectBynum函数，同时将lpRect设为零（Long数据类型），从而屏蔽（或禁用）整个窗口
    .参数 bErase, 整数型, , TRUE（非零）导致指定的区域在重画前先删除;

.DLL命令 CoInternetSetFeatureEnabled, 空白型, "urlmon.dll", "CoInternetSetFeatureEnabled", 公开, 初始化浏览器属性
    .参数 FeatureEntry, 整数型, , 
    .参数 dwFlags, 整数型, , 
    .参数 Enable, 逻辑型, , 

.DLL命令 GetVolumeInformationA, 逻辑型, "kernel32.dll", "GetVolumeInformationA", 公开, 
    .参数 lpRootPathName, 文本型, , 0
    .参数 lpVolumeNameBuffer, 文本型, , 0
    .参数 nVolumeNameSize, 整数型, , 0
    .参数 lpVolumeSerialNumber, 整数型, 传址, 0
    .参数 lpMaximumComponentLength, 整数型, 传址, 0
    .参数 lpFileSystemFlags, 整数型, 传址, 0
    .参数 lpFileSystemNameBuffer, 文本型, 传址, 0
    .参数 nFileSystemNameSize, 整数型, , 0

.DLL命令 GetFileAttributesA, 整数型, "kernel32.dll", "GetFileAttributesA", 公开, 
    .参数 lpFileName, 文本型, , 0

.DLL命令 LocalSize_IP_ADDR_STRING, 整数型, "kernel32.dll", "LocalSize", 公开, 
    .参数 hMem, 未知类型0x41012C5A, 传址, 

.DLL命令 CopyMemory_IP_ADDR_STRING, 空白型, "kernel32.dll", "RtlMoveMemory", 公开, 
    .参数 Destination, 未知类型0x41012C5A, 传址, 
    .参数 Source, 整数型, , 
    .参数 Length, 整数型, , 

.DLL命令 LocalSize_IP_ADAPTER_INFO, 整数型, "kernel32.dll", "LocalSize", 公开, 返回本地内存块大小,类似sizeof
    .参数 hMem, 未知类型0x41012C5B, 传址, 

.DLL命令 GetPtr_IP_ADAPTER_INFO, 整数型, "kernel32.dll", "lstrcpynA", 公开, , 取指针
    .参数 lpString1, 未知类型0x41012C5B, 传址, 
    .参数 lpString2, 未知类型0x41012C5B, 传址, 
    .参数 iMaxLength, 整数型, , 传递0

.DLL命令 GetPtr_Bin, 整数型, "kernel32.dll", "lstrcpynA", 公开, 取指针
    .参数 lpString1, 字节集, 传址, 
    .参数 lpString2, 字节集, 传址, 
    .参数 iMaxLength, 整数型, , 传递0

.DLL命令 SetProcessDPIAware, 逻辑型, "user32.dll", "SetProcessDPIAware", 公开, user32.dll的一个API函数,可用于防止UI自动放大

.DLL命令 strrchr, 整数型, "ntdll.dll", "@strrchr", 公开, 
    .参数 s, 整数型, , 
    .参数 c, 字节型, , 

.DLL命令 strchr, 整数型, "ntdll.dll", "@strchr", 公开, 
    .参数 s, 整数型, , 
    .参数 c, 字节型, , 

.DLL命令 获取设备GammaRamp, 逻辑型, "gdi32.dll", "GetDeviceGammaRamp", 公开, 
    .参数 hdc, 整数型, , 
    .参数 lpv, 短整数型, 数组, 

.DLL命令 设置设备GammaRamp, 逻辑型, "gdi32.dll", "SetDeviceGammaRamp", 公开, 
    .参数 hdc, 整数型, , 
    .参数 lpv, 短整数型, 数组, 

.DLL命令 Beep, 逻辑型, "kernel32.dll", "Beep", 公开, 
    .参数 dwFreq, 整数型, , 
    .参数 dwDuration, 整数型, , 

.DLL命令 取指针_字节集, 整数型, "Kernel32.dll", "lstrcpyn", 公开, 常规API
    .参数 欲取其指针, 字节集, 传址, 
    .参数 欲取其指针, 字节集, 传址, 
    .参数 保留, 整数型, , 0

.DLL命令 RtlMoveMemory_整数传址1, 整数型, "kernel32.dll", "RtlMoveMemory", 公开, 常规API,从地址读一个整数
    .参数 dest, 整数型, 传址, 
    .参数 Source, 整数型, , 
    .参数 len, 整数型, , 4

.DLL命令 ZwOpenProcess, 整数型, "ntdll.dll", "ZwOpenProcess", 公开, 
    .参数 hProcess, 整数型, 传址, 
    .参数 DesiredAccess, 整数型, , 
    .参数 ObjectAttributes, 未知类型0x41012C5C, , 
    .参数 ClientId, 未知类型0x41012C5D, , 

.DLL命令 ZwDuplicateObject, 整数型, "ntdll.dll", "ZwDuplicateObject", 公开, 
    .参数 SourceProcessHandle, 整数型, , 
    .参数 SourceHandle, 整数型, , 
    .参数 TargetProcessHandle, 整数型, , 
    .参数 TargetHandle, 整数型, 传址, 
    .参数 DesiredAccess, 整数型, , 
    .参数 HandleAttributes, 整数型, , 
    .参数 Options, 整数型, , 

.DLL命令 ZwCreateJobObject, 整数型, "ntdll.dll", "ZwCreateJobObject", 公开, 
    .参数 JobHandle, 整数型, 传址, 
    .参数 DesiredAccess, 整数型, , 
    .参数 ObjectAttributes, 未知类型0x41012C5C, , 

.DLL命令 ZwAssignProcessToJobObject, 整数型, "ntdll.dll", "ZwAssignProcessToJobObject", 公开, 
    .参数 JobHandle, 整数型, , 
    .参数 ProcessHandle, 整数型, , 

.DLL命令 ZwTerminateJobObject, 整数型, "ntdll.dll", "ZwTerminateJobObject", 公开, 
    .参数 JobHandle, 整数型, , 
    .参数 ExitStatus, 整数型, , 

.DLL命令 ZwTerminateProcess, 整数型, "ntdll.dll", "ZwTerminateProcess", 公开, 
    .参数 ProcessHandle, 整数型, , 
    .参数 ExitStatus, 整数型, , 

.DLL命令 ZwClose, 整数型, "ntdll.dll", "ZwClose", 公开, 
    .参数 hnd, 整数型, , 

.DLL命令 GetProcessImageFileNameA, 整数型, "psapi.dll", "GetProcessImageFileNameA", 公开, 
    .参数 hProcess, 整数型, , 
    .参数 lpImageFileName, 文本型, , 
    .参数 nSize, 整数型, , 

.DLL命令 关闭内核对象_, 整数型, "kernel32.dll", "CloseHandle", 公开, $(b)非零表示成功，零表示失败
    .参数 对象句柄, 整数型, , hObject，欲关闭的一个对象的句柄

.DLL命令 QueryDosDeviceA, 整数型, "kernel32.dll", "QueryDosDeviceA", 公开, 
    .参数 lpDeviceName, 文本型, , 
    .参数 lpTargetPath, 文本型, , 
    .参数 ucchMax, 整数型, , 

.DLL命令 RtlMoveMemory_IMAGE_DOS_HEADER, 空白型, "kernel32.dll", "RtlMoveMemory", 公开, 
    .参数 Dest, 未知类型0x41012C5E, 传址, 
    .参数 Src, 字节型, 传址, 
    .参数 L, 整数型, , 

.DLL命令 CoCreateGuid, 空白型, "ole32.dll", "CoCreateGuid", 公开, 
    .参数 guid, 字节集, , 

.DLL命令 RtlMoveMemory_字节集传址1, 空白型, "kernel32.dll", "RtlMoveMemory", 公开, 内存拷贝
    .参数 Destination, 字节集, 传址, 
    .参数 字节集指针, 整数型, , 
    .参数 数据长度, 整数型, , 

.DLL命令 HeapDestroy, 逻辑型, "Kernel32.dll", "HeapDestroy", 公开, 释放堆
    .参数 hHeap, 整数型, , 堆句柄

.DLL命令 HeapCreate, 整数型, "kernel32.dll", "HeapCreate", 公开, 创建一个堆
    .参数 dwFlags, 整数型, , 创建方式 内存块标志。 为1 不检测独占
    .参数 len, 整数型, , 默认大小
    .参数 Exlen, 整数型, , 扩展大小 0为无限制

.DLL命令 InitializeCriticalSection_临界许可, 空白型, "kernel32.dll", "InitializeCriticalSection", 公开, 创建许可证
    .参数 lpCriticalSection, 临界许可, 传址, 

.DLL命令 DeleteCriticalSection_临界许可, 整数型, "kernel32.dll", "DeleteCriticalSection", 公开, 销毁许可证
    .参数 lpCriticalSection, 临界许可, 传址, 

.DLL命令 EnterCriticalSection_临界许可, 空白型, "kernel32.dll", "EnterCriticalSection", 公开, 进入许可区
    .参数 lpCriticalSection, 临界许可, 传址, 

.DLL命令 LeaveCriticalSection_临界许可, 空白型, "kernel32.dll", "LeaveCriticalSection", 公开, 退出许可区
    .参数 lpCriticalSection, 临界许可, 传址, 

.DLL命令 RtlMoveMemory_Eint_int, 逻辑型, "kernel32.dll", "RtlMoveMemory", 公开, 移动内存
    .参数 Dest, 整数型, , 目标地址
    .参数 Src, 整数型, 传址, 原地址
    .参数 length, 整数型, , 长度

.DLL命令 RtlMoveMemory_Ebin_int, 逻辑型, "kernel32.dll", "RtlMoveMemory", 公开, 移动内存
    .参数 Dest, 整数型, , 目标地址
    .参数 Src, 字节集, 传址, 原地址
    .参数 length, 整数型, , 长度

.DLL命令 RtlMoveMemory_Estr_int, 逻辑型, "kernel32.dll", "RtlMoveMemory", 公开, 移动内存
    .参数 Dest, 整数型, , 目标地址
    .参数 Src, 文本型, 传址, 原地址
    .参数 length, 整数型, , 长度

.DLL命令 AccessibleChildren, 整数型, "OLEACC.DLL", "AccessibleChildren", 公开, 
    .参数 paccContainer, 整数型, , 
    .参数 iChildStart, 整数型, , 
    .参数 cChildren, 整数型, , 
    .参数 rgvarChildren, 变体型, 数组, 
    .参数 pcObtained, 整数型, 传址, 

.DLL命令 AccessibleObjectFromWindow, 整数型, "OLEACC.DLL", "AccessibleObjectFromWindow", 公开, 
    .参数 hwnd, 整数型, , 
    .参数 dwId, 整数型, , 
    .参数 riid, 字节集, , 
    .参数 ppvObject, 整数型, , 

.DLL命令 RtlMoveMemory_obj2pint, 空白型, "kernel32.dll", "RtlMoveMemory", 公开, 
    .参数 Destination, 整数型, 传址, 
    .参数 Source, 对象, , 
    .参数 Length, 整数型, , 

.DLL命令 GetStateText, 整数型, "OLEACC.DLL", "GetStateTextA", 公开, 
    .参数 lStateBit, 整数型, , 
    .参数 lpszState, 文本型, , 
    .参数 cchState, 整数型, , 

.DLL命令 GetStateText_int, 整数型, "OLEACC.DLL", "GetStateTextA", 公开, 
    .参数 lStateBit, 整数型, , 
    .参数 lpszState, 整数型, , 
    .参数 cchState, 整数型, , 

.DLL命令 GetRoleText, 整数型, "OLEACC.DLL", "GetRoleTextA", 公开, 
    .参数 lRole, 整数型, , 
    .参数 lpszRole, 文本型, , 
    .参数 cchRoleMax, 整数型, , 

.DLL命令 GetRoleText_int, 整数型, "OLEACC.DLL", "GetRoleTextA", 公开, 
    .参数 lRole, 整数型, , 
    .参数 lpszRole, 整数型, , 
    .参数 cchRoleMax, 整数型, , 

.DLL命令 WindowFromAccessibleObject, 空白型, "OLEACC.DLL", "WindowFromAccessibleObject", 公开, 
    .参数 TIAccessible, 整数型, , 
    .参数 phwnd, 整数型, 传址, 

.DLL命令 AccessibleObjectFromPoint, 整数型, "OLEACC.DLL", "AccessibleObjectFromPoint", 公开, 
    .参数 ptScreenx, 整数型, , 
    .参数 ptScreeny, 整数型, , 
    .参数 ppacc, 整数型, , 
    .参数 pvarChild, 变体型, 传址, 

.DLL命令 BlockInput, 整数型, "user32.dll", "BlockInput", 公开, 
    .参数 fBlock, 整数型, , 1.锁定，0.解除

.DLL命令 GetShortPathName, 整数型, "kernel32.dll", "GetShortPathNameA", 公开, 
    .参数 lpszLongPath, 文本型, , 
    .参数 lpszShortPath, 文本型, , 
    .参数 cchBuffer, 整数型, , 

.DLL命令 CryptHashData_x, 逻辑型, "advapi32.dll", "CryptHashData", 公开, 
    .参数 hHash, 整数型, , 
    .参数 pbData, 字节集, 传址, 
    .参数 dwDataLen, 整数型, , 
    .参数 dwFlags, 整数型, , 

.DLL命令 CryptReleaseContext_x, 逻辑型, "advapi32.dll", "CryptReleaseContext", 公开, 
    .参数 hProv, 整数型, , 
    .参数 dwFlags, 整数型, , 

.DLL命令 CryptCreateHash_x, 逻辑型, "advapi32.dll", "CryptCreateHash", 公开, 
    .参数 hProv, 整数型, , 
    .参数 Algid, 整数型, , 
    .参数 hKey, 整数型, , 
    .参数 dwFlags, 整数型, , 
    .参数 phHash, 整数型, 传址, 

.DLL命令 CryptAcquireContext_x, 逻辑型, "advapi32.dll", "CryptAcquireContextA", 公开, 
    .参数 phProv, 整数型, 传址, 
    .参数 pszContainer, 文本型, , 
    .参数 pszProvider, 文本型, , 
    .参数 dwProvType, 整数型, , 
    .参数 dwFlags, 整数型, , 

.DLL命令 NtReadVirtualMemory, 整数型, "ntdll.dll", "NtReadVirtualMemory", 公开, 
    .参数 句柄, 整数型, , 
    .参数 地址, 整数型, , 
    .参数 缓冲区, 字节集, , 
    .参数 读取长度, 整数型, , 
    .参数 实际读取长度, 整数型, 传址, 

.DLL命令 GetQueuedCompletionStatus, 整数型, "kernel32.dll", "GetQueuedCompletionStatus", 公开, 函数有个OVERLAPPED结构，很多资料上都采用不同的结构体来扩展该结构，比如有的资料定义：
    .参数 CompletionPort, 整数型, , 
    .参数 lpNumberOfBytesTransferred, 整数型, 传址, 
    .参数 lpCompletionKey, 整数型, 传址, 
    .参数 lpOverlapped, 整数型, 传址, 
    .参数 dwMilliseconds, 整数型, , 

.DLL命令 SHChangeNotify, 空白型, "shell32.dll", "SHChangeNotify", 公开, 刷新关联图标
    .参数 SHCNE_ASSOCCHANGED, 整数型, , 134217728
    .参数 SHCNF_IDLIST, 整数型, , 0
    .参数 nil, 整数型, , 0
    .参数 nil, 整数型, , 0

.DLL命令 GetFileTitleA, 整数型, "Comdlg32.dll", "GetFileTitleA", 公开, 
    .参数 lpszFile, 文本型, , 
    .参数 lpszTitle, 文本型, , 
    .参数 cbBuf, 整数型, , 

.DLL命令 CreateIoCompletionPort, 整数型, "kernel32.dll", "CreateIoCompletionPort", 公开, 函数关联一个已打开的文件实例和新建的或已存在的I/0完成端口，或者创建一个未关联任何文件的I/O完成端口。
    .参数 Handle, 整数型, , 
    .参数 ExistingCompletionPort, 整数型, , 
    .参数 CompletionKey, 整数型, , 
    .参数 NumberOfConcurrentThreads, 整数型, , 

.DLL命令 PostQueuedCompletionStatus, 整数型, "kernel32.dll", "PostQueuedCompletionStatus", 公开, 在进行重叠I/O操作的同时，强行释放一个OVERLAPPED结构，最好的方法是针对每一个套接字句柄，调用CloseSocket函数。任何尚未进行的重叠I/O操作都会完成。一旦所有套接字关闭，便需在完成端口上，终止所有工作者线程。这时候需要使用PostQueuedCompletionStatus 。
    .参数 CompletionPort, 整数型, , 
    .参数 dwNumberOfBytesTransferred, 整数型, , 
    .参数 dwCompletionKey, 整数型, , 
    .参数 lpOverlapped, 整数型, , 

.DLL命令 RemovePropA, 整数型, "user32.dll", "RemovePropA", 公开, 该函数从指定的窗口的属性表中删除一项。指定的字符串标识了要删除的项。 
    .参数 hWnd, 整数型, , 指向要改变属性项的窗口的句柄。
    .参数 lpString, 文本型, , 指向以null结尾的字符串指针，或者包含一个标识字符串的原子。如果该参数是一个原子，那么它必须是使用AddAtom函数创建的。原子是16位的数据值，它必须是放置在lpString参数的低位字中， 

.DLL命令 SetPropA, 逻辑型, "user32.dll", "SetPropA", 公开, 该函数在指定窗口的属性表中增加一个新项，或者修改一个现有项。如果指定的字符串不在属性表中，那么就增加该新的项，新项中包含该字符串和句柄，否则就用指定的句柄替换该字符串的全前句柄。 
    .参数 hWnd, 整数型, , 指向窗口的句柄，该窗口的属性表要接收一个新项。 
    .参数 lpString, 文本型, , 指向以null结尾的字符串指针，或者包含一个标识字符串的原子。如果该参数是一个原子，么它必须是以前使用GlobalAddAtom函数创建的。原子是16位的数据值，它必须是放置在lpstring参数低位字中，而高位字必须为O。 
    .参数 hData, 整数型, , 指向要拷贝到属性表中的数据的句柄。该数据句柄可以标识任何对应用程序有用的值。 

.DLL命令 GetPropA, 整数型, "user32.dll", "GetPropA", 公开, 该函数从给定窗口的属性列表中检索数据句柄。给定的字符串标识了要检索的句柄。该字符串和句柄必须在前一次调用SetProp函数时已经加到属性表中。 
    .参数 hWnd, 整数型, , 指向要搜索属性表的窗口。 返回值：如果属性表中包含了给定的字符串，那么返回值为相关的数据句柄。否则，返回值为NULL。
    .参数 lpString, 文本型, , 指向以null结尾的字符串指针，或者包含一个标识字符串的原子。如果该参数是一个原子，那么它必须是使用GlobalAddAtom函数创建的。原子是16位的数据值，它必须是放置在lpstring参数的低位率中，而高位字必须为O。 

.DLL命令 WriteFile, 逻辑型, "kernel32.dll", "WriteFile", 公开, 
    .参数 hFile, 整数型, , 一个文件的句柄
    .参数 lpBuffer, 字节集, , 要写入的一个数据缓冲区
    .参数 nNumberOfBytesToWrite, 整数型, , 要写入数据的字节数量。如写入零字节，表示什么都不写入，但会更新文件的“上一次修改时间”。针对位于远程系统的命名管道，限制在65535个字节以内
    .参数 lpNumberOfBytesWritten, 整数型, 传址, 实际写入文件的字节数量
    .参数 lpOverlapped, 整数型, , 

.DLL命令 GetScrollPos, 整数型, "user32.dll", "GetScrollPos", 公开, 
    .参数 hWnd, 整数型, , 
    .参数 nBar, 整数型, , 

.DLL命令 DeleteUrlCacheEntry, 空白型, "wininet.dll", "DeleteUrlCacheEntry", 公开, ,删除Url缓存入口_
    .参数 Url名称, 文本型, , lpszUrlName

.DLL命令 FindFirstUrlCacheEntryA, 整数型, "wininet.dll", "FindFirstUrlCacheEntryA", 公开, 寻找第一个Url缓存入口_
    .参数 寻找样式, 文本型, , lpszUrlSearchPattern
    .参数 第一个Url缓存入口信息, 字节集, , lpFirstCacheEntryInfo
    .参数 第一个Url缓存入口信息大小, 整数型, 传址, lpdwFirstCacheEntryInfoBufferSize

.DLL命令 FindNextUrlCacheEntryA, 整数型, "wininet.dll", "FindNextUrlCacheEntryA", 公开, 寻找下一个Url缓存入口_
    .参数 下一个Url缓存入口信息, 整数型, , lpNextCacheEntryInfo
    .参数 lpNextCacheEntryInfo, 字节集, , Any型,根据需要可以设置成不同的类型
    .参数 下一个Url缓存入口信息大小, 整数型, 传址, lpdwNextCacheEntryInfoBufferSize

.DLL命令 FindCloseUrlCache, 整数型, "wininet.dll", "FindCloseUrlCache", 公开, 关闭寻找缓存_
    .参数 枚举句柄, 整数型, , hEnumHandle

.DLL命令 SHFileOperationA, 整数型, "Shell32.dll", "SHFileOperationA", 公开, 
    .参数 文件参数, 未知类型0x41012C5F, , 

.DLL命令 gethostbyname, 整数型, "ws2_32.dll", "gethostbyname", 公开, 成功返回内存指针
    .参数 name, 文本型, , 机器名称

.DLL命令 UpdateWindow, 整数型, "user32.dll", "UpdateWindow", 公开, 强制立即更新窗口，窗口中以前屏蔽的所有区域都会重画（在vb里使用：如vb窗体或控件的任何部分需要更新，可考虑直接使用refresh方法  非零表示成功，零表示失败
    .参数 hwnd, 整数型, , 欲更新窗口的句柄;

.DLL命令 gethostname, 整数型, "ws2_32.dll", "gethostname", 公开, 取本机名，失败返回-1，成功返回0。
    .参数 name, 文本型, 传址, 给变量，用于存放名称
    .参数 namelen, 整数型, , 上一个参数的长度

.DLL命令 sendto, 整数型, "ws2_32.dll", "sendto", 公开, 发送数据(UDP)
    .参数 s, 整数型, , 套接字描述符
    .参数 buf, 字节集, 传址, 数据
    .参数 len, 整数型, , 数据长度
    .参数 flags, 整数型, , 0
    .参数 to, 套接字地址, 传址, 目标地址信息
    .参数 tolen, 整数型, , 地址信息长度

.DLL命令 connect, 整数型, "ws2_32.dll", "connect", 公开, 连接到服务器(TCP)
    .参数 网络通讯标识符, 整数型, , s
    .参数 名称结构, 套接字地址, , addr
    .参数 名称结构长度, 整数型, , namelen(16)

.DLL命令 select, 整数型, "ws2_32.dll", "select", 公开, 
    .参数 nfds, 整数型, , 
    .参数 readfds, 未知类型0x41012C60, 传址, 指向一组等待可读性检查的套接口
    .参数 writefds, 未知类型0x41012C60, 传址, 指向一组等待可写性检查的套接口
    .参数 exceptfds, 未知类型0x41012C60, 传址, 指向一组等待错误检查的套接口
    .参数 timeout, 整数型, 传址, 

.DLL命令 InternetOpenUrlA, 整数型, "wininet.dll", "InternetOpenUrlA", 公开, 
    .参数 Internet句柄, 整数型, , 
    .参数 Url地址, 文本型, , 
    .参数 头文本, 文本型, , 
    .参数 头文本长度, 整数型, , 
    .参数 标志, 整数型, , 
    .参数 定义值, 整数型, , 

.DLL命令 WSAAsyncSelect, 整数型, "ws2_32.dll", "WSAAsyncSelect", 公开, 异步选择_ 本函数自动将套接口设置为非阻塞模式  0  表明是成功的
    .参数 网络通讯标识符, 整数型, , s标识一个需要事件通知的套接口的描述符
    .参数 窗口句柄, 整数型, , hWnd标识一个在网络事件发生时需要接收消息的窗口句柄
    .参数 消息值, 整数型, , wMsg在网络事件发生时要接收的消息
    .参数 事件, 整数型, , lEvent位屏蔽码,用于指明应用程序感兴趣的网络事件集合.

.DLL命令 getpeername, 整数型, "ws2_32.dll", "getpeername", 公开, 获取远端信息（已连接对方IP和端口）。成功返回0
    .参数 句柄, 整数型, , 
    .参数 name, 套接字地址, 传址, 地址信息
    .参数 namelen, 整数型, 传址, name长度,Sockaddr_in长度为16

.DLL命令 GetsockName, 整数型, "ws2_32.dll", "getsockname", 公开, 获取本地接口的地址信息（IP和端口）。成功返回0
    .参数 s, 整数型, , 句柄
    .参数 name, 套接字地址, 传址, 地址信息
    .参数 namelen, 整数型, 传址, name长度,Sockaddr_in长度为16

.DLL命令 recv_字节集, 整数型, "ws2_32.dll", "recv", 公开, 接收字节集数据(TCP，当数据这次未接收完时返回剩余字节数)
    .参数 网络通讯标识符, 整数型, , s
    .参数 缓冲区, 字节集, 传址, buf数据(提供变量)
    .参数 缓冲区长度, 整数型, , lLen
    .参数 标志, 整数型, , flags

.DLL命令 send, 整数型, "ws2_32.dll", "send", 公开, 已发送长度
    .参数 s, 整数型, , 套接字
    .参数 buf, 整数型, , 封包指针
    .参数 len, 整数型, , 封包长度
    .参数 flags, 整数型, , 标志0

.DLL命令 ntohs, 短整数型, "ws2_32.dll", "ntohs", 公开, 转换为端口号-网络转换到本机
    .参数 十六位网络端口, 短整数型, , netshort欲转换值

.DLL命令 inet_ntoa, 整数型, "ws2_32.dll", "inet_ntoa", 公开, 将整数格式IP地址转换为点数格式（返回值是内存地址指针）
    .参数 网络地址, 整数型, , lIn欲转换整数格式IP地址

.DLL命令 accept, 整数型, "ws2_32.dll", "accept", 公开, 等待用户进入并接受连接
    .参数 s, 整数型, , 套接字描述符
    .参数 addr, 套接字地址, 传址, 地址信息
    .参数 addrlen, 整数型, 传址, 地址信息长度（长度为16）

.DLL命令 listen, 整数型, "ws2_32.dll", "listen", 公开, 监听
    .参数 sockfd, 整数型, , 套接字描述符
    .参数 backlog, 整数型, , 最多容纳客户请求数

.DLL命令 bind, 整数型, "ws2_32.dll", "bind", 公开, 绑定一个地址和端口
    .参数 套接字描述符, 整数型, , 
    .参数 地址结构, 套接字地址, 传址, 地址信息
    .参数 结构大小, 整数型, , 地址信息长度(长度16

.DLL命令 htons, 短整数型, "ws2_32.dll", "htons", 公开, 转换为network 排列方式的数目
    .参数 十六位主机命令, 短整数型, , hostshort端口号

.DLL命令 socket, 整数型, "ws2_32.dll", "socket", 公开, 创建套接字
    .参数 协议族, 整数型, , af使用的通信协议的协议族
    .参数 类型, 整数型, , lType流套接字类型
    .参数 协议, 整数型, , protocol使用的通信协议

.DLL命令 closesocket, 整数型, "ws2_32.dll", "closesocket", 公开, 销毁套接字
    .参数 套接字描述符, 整数型, , 

.DLL命令 WSACleanup, 整数型, "ws2_32.dll", "WSACleanup", 公开, 卸载Winsocket服务

.DLL命令 WSAStartup, 整数型, "ws2_32.dll", "WSAStartup", 公开, 初始化WnSocket服务
    .参数 必需版本, 整数型, , wVersionRequired
    .参数 服务信息, 未知类型0x41012C61, , lpWSAData

.DLL命令 SendARP, 整数型, "IPHLPAPI.DLL", "SendARP", 公开, 
    .参数 目标IP, 整数型, , 
    .参数 本机IP, 整数型, , 
    .参数 MAC缓冲, 字节型, 传址 数组, 
    .参数 长度, 整数型, 传址, 

.DLL命令 inet_addr, 整数型, "ws2_32.dll", "inet_addr", 公开, 
    .参数 IP, 文本型, , 

.DLL命令 IsWow64Process, 逻辑型, "kernel32.dll", "IsWow64Process", 公开, 
    .参数 hProcess, 整数型, , 
    .参数 Wow64Process, 逻辑型, 传址, 

.DLL命令 QueryPerformanceFrequency, 整数型, "kernel32.dll", "QueryPerformanceFrequency", 公开, 返回计数频率
    .参数 lpFrequency, 长整数型, 传址, 

.DLL命令 QueryPerformanceCounter, 整数型, "kernel32.dll", "QueryPerformanceCounter", 公开, 获取计数值
    .参数 lpPerformanceCount, 长整数型, 传址, 

.DLL命令 ActivateKeyboardLayout, 整数型, "user32.dll", "ActivateKeyboardLayout", 公开, 输入法激活
    .参数 hkl, 整数型, , 
    .参数 flags, 整数型, , 

.DLL命令 ImmInstallIMEA, 整数型, "imm32.dll", "ImmInstallIMEA", 公开, 安装输入法
    .参数 文件名, 文本型, , 
    .参数 输入法名称, 文本型, , 

.DLL命令 UnloadKeyboardLayout, 整数型, "user32.dll", "UnloadKeyboardLayout", 公开, 缷载已有的键盘布局，成功则返回键盘布局句柄，失败返回0。
    .参数 HKL, 整数型, , 键盘布局句柄

.DLL命令 GetKeyboardLayoutList, 整数型, "user32.dll", "GetKeyboardLayoutList", 公开, 获得系统适用的所有键盘布局的一个列表，成功则返回键盘布局数量，失败返回0。
    .参数 nBuff, 整数型, , 如设为0，表示获取可用键盘布局的最大数量
    .参数 lpList, 整数型, 数组, 缓存数组指针，这个数组会随同句柄载入可用的键盘布局。

.DLL命令 LoadKeyboardLayoutA, 整数型, "user32.dll", "LoadKeyboardLayoutA", 公开, 载入一个键盘布局，并返回键盘布局句柄。0表示出错。
    .参数 pwszKLID, 文本型, , 一个8字符字串，用于描述键盘布局的名称。
    .参数 flags, 整数型, , 参考“KLF”常量。

.DLL命令 IMESetPubString, 空白型, "imedllhost09.ime", "IMESetPubString", 公开, 输入法注入
    .参数 dll文件名, 文本型, , 要注入的dll
    .参数 是否退出时卸载, 整数型, , 输入法退出时是否同时卸载注入的DLL（0-是，1-否）
    .参数 是否自动切换, 整数型, , 当切换到目标输入法时自动切换到下一个输入法（0-否，1-是）
    .参数 参数一, 整数型, , 0
    .参数 参数二, 整数型, , 0
    .参数 参数三, 整数型, , 0

.DLL命令 IMEClearPubString, 逻辑型, "imedllhost09.ime", "IMEClearPubString", 公开, 输入法停止注入

.DLL命令 GetGUIThreadInfo, 整数型, "user32.dll", "GetGUIThreadInfo", 公开, 　
    .参数 idThread, 整数型, , 
    .参数 pgui, 未知类型0x41012C62, 传址, 

.DLL命令 GetAsyncKeyState, 整数型, "user32.dll", "GetAsyncKeyState", 公开, 取键状态
    .参数 键代码, 整数型, , vKey Long，欲测试的虚拟键的键码

.DLL命令 StretchBlt, 空白型, "gdi32.dll", "StretchBlt", 公开, 伸缩复制图象
    .参数 目标设备场景, 整数型, , 
    .参数 目标位置横坐标, 整数型, , 
    .参数 目标位置纵坐标, 整数型, , 
    .参数 目标图像宽, 整数型, , 
    .参数 目标图像高, 整数型, , 
    .参数 源设备场景, 整数型, , 
    .参数 源位置横坐标, 整数型, , 
    .参数 源位置纵坐标, 整数型, , 
    .参数 源图像宽, 整数型, , 
    .参数 源图像高, 整数型, , 
    .参数 光栅运算, 整数型, , 

.DLL命令 FindWindowA, 整数型, "user32.dll", "FindWindowA", 公开, 寻找窗口列表中第一个符合指定条件的顶级窗口
    .参数 窗口类名, 文本型, , 
    .参数 窗口标题, 文本型, , 

.DLL命令 GetAncestor, 整数型, "user32.dll", "GetAncestor", 公开, 取出指定窗口的最顶级父窗口
    .参数 hwnd, 整数型, , 子窗口句柄
    .参数 gaFlags, 整数型, , 

.DLL命令 GetParent, 整数型, "user32.dll", "GetParent", 公开, 取父句柄
    .参数 hwnd, 整数型, , 

.DLL命令 CallWindowProcA, 整数型, "user32.dll", "CallWindowProcA", 公开, 
    .参数 窗口程序指针, 整数型, , 
    .参数 hwnd, 整数型, , 
    .参数 消息值, 整数型, , 
    .参数 参数1, 整数型, , 
    .参数 参数2, 整数型, , 

.DLL命令 GetWindow, 整数型, "user32.dll", "GetWindow", 公开, 获得一个窗口的句柄，该窗口与某源窗口有特定的关系
    .参数 源窗口, 整数型, , 
    .参数 关系, 整数型, , 0：为一个源子窗口寻找第一个兄弟（同级）窗口，或寻找第一个顶级窗口  1：为一个源子窗口寻找最后一个兄弟（同级）窗口，或寻找最后一个顶级窗口  2：为源窗口寻找下一个兄弟窗口  3：为源窗口寻找前一个兄弟窗口  4：寻找窗口的所有者  5：寻找源窗口的第一个子窗口

.DLL命令 MessageBoxA, 整数型, "user32.dll", "MessageBoxA", 公开, 显示和操作一个消息框。该消息框包含一个应用程序定义的消息和标题，加上预定义的图标和按钮的任意组合。 wLanguageId参数指定为预定义的按钮使用的语言资源集。
    .参数 hwnd, 整数型, , 要创建的消息框的所有者窗口的句柄。如果这个参数为NULL，则消息框没有所有者窗口
    .参数 neirong, 文本型, , 
    .参数 title, 文本型, , 
    .参数 nom, 整数型, , 

.DLL命令 LoadLibraryA, 整数型, "kernel32.dll", "LoadLibraryA", 公开, 载入指定的动态链接库，并将它映射到当前进程使用的地址空间。成功则返回库模块的句柄，零表示失败。
    .参数 动态链接库路径, 文本型, , 指定要载入的动态链接库的名称(全路径)

.DLL命令 FreeLibrary, 逻辑型, "kernel32.dll", "FreeLibrary", 公开, 释放动态链接库
    .参数 动态链接库句柄, 整数型, , 使用LoadLibraryA命令返回的

.DLL命令 GetProcAddress, 整数型, "kernel32.dll", "GetProcAddress", 公开, 取动态链接库函数入口地址
    .参数 模块句柄, 整数型, , 通过LoadLibraryA命令取得
    .参数 接口名称, 文本型, , 

.DLL命令 DoOrganizeFavDlg, 整数型, "shdocvw.dll", "DoOrganizeFavDlg", 公开, 整理收藏夹
    .参数 hwnd, 整数型, , 
    .参数 root, 文本型, , 

.DLL命令 DoAddToFavDlg, 逻辑型, "shdocvw.dll", "DoAddToFavDlg", 公开, 添加到收藏夹
    .参数 hwnd, 整数型, , 
    .参数 网址, 文本型, , 
    .参数 缓存大小, 整数型, , 
    .参数 标题, 文本型, , 
    .参数 缓存, 整数型, , 
    .参数 pid, 整数型, , 

.DLL命令 SHGetSpecialFolderLocation, 整数型, "shell32.dll", "SHGetSpecialFolderLocation", 公开, 取收藏夹PID
    .参数 hwnd, 整数型, , 
    .参数 type, 整数型, , 
    .参数 pid, 整数型, 传址, 

.DLL命令 CreateWaitableTimerA, 整数型, "kernel32.dll", "CreateWaitableTimerA", 公开, 程序延时
    .参数 lpTimerAttributes, 整数型, , 
    .参数 bManualReset, 逻辑型, , 
    .参数 lpTimerName, 整数型, , 

.DLL命令 SetWaitableTimer, 整数型, "kernel32.dll", "SetWaitableTimer", 公开, 
    .参数 hTimer, 整数型, , 
    .参数 pDueTime, 未知类型0x41012C63, , 
    .参数 lPeriod, 整数型, , 
    .参数 pfnCompletionRoutine, 整数型, , 
    .参数 lpArgToCompletionRoutine, 整数型, , 
    .参数 fResume, 逻辑型, , 

.DLL命令 MsgWaitForMultipleObjects, 整数型, "User32.dll", "MsgWaitForMultipleObjects", 公开, 
    .参数 nCount, 整数型, , 
    .参数 pHandles, 整数型, 传址, 
    .参数 fWaitAll, 逻辑型, , 
    .参数 dwMilliseconds, 整数型, , 
    .参数 dwWakeMask, 整数型, , 

.DLL命令 CryptAcquireContextA, 整数型, "advapi32.dll", "CryptAcquireContextA", 公开, 
    .参数 phProv, 整数型, 传址, 
    .参数 pszContainer, 文本型, , 
    .参数 pszProvider, 文本型, , 
    .参数 dwProvType, 整数型, , 
    .参数 dwFlags, 整数型, , 

.DLL命令 CryptCreateHash, 整数型, "advapi32.dll", "CryptCreateHash", 公开, 
    .参数 hProv, 整数型, , 
    .参数 Algid, 整数型, , 
    .参数 hKey, 整数型, , 
    .参数 dwFlags, 整数型, , 
    .参数 phHash, 整数型, 传址, 

.DLL命令 CryptReleaseContext, 整数型, "advapi32.dll", "CryptReleaseContext", 公开, 
    .参数 hProv, 整数型, , 
    .参数 dwFlags, 整数型, , 

.DLL命令 CryptDestroyHash, 整数型, "advapi32.dll", "CryptDestroyHash", 公开, 
    .参数 hHash, 整数型, , 

.DLL命令 CryptHashData, 整数型, "advapi32.dll", "CryptHashData", 公开, 
    .参数 hHash, 整数型, , 
    .参数 pbData, 字节集, 传址, 
    .参数 dwDataLen, 整数型, , 
    .参数 dwFlags, 整数型, , 

.DLL命令 CryptGetHashParam, 整数型, "advapi32.dll", "CryptGetHashParam", 公开, 
    .参数 hHash, 整数型, , 
    .参数 dwParam, 整数型, , 
    .参数 pByte, 字节集, , 
    .参数 pdwDataLen, 整数型, 传址, 
    .参数 dwFlags, 整数型, , 

.DLL命令 GetSystemMetrics, 整数型, "User32.dll", "GetSystemMetrics", 公开, 获取windows环境信息
    .参数 nIndex, 整数型, , 

.DLL命令 ExtractAssociatedIconA, 整数型, "shell32.dll", "ExtractAssociatedIconA", 公开, 如果找到任何图标，就返回图标的句柄；否则返回零,这个函数可判断一个可执行程序或DLL中是否存在图标，或是否有图标与系统注册表中指定的文件存在关联。随后，它允许我们提取出那些图标
    .参数 程序句柄, 整数型, , 
    .参数 文件名, 文本型, , 
    .参数 图标类型, 整数型, 传址, 

.DLL命令 DrawIcon, 空白型, "user32.dll", "DrawIcon", 公开, 在指定的位置画一个图标
    .参数 设备句柄, 整数型, , 
    .参数 横向位置, 整数型, , 
    .参数 纵向位置, 整数型, , 
    .参数 图标句柄, 整数型, , 

.DLL命令 LoadImage, 整数型, "user32.dll", "LoadImageA", 公开, 载入一个位图、图标或指针  执行成功则返回对象的一个句柄；零表示失败
    .参数 实例句柄, 整数型, , 要从其中载入图象的DLL或应用程序模块或实例句柄。零表示装载一幅固有图象
    .参数 图象标志符, 文本型, , 欲载入图象的名字。如指定了hInst，就用这个参数指定资源或资源的标志符（标志符是一个长整数）。如hInst为空，而且已指定了LR_LOADFROMFILE，那么这个参数代表文件名（位图、图标或指针文件）。如果是个Long型值，这个参数就代表固有位图、图标或指针的编号
    .参数 图象类型, 整数型, , 下述常数之一，指定了欲载入的图象类型：IMAGE_BITMAP， IMAGE_CURSOR， IMAGE_ICON
    .参数 图象宽度, 整数型, , 要求的图象宽度和高度。图象会根据情况自动伸缩。如设为零，表示用图象的默认大小
    .参数 图象高度, 整数型, , 同上
    .参数 常数组合, 整数型, , 下述常数的任意组合，它们都在api32.txt文件中得到了定义：;LR_DEFAULTCOLOR：以常规方式载入图象;LR_LOADREALSIZE：不对图象进行缩放处理。忽略n1和n2的设置;LR_CREATEDIBSECTION：如果指定了IMAGE_BITMAP，就返回DIBSection的句柄，而不是位图的句柄;LR_DEFAULTSIZE：如果n1和n2为零，就使用由系统定义的图象默认大小，而不是图象本身定义的大小;LR_LOADFROMFILE：如hInst为零，lpsz就代表要载入适当类型的一个文件的名字，仅适用于Win95;LR_LOADMAP3DCOLORS：将图象中的深灰、灰、以及浅灰像素都替换成COLOR_3DSHADOW，COLOR_3DFACE以及COLOR_3DLIGHT的当前设置;LR_LOADTRANSPARENT：与图象中第一个像素相符的所有像素都由系统替换;LR_MONOCHROME：将图象转换成单色;LR_SHARED：将图象作为一个共享资源载入。在NT 4.0中装载固有资源时要用到这个设置;

.DLL命令 HeapAlloc, 整数型, "kernel32.dll", "HeapAlloc", 公开, 从堆栈分配内存
    .参数 堆栈句柄, 整数型, , hHeap
    .参数 标志, 整数型, , dwFlags
    .参数 分配大小, 整数型, , dwBytes

.DLL命令 GetProcessHeap, 整数型, "kernel32.dll", "GetProcessHeap", 公开, _取进程堆栈句柄, 获取调用过程堆句柄

.DLL命令 SetMenuItemBitmaps, 逻辑型, "user32.dll", "SetMenuItemBitmaps", 公开, 设置菜单图标
    .参数 菜单句柄, 整数型, , 
    .参数 位置, 整数型, , 
    .参数 标志, 整数型, , 
    .参数 未选图标句柄, 整数型, , 
    .参数 已选图标句柄, 整数型, , 

.DLL命令 InsertMenuA, 逻辑型, "user32.dll", "InsertMenuA", 公开, 
    .参数 菜单句柄, 整数型, , 
    .参数 位置, 整数型, , 
    .参数 标志, 整数型, , 
    .参数 ID, 整数型, , 
    .参数 标题, 文本型, , 

.DLL命令 CreatePopupMenu, 整数型, "user32.dll", "CreatePopupMenu", 公开, 创建空白弹出式菜单

.DLL命令 ModifyMenuA, 逻辑型, "user32.dll", "ModifyMenuA", 公开, 修改菜单标题
    .参数 菜单句柄, 整数型, , 
    .参数 标识符, 整数型, , nPosition，欲改变的菜单条目的标识符
    .参数 常数标志, 整数型, , wFlags，一系列常数标志的组合
    .参数 新命令ID, 整数型, , wIDNewItem，指定菜单条目的新命令ID
    .参数 标志, 文本型, , any，位图句柄或菜单文本

.DLL命令 DrawMenuBar, 逻辑型, "user32.dll", "DrawMenuBar", 公开, 为指定的窗口重画菜单
    .参数 hwnd, 整数型, , hwnd,要重画菜单栏的窗口的句柄

.DLL命令 GetMenuItemCount, 整数型, "user32.dll", "GetMenuItemCount", 公开, 菜单取数量
    .参数 hMenu, 整数型, , 

.DLL命令 RemoveMenu, 逻辑型, "user32.dll", "RemoveMenu", 公开, 删除菜单，非零表示成功，零表示失败。会设置GetLastError
    .参数 菜单句柄, 整数型, , hmenu，菜单的句柄
    .参数 标识符, 整数型, , nPosition，欲改变的菜单条目的标识符。如在wFlags参数中指定了MF_BYCOMMAND，这个参数就代表欲改变的菜单条目的命令ID。如设置的是MF_BYPOSITION，这个参数就代表菜单条目在菜单中的位置（第一个条目的位置为零）
    .参数 标识符类型, 整数型, , wflags，常数MF_BYCOMMAND或MF_BYPOSITION，取决于nPosition参数

.DLL命令 AppendMenuA, 逻辑型, "user32.dll", "AppendMenuA", 公开, 添加菜单
    .参数 菜单句柄, 整数型, , hMenu,菜单句柄
    .参数 菜单常数标志, 整数型, , wFlags,参见相关帮助
    .参数 新菜单条目ID, 整数型, , wIDNewItem,指定菜单条目的新命令ID
    .参数 标志值, 文本型, , lpNewItem,参见相关帮助

.DLL命令 GetMenu, 整数型, "user32.dll", "GetMenu", 公开, 取指定窗口的菜单条句柄
    .参数 hwnd, 整数型, , 

.DLL命令 GetSubMenu, 整数型, "user32.dll", "GetSubMenu", 公开, 取子菜单句柄
    .参数 菜单句柄, 整数型, , 
    .参数 位置, 整数型, , 

.DLL命令 InsertMenu, 逻辑型, "user32.dll", "InsertMenu", 公开, 
    .参数 hMenu, 整数型, , 手柄以被改变的菜单
    .参数 uPosition, 整数型, , 之前要插入新的菜单项所确定的uFlags参数指定的菜单项
    .参数 uFlags, 整数型, , 
    .参数 uIDNewItem, 整数型, , 指定的标识符的新的菜单项，或如果uFlags参数的MF_POPUP的标志位，下拉菜单或子菜单的句柄
    .参数 lpNewItem, 整数型, , 

.DLL命令 IsMenu, 逻辑型, "user32.dll", "IsMenu", 公开, 是否为菜单句柄
    .参数 hMenu, 整数型, , 手柄以被改变的菜单

.DLL命令 GetMenuStringA, 整数型, "user32.dll", "GetMenuStringA", 公开, 菜单取标题
    .参数 菜单句柄, 整数型, , 
    .参数 项目索引, 整数型, , 
    .参数 菜单标题, 文本型, , 
    .参数 标题长度, 整数型, , 
    .参数 操作标志, 整数型, , 

.DLL命令 DestroyMenu, 逻辑型, "user32.dll", "DestroyMenu", 公开, 清除菜单
    .参数 hMenu, 整数型, , 

.DLL命令 GetMenuItemID, 整数型, "user32.dll", "GetMenuItemID", 公开, 取菜单ID
    .参数 菜单句柄, 整数型, , 
    .参数 位置, 整数型, , 

.DLL命令 GdiplusStartup, 整数型, "gdiplus.dll", "GdiplusStartup", 公开, GDI启动 图像转换类
    .参数 token, 整数型, 传址, 
    .参数 inputbuf, 未知类型0x41012C64, , 
    .参数 outputbuf, 整数型, , 

.DLL命令 GdiplusShutdown, 空白型, "gdiplus.dll", "GdiplusShutdown", 公开, _GDI关闭
    .参数 token, 整数型, , 

.DLL命令 InternetFindNextFileA, 整数型, "WinInet.dll", "InternetFindNextFileA", 公开, 
    .参数 hFind, 整数型, , 
    .参数 lpvFindData, 未知类型0x41012C65, 传址, 

.DLL命令 FtpFindFirstFileA, 整数型, "WinInet.dll", "FtpFindFirstFileA", 公开, _FTP查找文件
    .参数 hFtp, 整数型, , 
    .参数 lpszSearchFile, 文本型, , 
    .参数 lpFindFileData, 未知类型0x41012C65, , 
    .参数 dwFlags, 整数型, , 
    .参数 dwContext, 整数型, , 

.DLL命令 FtpGetFileA, 逻辑型, "WinInet.dll", "FtpGetFileA", 公开, _FTP文件下载
    .参数 hFtp, 整数型, , 
    .参数 lpszRemoteFile, 文本型, , 
    .参数 lpszNewFile, 文本型, , 
    .参数 fFailIfExists, 整数型, , 
    .参数 dwFlagsAndAttributes, 整数型, , 
    .参数 dwFlags, 整数型, , 
    .参数 dwContext, 整数型, , 

.DLL命令 FtpPutFileA, 逻辑型, "WinInet.dll", "FtpPutFileA", 公开, _FTP文件上传
    .参数 连接句柄, 整数型, , 
    .参数 本地文件名, 文本型, , 
    .参数 FTP文件路径, 文本型, , 
    .参数 文件传输方式, 整数型, , 
    .参数 dwContext, 整数型, , 

.DLL命令 FtpDeleteFileA, 逻辑型, "WinInet.dll", "FtpDeleteFileA", 公开, 
    .参数 hFtp, 整数型, , 
    .参数 lpszKillFile, 文本型, , 

.DLL命令 FtpSetCurrentDirectoryA, 逻辑型, "WinInet.dll", "FtpSetCurrentDirectoryA", 公开, _FTP置现行目录
    .参数 hFtp, 整数型, , 
    .参数 lpszDirectory, 文本型, , 

.DLL命令 FtpGetCurrentDirectoryA, 整数型, "WinInet.dll", "FtpGetCurrentDirectoryA", 公开, _FTP取现行目录
    .参数 hFtp, 整数型, , 
    .参数 lpszDirectory, 文本型, 传址, 
    .参数 BuffLength, 整数型, 传址, 

.DLL命令 FtpRenameFileA, 逻辑型, "WinInet.dll", "FtpRenameFileA", 公开, _FTP文件改名
    .参数 hFtp, 整数型, , 
    .参数 lpszCurFile, 文本型, , 
    .参数 lpszNewFile, 文本型, , 

.DLL命令 PathIsDirectoryA, 整数型, "shlwapi.dll", "PathIsDirectoryA", 公开, 目录是否存在
    .参数 lpszPath, 文本型, , 

.DLL命令 PathIsDirectoryW, 逻辑型, "shlwapi.dll", "PathIsDirectoryW", 公开, 目录_是否存在W
    .参数 pszPath, 字节集, , 

.DLL命令 FtpCreateDirectoryA, 逻辑型, "WinInet.dll", "FtpCreateDirectoryA", 公开, _FTP创建目录
    .参数 hFtp, 整数型, , 
    .参数 lpszNewDir, 文本型, , 

.DLL命令 FtpGetFileSize, 整数型, "wininet.dll", "FtpGetFileSize", 公开, _FTP取文件大小
    .参数 hFile, 整数型, , 
    .参数 lpdwFileSizeHigh, 整数型, 传址, 

.DLL命令 FtpOpenFileA, 整数型, "wininet.dll", "FtpOpenFileA", 公开, _FTP打开文件
    .参数 hConnect, 整数型, , 
    .参数 lpszFileName, 文本型, , 
    .参数 dwAccess, 整数型, , 
    .参数 dwFlags, 整数型, , 
    .参数 dwContext, 整数型, , 

.DLL命令 RemoveDirectoryA, 整数型, "kernel32.dll", "RemoveDirectoryA", 公开, _FTP删除目录1
    .参数 lpPathName, 文本型, , 

.DLL命令 FtpRemoveDirectoryA, 逻辑型, "WinInet.dll", "FtpRemoveDirectoryA", 公开, _FTP删除目录
    .参数 hFtp, 整数型, , 
    .参数 lpszKillDir, 文本型, , 

.DLL命令 VirtualAllocEx, 整数型, "kernel32.dll", "VirtualAllocEx", 公开, 分配外部指针
    .参数 hProcess, 整数型, , 
    .参数 lpAddress, 整数型, , 
    .参数 dwSize, 整数型, , 
    .参数 flAllocationType, 整数型, , 
    .参数 flProtect, 整数型, , 

.DLL命令 GetLocalTime, 整数型, "kernel32.dll", "GetLocalTime", 公开, ,
    .参数 系统时间格式, 精易_时间, 传址, 

.DLL命令 GlobalSize, 整数型, "kernel32.dll", "GlobalSize", 公开, 返回全局内存块大小
    .参数 hMem, 整数型, , 

.DLL命令 lstrcpyn_文本型, 整数型, "kernel32.dll", "lstrcpyn", 公开, 取指针地址
    .参数 目标, 文本型, 传址, 
    .参数 源, 文本型, 传址, 
    .参数 长度, 整数型, , 

.DLL命令 lstrcpyn_日期时间型, 整数型, "kernel32.dll", "lstrcpyn", 公开, 
    .参数 目的指针, 日期时间型, 传址, 
    .参数 源指针, 日期时间型, 传址, 
    .参数 复制长度, 整数型, , 0

.DLL命令 lstrcpyn_整数型, 整数型, "kernel32.dll", "lstrcpyn", 公开, 
    .参数 目标, 整数型, 传址, 
    .参数 源, 整数型, 传址, 
    .参数 长度, 整数型, , 

.DLL命令 lstrcpyn_子程序指针, 整数型, "kernel32.dll", "lstrcpyn", 公开, 
    .参数 目标, 子程序指针, 传址, 
    .参数 源, 子程序指针, 传址, 
    .参数 长度, 整数型, , 

.DLL命令 lstrcpyn_小数型, 整数型, "kernel32.dll", "lstrcpyn", 公开, 
    .参数 目标, 小数型, 传址, 
    .参数 源, 小数型, 传址, 
    .参数 长度, 整数型, , 

.DLL命令 lstrcpyn_双精度小数型, 整数型, "kernel32.dll", "lstrcpyn", 公开, 
    .参数 目标, 双精度小数型, 传址, 
    .参数 源, 双精度小数型, 传址, 
    .参数 长度, 整数型, , 

.DLL命令 lstrcpyn_短整数型, 整数型, "kernel32.dll", "lstrcpyn", 公开, 
    .参数 目标, 短整数型, 传址, 
    .参数 源, 短整数型, 传址, 
    .参数 长度, 整数型, , 

.DLL命令 lstrcpyn_长整数型, 整数型, "kernel32.dll", "lstrcpyn", 公开, 
    .参数 目标, 长整数型, 传址, 
    .参数 源, 长整数型, 传址, 
    .参数 长度, 整数型, , 

.DLL命令 SetHandleCount_字节型, 整数型, "kernel32.dll", "SetHandleCount", 公开, 设置进程的文件句柄数
    .参数 字节集数据, 字节型, 传址, 

.DLL命令 lstrcpyn_字节型, 整数型, "kernel32.dll", "lstrcpyn", 公开, 
    .参数 目标, 字节型, 传址, 
    .参数 源, 字节型, 传址, 
    .参数 长度, 整数型, , 

.DLL命令 lstrcpyn_字节集, 整数型, "kernel32.dll", "lstrcpyn", 公开, 字节集
    .参数 欲取其指针, 字节集, 传址, 
    .参数 欲取其指针, 字节集, 传址, 
    .参数 保留, 整数型, , 0

.DLL命令 lstrcpyn_对象, 整数型, "kernel32.dll", "lstrcpyn", 公开, 图像转换类
    .参数 lpString1, 对象, 传址, 
    .参数 lpString2, 对象, 传址, 
    .参数 iMaxLength, 整数型, , 

.DLL命令 GdipCreateHBITMAPFromBitmap, 整数型, "gdiplus.dll", "GdipCreateHBITMAPFromBitmap", 公开, 
    .参数 Bitmap, 整数型, , 
    .参数 hBmpReturn, 整数型, 传址, 
    .参数 Background, 整数型, , 

.DLL命令 GdipCreateBitmapFromHBITMAP, 整数型, "gdiplus.dll", "GdipCreateBitmapFromHBITMAP", 公开, 
    .参数 hbm, 整数型, , 
    .参数 hPal, 整数型, , 
    .参数 BITMAP, 整数型, 传址, 

.DLL命令 GlobalFree, 整数型, "kernel32.dll", "GlobalFree", 公开, 释放全局内存块
    .参数 hMem, 整数型, , 

.DLL命令 CreateStreamOnHGlobal, 整数型, "Ole32.dll", "CreateStreamOnHGlobal", 公开, 
    .参数 hGlobal, 整数型, , 
    .参数 fDeleteOnRelease, 逻辑型, , 
    .参数 ppstm, 整数型, 传址, 

.DLL命令 GDIpSaveImageToStream_GUID, 整数型, "gdiplus.dll", "GdipSaveImageToStream", 公开, 图像转换类
    .参数 image, 整数型, , 
    .参数 stream, 整数型, , 
    .参数 clsidEncoder, GUID, , 
    .参数 encoderParams, 整数型, , 

.DLL命令 RtlMoveMemory_int2Bytes, 整数型, "kernel32.dll", "RtlMoveMemory", 公开, 内存拷贝
    .参数 Destination, 字节集, , 
    .参数 字节集指针, 整数型, , 
    .参数 数据长度, 整数型, , 

.DLL命令 CallNextHookEx, 整数型, "user32.dll", "CallNextHookEx", 公开, 下一个钩子
    .参数 hHook, 整数型, , 
    .参数 icode, 整数型, , 
    .参数 wParam, 整数型, , 
    .参数 lParam, 整数型, , 

.DLL命令 SetWindowsHookExA, 整数型, "User32.dll", "SetWindowsHookExA", 公开, 安装钩子
    .参数 ihook, 整数型, , 
    .参数 lpfunc, 子程序指针, , 
    .参数 hin, 整数型, , 
    .参数 threadid, 整数型, , 

.DLL命令 UnhookWindowsHookEx, 逻辑型, "User32.dll", "UnhookWindowsHookEx", 公开, 卸载钩子
    .参数 hHook, 整数型, , 

.DLL命令 WriteProcessMemory_文本型, 逻辑型, "kernel32.dll", "WriteProcessMemory", 公开, 写文本内存
    .参数 hProcess, 整数型, , 
    .参数 pBaseAddress, 整数型, , 内存地址
    .参数 lpBuffer, 文本型, 传址, 数据指针
    .参数 nSize, 整数型, , 长度
    .参数 lpNumberOfBytesWritten, 整数型, , 实际写出长度

.DLL命令 LocalSize_SHELLEXECUTEINFOA, 整数型, "kernel32.dll", "LocalSize", 公开, 返回本地内存块大小　
    .参数 hMem, 未知类型0x41012C66, , 

.DLL命令 LocalSize, 整数型, "kernel32.dll", "LocalSize", 公开, 返回本地内存块大小
    .参数 hMem, 整数型, , 

.DLL命令 RtlMoveMemory_字节集, 空白型, "kernel32.dll", "RtlMoveMemory", 公开, 写内存_字节集
    .参数 Destination, 整数型, , 
    .参数 Source, 字节集, , 
    .参数 Length, 整数型, , 

.DLL命令 RtlMoveMemory_BITMAPINFO, 整数型, "kernel32.dll", "RtlMoveMemory", 公开, _内存图像截图1
    .参数 Destination, 字节集, , 
    .参数 Source, 未知类型0x41012C67, , 
    .参数 Length, 整数型, , 

.DLL命令 RtlMoveMemory_BITMAPFILEHEADER, 整数型, "kernel32.dll", "RtlMoveMemory", 公开, _内存图像截图
    .参数 Destination, 字节集, , 
    .参数 Source, 未知类型0x41012C68, , 
    .参数 Length, 整数型, , 

.DLL命令 GetDIBColorTable, 空白型, "gdi32.dll", "GetDIBColorTable", 公开, 取得颜色表信息
    .参数 hDC, 整数型, , Long，已选入了一个DIBSection对象的设备场景
    .参数 un1, 整数型, , Long，颜色表中欲取回的第一个条目的索引
    .参数 un2, 整数型, , Long，欲取回的条目数量
    .参数 pRGBQuad, 字节集, 传址, RGBQUAD，这个结构数组用于装载颜色表信息的第一个条目

.DLL命令 RtlMoveMemory_位图信息, 整数型, "kernel32.dll", "RtlMoveMemory", 公开, 内存拷贝_
    .参数 Destination, 字节集, , 
    .参数 Source, 未知类型0x41012C69, , 
    .参数 Length, 整数型, , 

.DLL命令 GetBitmapBits, 空白型, "gdi32.dll", "GetBitmapBits", 公开, 复制二进制位图_
    .参数 位图句柄, 整数型, , 
    .参数 字节限制, 整数型, , 
    .参数 缓冲区, 字节集, 传址, 

.DLL命令 CreateDIBSection1, 整数型, "gdi32.dll", "CreateDIBSection", 公开,  创建GDI对象2_
    .参数 设备场景句柄, 整数型, , 
    .参数 位图数据, 字节集, 传址, 
    .参数 常数, 整数型, , 
    .参数 内存地址, 整数型, 传址, 
    .参数 文件映射句柄, 整数型, , 
    .参数 偏移量, 整数型, , 

.DLL命令 CreateDIBSection, 整数型, "gdi32.dll", "CreateDIBSection", 公开, 创建一个DIBSection。这是一个GDI对象，可象一幅与设备有关位图那样使用。但是，它在内部作为一幅与设备无关位图保存  执行成功返回DIBSection位图的句柄，零表示失败。会设置GetLastError
    .参数 设备场景句柄, 整数型, , 一个设备场景的句柄。如dw设为DIB_PAL_COLORS，那么DIB颜色表就会用来自逻辑调色板的颜色进行初始化
    .参数 pBitmapInfo, 未知类型0x41012C69, , BITMAPINFO，这个结构初始化成欲创建的那幅位图的配置数据
    .参数 常数, 整数型, , 下述常数之一：;DIB_PAL_COLORS：BITMAPINFO包含了一个16位调色板索引的数组;DIB_RGB_COLORS：BITMAPINFO包含了一个颜色表，其中保存有32位颜色（RGBQUAD）
    .参数 内存地址, 整数型, , 用于载入DIBSection数据区的内存地址
    .参数 文件映射句柄, 整数型, , 指向一个文件映射对象的可选句柄，位图将在其中创建。如设为零，Windows会自动分配内存
    .参数 偏移量, 整数型, , 如指定了句柄，就用这个参数指定位图数据在文件映射对象中的偏移量;

.DLL命令 RtlMoveMemory_BITMAPFILEHEADER_字节型, 空白型, "kernel32.dll", "RtlMoveMemory", 公开, 
    .参数 Dest, 字节型, 传址, 
    .参数 Src, 未知类型0x41012C68, , 
    .参数 len, 整数型, , 

.DLL命令 RtlMoveMemory_BITMAPINFOHEADER, 空白型, "kernel32.dll", "RtlMoveMemory", 公开, 
    .参数 Dest, 字节型, 传址, 
    .参数 Src, 未知类型0x41012C6A, , 
    .参数 len, 整数型, , 

.DLL命令 LsaFreeMemory, 整数型, "ADVAPI32.DLL", "LsaFreeMemory", 公开, 
    .参数 Buffer, 字节集, 传址, 

.DLL命令 LsaClose, 整数型, "ADVAPI32.DLL", "LsaClose", 公开, 
    .参数 ObjectHandle, 整数型, , 

.DLL命令 RtlMoveMemory_NMLVCUSTOMDRAW, 空白型, "kernel32.dll", "RtlMoveMemory", 公开, 
    .参数 Destination, 未知类型0x41012C6B, , 
    .参数 Source, 整数型, , 
    .参数 Length, 整数型, , 

.DLL命令 DrawText, 整数型, "user32.dll", "DrawTextA", 公开, 将文本描绘到指定的矩形中  描绘文字的高度
    .参数 设备场景句柄, 整数型, , 欲在其中显示文字的一个设备场景的句柄
    .参数 描绘的字串, 文本型, , 欲描绘的文本字串
    .参数 描绘的字串数量, 整数型, , 欲描绘的字符数量。如果要描绘整个字串（直到空中止符），则可将这个参数设为-1
    .参数 描绘文本区域, 精易_矩形, , RECT，指定用于绘图的一个格式化矩形（采用逻辑坐标）
    .参数 格式, 整数型, , 一个标志位数组，决定了以何种形式执行绘图。参考下面总结的常数类型列表标志常数说明DT_BOTTOM必须同时指定DT_SINGLE。指示文本对齐格式化矩形的底边DT_CALCRECT象下面这样计算格式化矩形：多行绘图时矩形的底边根据需要进行延展，以便容下所有文字；单行绘图时，延展矩形的右侧。不描绘文字。由lpRect参数指定的矩形会载入计算出来的值DT_CENTER文本垂直居中DT_EXPANDTABS描绘文字的时候，对制表站进行扩展。默认的制表站间距是8个字符。但是，可用DT_TABSTOP标志改变这项设定DT_EXTERNALLEADING计算文本行高度的时候，使用当前字体的外部间距属性（the external leading attribute）DT_LEFT文本左对齐DT_NOCLIP描绘文字时不剪切到指定的矩形DT_NOPREFIX通常，函数认为 & 字符表示应为下一个字符加上下划线。该标志禁止这种行为DT_RIGHT文本右对齐DT_SINGLELINE只画单行DT_TABSTOP指定新的制表站间距，采用这个整数的高8位DT_TOP必须同时指定DT_SINGLE。指示文本对齐格式化矩形的顶部DT_VCENTER必须同时指定DT_SINGLE。指示文本对齐格式化矩形的中部DT_WORDBREAK进行自动换行。如用SetTextAlign函数设置了TA_UPDATECP标志，这里的设置则无效;

.DLL命令 WriteProcessMemory_写字节, 逻辑型, "kernel32.dll", "WriteProcessMemory", 公开, 
    .参数 hProcess, 整数型, , 
    .参数 pBaseAddress, 整数型, , 内存地址
    .参数 lpBuffer, 字节型, 传址, 数据指针
    .参数 nSize, 整数型, , 长度
    .参数 lpNumberOfBytesWritten, 整数型, , 实际写出长度

.DLL命令 ReadProcessMemory_字节型, 逻辑型, "Kernel32.dll", "ReadProcessMemory", 公开, 读内存字节
    .参数 hProcess, 整数型, , 
    .参数 lpBaseAddress, 整数型, , 内存地址
    .参数 lpBuffer, 字节型, 传址, 数据指针
    .参数 nSize, 整数型, , 长度
    .参数 lpNumberOfBytesWritten, 整数型, , 实际写出长度

.DLL命令 VirtualProtectEx, 整数型, "kernel32.dll", "VirtualProtectEx", 公开, 修改虚拟保护
    .参数 进程句柄, 整数型, , 
    .参数 内存地址, 整数型, , 
    .参数 内存大小, 整数型, , 
    .参数 属性, 整数型, , 
    .参数 保存之前属性, 整数型, 传址, 

.DLL命令 VirtualProtect, 逻辑型, "kernel32.dll", "VirtualProtect", 公开, _修改内存属性
    .参数 lpAddress, 整数型, , 
    .参数 dwSize, 整数型, , 
    .参数 flNewProtect, 整数型, , 
    .参数 lpflOldProtect, 整数型, 传址, 

.DLL命令 VirtualQueryEx, 整数型, "kernel32.dll", "VirtualQueryEx", 公开, 取内存属性,返回虚拟保护
    .参数 hProcess, 整数型, , 
    .参数 lpAddress, 整数型, , 
    .参数 lpBuffer, 精易_内存属性, , 
    .参数 dwLength, 整数型, , 

.DLL命令 WriteProcessMemory_整数3, 逻辑型, "kernel32.dll", "WriteProcessMemory", 公开, 内存写整数,有传址
    .参数 hProcess, 整数型, , 
    .参数 内存地址, 整数型, , 
    .参数 数据指针, 整数型, 传址, 
    .参数 数据长度, 整数型, , 
    .参数 实际写出长度, 整数型, , 

.DLL命令 ReadProcessMemory_整数型, 逻辑型, "kernel32.dll", "ReadProcessMemory", 公开, 内存读整数,有传址
    .参数 hProcess, 整数型, , 
    .参数 内存地址, 整数型, , 
    .参数 数据指针, 整数型, 传址, 
    .参数 数据长度, 整数型, , 
    .参数 实际写出长度, 整数型, , 

.DLL命令 ReadProcessMemory_短整数型, 逻辑型, "kernel32.dll", "ReadProcessMemory", 公开, 内存读整数,有传址
    .参数 hProcess, 整数型, , 
    .参数 内存地址, 整数型, , 
    .参数 数据指针, 短整数型, 传址, 
    .参数 数据长度, 整数型, , 
    .参数 实际写出长度, 整数型, , 

.DLL命令 ReadProcessMemory_长整数型, 逻辑型, "kernel32.dll", "ReadProcessMemory", 公开, 内存读整数,有传址
    .参数 hProcess, 整数型, , 
    .参数 内存地址, 整数型, , 
    .参数 数据指针, 长整数型, 传址, 
    .参数 数据长度, 整数型, , 
    .参数 实际写出长度, 整数型, , 

.DLL命令 WriteProcessMemory_小数型, 逻辑型, "kernel32.dll", "WriteProcessMemory", 公开, 内存写小数,有传址
    .参数 hProcess, 整数型, , 
    .参数 内存地址, 整数型, , 
    .参数 数据指针, 小数型, 传址, 
    .参数 数据长度, 整数型, , 
    .参数 实际写出长度, 整数型, , 

.DLL命令 ReadProcessMemory_小数型, 逻辑型, "kernel32.dll", "ReadProcessMemory", 公开, 内存读小数,有传址
    .参数 hProcess, 整数型, , 
    .参数 内存地址, 整数型, , 
    .参数 数据指针, 小数型, 传址, 
    .参数 数据长度, 整数型, , 
    .参数 实际写出长度, 整数型, , 

.DLL命令 ReadProcessMemory_整数型1, 整数型, "kernel32.dll", "ReadProcessMemory", 公开, 内存读整数，没传址
    .参数 hProcess, 整数型, , 
    .参数 内存地址, 整数型, , 
    .参数 数据指针, 整数型, , 
    .参数 数据长度, 整数型, , 
    .参数 实际写出长度, 整数型, , 

.DLL命令 ReadProcessMemory_整数型2, 整数型, "kernel32.dll", "ReadProcessMemory", 公开, 内存读整数,有传址
    .参数 hProcess, 整数型, , 
    .参数 内存地址, 整数型, , 
    .参数 数据指针, 整数型, 传址, 
    .参数 数据长度, 整数型, , 
    .参数 实际写出长度, 整数型, 传址, 

.DLL命令 CreateMutexA, 整数型, "kernel32.dll", "CreateMutexA", 公开, 
    .参数 互斥体结构, 整数型, , 
    .参数 拥有互斥体, 整数型, , 
    .参数 互斥体对象的名字, 文本型, , 

.DLL命令 WriteProcessMemory_字节集, 逻辑型, "kernel32.dll", "WriteProcessMemory", 公开, 
    .参数 hProcess, 整数型, , 
    .参数 内存地址, 整数型, , 
    .参数 数据指针, 字节集, , 
    .参数 数据长度, 整数型, , 
    .参数 实际写出长度, 整数型, , 

.DLL命令 ReadProcessMemory_字节集, 逻辑型, "Kernel32.dll", "ReadProcessMemory", 公开, 内存读字节集
    .参数 hProcess, 整数型, , 
    .参数 内存地址, 整数型, , 
    .参数 数据指针, 字节集, 传址, 
    .参数 数据长度, 整数型, , 
    .参数 读取的长度, 整数型, 传址, 

.DLL命令 Module32First, 整数型, "Kernel32.dll", "Module32First", 公开, 第一个模块，查找模块
    .参数 快照句柄, 整数型, , 
    .参数 模块信息, 精易_模块信息, , 

.DLL命令 Module32Next, 整数型, "kernel32.dll", "Module32Next", 公开, 下一个模块
    .参数 快照句柄, 整数型, , 
    .参数 模块信息, 精易_模块信息, , 

.DLL命令 GetModuleHandleA1, 整数型, "kernel32.dll", "GetModuleHandleA", 公开, 取模块句柄
    .参数 lpModuleName, 整数型, , 

.DLL命令 GetModuleHandleA, 整数型, "kernel32.dll", "GetModuleHandleA", 公开, 取模块句柄
    .参数 lpModuleName, 文本型, , 

.DLL命令 PathFindExtensionA, 文本型, "shlwapi.dll", "PathFindExtensionA", 公开, 文件_取扩展名, 无扩展名返回空
    .参数 文件路径, 文本型, , pszPath

.DLL命令 PathRenameExtensionA, 逻辑型, "shlwapi.dll", "PathRenameExtensionA", 公开, 文件_改扩展名
    .参数 文件名, 文本型, , pszPath
    .参数 扩展名, 文本型, , pszExt

.DLL命令 PathRemoveFileSpec, 整数型, "Shlwapi.dll", "PathRemoveFileSpecA", 公开, 删除结尾的文件名和反斜杠路径，如果有他们。
    .参数 pszPath, 文本型, , 

.DLL命令 PathMatchSpec, 逻辑型, "shlwapi.dll", "PathMatchSpecA", 公开, 搜索的字符串，使用DOS通配符匹配类型。
    .参数 pszFile, 文本型, , 
    .参数 pszSpec, 文本型, , 

.DLL命令 PathFindFileNameA, 文本型, "shlwapi.dll", "PathFindFileNameA", 公开, 文件_取文件名, 成功返回路径文本指针地址
    .参数 路径文本, 文本型, , 

.DLL命令 DeleteFileA, 逻辑型, "Kernel32.dll", "DeleteFileA", 公开, 删除指定文件
    .参数 文件名, 文本型, , lpFileName,欲删除文件的名字

.DLL命令 SetEndOfFile, 整数型, "Kernel32.dll", "SetEndOfFile", 公开, 
    .参数 hfile, 整数型, , 

.DLL命令 SetFilePointer, 整数型, "Kernel32.dll", "SetFilePointer", 公开, 
    .参数 hFile, 整数型, , 
    .参数 lDistanceToMove, 整数型, , 
    .参数 lpDistanceToMoveHigh, 整数型, , 
    .参数 dwMoveMethod, 整数型, , 

.DLL命令 CreateFileA, 整数型, "kernel32.dll", "CreateFileA", 公开, 文件取句柄 如执行成功，则返回文件句柄
    .参数 指向文件名的指针, 文本型, , 指向文件名的指针
    .参数 访问模式_写与读, 整数型, , 访问模式（写/读）
    .参数 共享模式, 整数型, , 共享模式，0=不共享，FILE_SHARE_READ 和/或 FILE_SHARE_WRITE 表示允许对文件进行共享访问
    .参数 指向安全属性的指针, 整数型, , 指向安全属性的指针
    .参数 如何创建, 整数型, , 如何创建 3=直接打开文件
    .参数 文件属性, 整数型, , 文件属性
    .参数 用于复制文件句柄, 整数型, , 用于复制文件句柄

.DLL命令 GetFileTime, 逻辑型, "kernel32.dll", "GetFileTime", 公开, _文件取时间
    .参数 hFile, 整数型, , 
    .参数 创建时间, 未知类型0x41012C6C, 传址, 创建时间
    .参数 访问时间, 未知类型0x41012C6C, 传址, 访问时间
    .参数 修改时间, 未知类型0x41012C6C, 传址, 修改时间

.DLL命令 LocalFileTimeToFileTime, 整数型, "kernel32.dll", "LocalFileTimeToFileTime", 公开, _文件时间转移为UTC文件时间 将本地文件时间转移为UTC文件时间
    .参数 lpLocalFileTime, 未知类型0x41012C6C, , 
    .参数 lpFileTime, 未知类型0x41012C6C, , 

.DLL命令 MapViewOfFile, 整数型, "kernel32.dll", "MapViewOfFile", 公开, _查看文件映射对象 将一个文件映射对象映射到当前应用程序的地址空间
    .参数 hFileMappingObject, 整数型, , 
    .参数 dwDesiredAccess, 整数型, , 
    .参数 dwFileOffsetHigh, 整数型, , 
    .参数 dwFileOffsetLow, 整数型, , 
    .参数 dwNumberOfBytesToMap, 整数型, , 

.DLL命令 InternetSetOptionA, 逻辑型, "wininet.dll", "InternetSetOptionA", 公开, _设置IE
    .参数 hInternet, 整数型, , 
    .参数 dwOption, 整数型, , 
    .参数 lpBuffer, 整数型, , 
    .参数 dwBufferLength, 整数型, , 

.DLL命令 InternetSetOptionA_传址, 逻辑型, "wininet.dll", "InternetSetOptionA", 公开, _设置IE
    .参数 hInternet, 整数型, , 
    .参数 dwOption, 整数型, , 
    .参数 lpBuffer, 整数型, 传址, 
    .参数 dwBufferLength, 整数型, , 

.DLL命令 DoFileDownload, 整数型, "shdocvw.dll", "DoFileDownload", 公开, _下载文件1
    .参数 网址, 字节集, 传址, 

.DLL命令 SetFileTime, 逻辑型, "kernel32.dll", "SetFileTime", 公开, _文件置时间 设置文件的创建、访问及上次修改时间  非零表示成功，零表示失败。会设置GetLastError
    .参数 hFile, 整数型, , 系统文件句柄
    .参数 lpCreationTime, 未知类型0x41012C6C, , FILETIME，文件的创建时间
    .参数 lpLastAccessTime, 未知类型0x41012C6C, , FILETIME，文件上一次访问的时间
    .参数 lpLastWriteTime, 未知类型0x41012C6C, , FILETIME，文件最近一次修改的时间;

.DLL命令 CopyFileA, 逻辑型, "kernel32.dll", "CopyFileA", 公开, 文件_复制
    .参数 源文件名, 文本型, , lpExistingFileName，被复制的文件名
    .参数 目标文件名, 文本型, , lpNewFileName，目标文件名
    .参数 是否覆盖, 整数型, , bFailIfExists，非0不覆盖，0覆盖

.DLL命令 ShellExecuteA, 整数型, "shell32.dll", "ShellExecuteA", 公开, 文件_执行
    .参数 hwnd, 整数型, , 指定一个窗口的句柄，有些时候，Windows程序有必要在创建自己的主窗口前显示一个消息框。
    .参数 lpOperation, 文本型, , 指定字串“Open”来打开lpFlie文档；或指定“Print”来打印它。也可设为vbNullString，表示默认为“Open”
    .参数 lpFile, 文本型, , 想用关联的程序打印或打开的一个程序名或文件名
    .参数 lpParameters, 文本型, , 如lpFile是一个可执行文件，则这个字串包含了传递给执行程序的参数。如lpFile引用的是一个文档文件，或者不需要使用参数，则设为vbNullString
    .参数 lpDirectory, 文本型, , 想使用的默认路径完整路径
    .参数 nShowCmd, 整数型, , 定义了如何显示启动程序的常数值。参考ShowWindow函数的nCmdShow参数

.DLL命令 MoveFileExA, 整数型, "kernel32.dll", "MoveFileExA", 公开, 
    .参数 文件名, 文本型, , 
    .参数 新文件名, 文本型, , 
    .参数 常数, 整数型, , 

.DLL命令 MoveFileA, 逻辑型, "kernel32.dll", "MoveFileA", 公开, 文件_移动
    .参数 欲移动的文件名, 文本型, , 如:C:\001.txt
    .参数 目标文件名, 文本型, , 如:D:\001.txt , 表示把C:\001.txt移动到D:\001.txt

.DLL命令 PostMessageA, 空白型, "user32.dll", "PostMessageA", 公开, 投递消息
    .参数 hwnd, 整数型, , 
    .参数 消息号, 整数型, , 
    .参数 消息参数1, 整数型, , 
    .参数 消息参数2, 整数型, , 

.DLL命令 CreateSolidBrush, 整数型, "gdi32.dll", "CreateSolidBrush", 公开, 用纯色创建一个刷子　如执行成功，返回新刷子的一个句柄；否则返回零
    .参数 crColor, 整数型, , 数字的RGB彩色;  

.DLL命令 GdiFlush, 整数型, "gdi32.dll", "GdiFlush", 公开, 处理绘图操作_gdi32.dll 执行任何未决的绘图操作,如所有未决的绘图操作都成功完成，就返回TRUE（非零）。如任何一个操作失败，就返回零值

.DLL命令 FillRect, 整数型, "user32.dll", "FillRect", 公开, 该函数用指定的画刷填充矩形，此函数包括矩形的左上边界，但不包括矩形的右下边界。如果函数调用成功，返回值非零；如果函数调用失败，返回值是0。 
    .参数 hdc, 整数型, , 设备环境句柄。
    .参数 lpRect, 精易_矩形, 传址, 指向含有将填充矩形的逻辑坐标的RECT结构的指针。 
    .参数 hBrush, 整数型, , 用来填充矩形的画刷的句柄。用CreateSolidBrush创建返回的句柄

.DLL命令 DeleteObject, 整数型, "gdi32.dll", "DeleteObject", 公开, 删除对象 用这个函数删除GDI对象，比如画笔、刷子、字体、位图、区域以及调色板等等。对象使用的所有系统资源都会被释放，不要删除一个已选入设备场景的画笔、刷子或位图。如删除以位图为基础的阴影（图案）刷子，位图不会由这个函数删除——只有刷子被删掉
    .参数 对象句柄, 整数型, , 一个GDI对象的句柄

.DLL命令 InternetOpenA, 整数型, "wininet.dll", "InternetOpenA", 公开, Internet激活
    .参数 句柄名称, 文本型, 传址, 
    .参数 连接类型, 整数型, , 1直接连接;3代理连接
    .参数 代理地址, 文本型, 传址, 
    .参数 代理掩码, 文本型, 传址, 
    .参数 dwFlags, 整数型, , 0

.DLL命令 InternetConnectA, 整数型, "wininet.dll", "InternetConnectA", 公开, Internet建立连接
    .参数 Internet句柄, 整数型, , 
    .参数 域名, 文本型, 传址, 
    .参数 服务器端口, 整数型, , 80HTTP;21FTP;
    .参数 用户名, 文本型, 传址, 空
    .参数 用户口令, 文本型, 传址, 空
    .参数 服务类型, 整数型, , 1FTP;3HTTP
    .参数 dwFlags, 整数型, , 0http;134217728被动FTP模式
    .参数 dwContext, 整数型, , 0

.DLL命令 InternetSetOption, 逻辑型, "Wininet.dll", "InternetSetOptionA", 公开, 设置选项
    .参数 hInternet, 整数型, , 句柄
    .参数 dwOption, 整数型, , 选项值
    .参数 lpBuffer, 整数型, 传址, 缓冲区
    .参数 dwBufferLength, 整数型, , 缓冲区长度

.DLL命令 InternetCloseHandle, 逻辑型, "wininet.dll", "InternetCloseHandle", 公开, Internet关闭句柄
    .参数 句柄, 整数型, , 

.DLL命令 HttpQueryInfoA, 逻辑型, "wininet.dll", "HttpQueryInfoA", 公开, HTTP查询信息
    .参数 Internet请求句柄, 整数型, , 
    .参数 待查信息, 整数型, , 22返回所有信息;43SET_COOKIE;+2147483648返回文本
    .参数 返回容器, 文本型, 传址, 
    .参数 返回容器长度, 整数型, 传址, 
    .参数 lpdwIndex, 整数型, , 

.DLL命令 InternetReadFile, 逻辑型, "wininet.dll", "InternetReadFile", 公开, Internet读文件
    .参数 HTTP请求句柄, 整数型, , 
    .参数 sBuffer, 字节集, 传址, 
    .参数 lNumBytesToRead, 整数型, , 
    .参数 lNumberOfBytesRead, 整数型, 传址, 

.DLL命令 HttpOpenRequestA, 整数型, "wininet.dll", "HttpOpenRequestA", 公开, Http创建请求
    .参数 Internet连接句柄, 整数型, , 由Internet建立连接返回
    .参数 访问方式, 文本型, 传址, "GET" or "POST"为空默认GET
    .参数 页面路径, 文本型, 传址, 简短路径,不带域名
    .参数 协议版本, 文本型, 传址, 为空默认HTTP/1.1
    .参数 引用页, 文本型, 传址, 可为空
    .参数 识别类型, 文本型, 传址, 可为空
    .参数 dwFlags, 整数型, , 2147483648更新下载
    .参数 dwContext, 整数型, , 0

.DLL命令 HttpSendRequestA, 逻辑型, "wininet.dll", "HttpSendRequestA", 公开, Http发送请求
    .参数 HTTP请求句柄, 整数型, , 
    .参数 附加协议头, 文本型, , 
    .参数 附加协议头长度, 整数型, , 
    .参数 提交信息, 整数型, , 
    .参数 提交信息长度, 整数型, , 

.DLL命令 InflateRect, 整数型, "user32.dll", "InflateRect", 公开, 这个函数用于增大或减小一个矩形的大小。x加在右侧区域，并从左侧区域减去；如x为正，则能增大矩形的宽度；如x为负，则能减小它。y对顶部与底部区域产生的影响是是类似的　非零表示成功，零表示失败。会设置GetLastError
    .参数 lpRect, 精易_矩形, , RECT，欲修改的矩形
    .参数 x, 整数型, , 用这个数字修改宽度
    .参数 y, 整数型, , 用这个数字修改高度;  

.DLL命令 ChangeWindowMessageFilter, 逻辑型, "user32.dll", "ChangeWindowMessageFilter", 公开, 
    .参数 message, 整数型, , 
    .参数 dwflag, 整数型, , 

.DLL命令 SendMessageW, 整数型, "user32.dll", "SendMessageW", 公开, 
    .参数 hwnd, 整数型, , 
    .参数 wmsg, 整数型, , 
    .参数 wp, 整数型, , 
    .参数 lp, 整数型, , 

.DLL命令 LocalAlloc, 整数型, "kernel32.dll", "LocalAlloc", 公开, _从局部堆分配内存(申请内存)
    .参数 uFlags, 整数型, , 
    .参数 uBytes, 整数型, , 

.DLL命令 LocalFree, 整数型, "kernel32.dll", "LocalFree", 公开, _释放本地内存信息
    .参数 hMem, 整数型, , 

.DLL命令 IsWindowEnabled, 整数型, "user32.dll", "IsWindowEnabled", 公开, 判断窗口是否处于活动状态（在vb里使用：针对vb窗体和控件，请用enabled属性）  非零表示成功，零表示失败
    .参数 hWnd, 整数型, , 

.DLL命令 GetClassLongA, 整数型, "user32.dll", "GetClassLongA", 公开, 
    .参数 hwnd, 整数型, , 
    .参数 m, 整数型, , 

.DLL命令 SendMessageA, 整数型, "user32.dll", "SendMessageA", 公开, 
    .参数 hWnd, 整数型, , 
    .参数 Msg, 整数型, , 消息的标识符
    .参数 wParam, 整数型, , 具体取决于消息
    .参数 lParam, 整数型, , 具体取决于消息

.DLL命令 GetSystemMenu, 整数型, "user32.dll", "GetSystemMenu", 公开, 取系统菜单句柄
    .参数 hwnd, 整数型, , 
    .参数 bRevert, 整数型, , 

.DLL命令 CreateFileMappingA, 整数型, "kernel32.dll", "CreateFileMappingA", 公开, 创建一个新的文件映射对象　新建文件映射对象的句柄；零意味着出错。会设置GetLastError。即使函数成功，但倘若返回的句柄属于一个现成的文件映射对象，那么GetLastError也会设置成ERROR_ALREADY_EXISTS。在这种情况下，文件映射的长度就是现有对象的长度，而不是这个函数指定的尺寸
    .参数 文件映射句柄, 整数型, , 指定欲在其中创建映射的一个文件句柄。&HFFFFFFFF&表示在内存中创建一个文件映射
    .参数 安全对象, 整数型, , SECURITY_ATTRIBUTES，指定一个安全对象，在创建文件映射时使用。如果为NULL（用ByVal As Long传递零），表示使用默认安全对象
    .参数 打开映射方式, 整数型, , 下述常数之一：;PAGE_READONLY：以只读方式打开映射;PAGE_READWRITE：以可读、可写方式打开映射;PAGE_WRITECOPY：为写操作留下备份可组合使用下述一个或多个常数;SEC_COMMIT：为文件映射一个小节中的所有页分配内存;SEC_IMAGE：文件是个可执行文件;SEC_RESERVE：为没有分配实际内存的一个小节保留虚拟内存空间
    .参数 文件映射最大长度, 整数型, , 文件映射的最大长度（高32位）
    .参数 文件映射的最小长度, 整数型, , 文件映射的最小长度（低32位）。如这个参数和dwMaximumSizeHigh都是零，就用磁盘文件的实际长度
    .参数 映射对象名, 文本型, , 指定文件映射对象的名字。如存在这个名字的一个映射，函数就会打开它。用vbNull创建一个无名的文件映射;

.DLL命令 SetDIBitsToDevice, 整数型, "gdi32.dll", "SetDIBitsToDevice", 公开, 置位图到设备场景_GDI32.DLL将一幅与设备无关位图的全部或部分数据直接复制到一个设备。这个函数在设备中定义了一个目标矩形，以便接收位图数据。它也在DIB中定义了一个源矩形，以便从中提取数据  执行成功则返回扫描线的数量，零表示失败。会设置GetLastError
    .参数 设备场景句柄, 整数型, , hdc，一个设备场景的句柄。该场景用于接收位图数据
    .参数 目标矩形横坐标, 整数型, , x，用逻辑坐标表示的目标矩形的起点
    .参数 目标矩形纵坐标, 整数型, , y，用逻辑坐标表示的目标矩形的起点
    .参数 目标矩形宽度, 整数型, , dx，用目标矩形的设备单位表示的宽度及高度
    .参数 目标矩形高度, 整数型, , dy，用目标矩形的设备单位表示的宽度及高度
    .参数 源矩形横坐标, 整数型, , SrcX，用设备坐标表示的源矩形在DIB中的起点
    .参数 源矩形纵坐标, 整数型, , SrcY，用设备坐标表示的源矩形在DIB中的起点
    .参数 扫描线初始编号, 整数型, , Scan，Bits数组中第一条扫描线的编号。如BitsInfo之BITMAPINFOHEADER部分的biHeight字段是正数，那么这条扫描线就会从位图的底部开始计算；如果是负数，就从顶部开始计算
    .参数 扫描线数量, 整数型, , NumScans，欲复制的扫描线数量
    .参数 缓冲区指针, 字节型, 传址, Bits，指向一个缓冲区的指针。这个缓冲区包含了以DIB格式描述的位图数据；这种格式是由BitsInfo指定的
    .参数 位图结构, 未知类型0x41012C69, , BitsInfo，对Bits DIB的格式和颜色进行描述的一个结构
    .参数 常量标志, 整数型, , wUsage，常数

.DLL命令 SHGetPathFromIDListA, 整数型, "shell32.dll", "SHGetPathFromIDListA", 公开, _从列表id取路径
    .参数 pIdl, 整数型, , 
    .参数 pszPath, 文本型, 传址, 

.DLL命令 SetBkMode, 整数型, "gdi32.dll", "SetBkMode", 公开, gdi32.dll指定阴影刷子、虚线画笔以及字符中的空隙的填充方式　前一个背景模式的值
    .参数 hdc, 整数型, , 设备场景的句柄
    .参数 nBkMode, 整数型, , 下述常数之一：;OPAQUE：用当前的背景色填充虚线画笔、阴影刷子以及字符的空隙;TRANSPARENT：透明处理，即不作上述填充;  

.DLL命令 TextOutA, 整数型, "gdi32.dll", "TextOutA", 公开, _文本绘图gdi32.dll文本绘图函数。也请参考SetTextAlign　非零表示成功，零表示失败。会设置GetLastError
    .参数 设备场景, 整数型, , 设备场景的句柄
    .参数 横, 整数型, , 绘图的起点，采用逻辑坐标
    .参数 纵, 整数型, , 同上
    .参数 内容, 文本型, , 欲描绘的字串
    .参数 内容数量, 整数型, , 字串中要描绘的字符数量;  

.DLL命令 SetTextColor, 整数型, "gdi32.dll", "SetTextColor", 公开, gdi32.dll设置当前文本颜色。这种颜色也称为“前景色”　文本色的前一个RGB颜色设定。CLR_INVALID表示失败。会设置GetLastError
    .参数 设备场景, 整数型, , 设备场景的句柄
    .参数 颜色, 整数型, , 新的文本色在VB里使用如改变了这个设置，注意恢复VB窗体或控件原始的文本颜色;

.DLL命令 SelectObject, 整数型, "gdi32.dll", "SelectObject", 公开, 选入设备场景
    .参数 hdc, 整数型, , 
    .参数 hgdiobj, 整数型, , 

.DLL命令 CreateCompatibleBitmap, 整数型, "gdi32.dll", "CreateCompatibleBitmap", 公开, 创建设备位图
    .参数 设备场景句柄, 整数型, , 
    .参数 位图宽度, 整数型, , 
    .参数 位图高度, 整数型, , 

.DLL命令 CreateFontA, 整数型, "gdi32.dll", "CreateFontA", 公开, g创建字体_ di32.dll用指定属性创建逻辑字体_,执行成功则返回逻辑字体的句柄零表示失败——返回值：如果函数调用成功，返回值是一种逻辑字体句柄；如果函数调用失败，返回值为NULL。备注：当一种字体不再使用时，可用DeleteObject来删除。为保护那些提供字体给Windows和Windows NT的卖主的版权，基于Win32的应用程序总是列出所选择字体的准确名字。由于不同的系统会使用不同的字体，不要认为所选择字体就是要求的字体。例如，如果要求名叫Palatino的字体，但系统没提供那样一种字体，则字体映射器将会以一种不同名但有相似属性的字体取而代之。系统总是将用户选择的字体名报告出来。
    .参数 字体高度, 整数型, , Height字体高度指定字体的字符单元或字符的逻辑单位高度，字符的高度值（也被称为em高度）是指字符单元高度值减去内部标头值。字体映射器以如下方式解释nHeight指定的值，各值含义为：
    .参数 字体宽度, 整数型, , Width指定所要求字体的字符的逻辑单位的平均宽度。如果此值为0，字体映射器选择一个closest match值，closest match值是由比较当前设备的特征系数与可使用字体的数字化特征系数之差的绝对值而确定的
    .参数 旋转, 整数型, , Escapement指定移位向量和设备X轴之间的一个角度，以十分之一度为单位。移位向量平行于正文行的基线。Windows NT：当图形设备设置为GM_ADVANCED时，可以不依赖字符串的字符的定位角而指定字符串的移位角.当图形模式被设置为GM_COMPATIBLE时，nEscapement同时指定移位角和定位角，可以设置nEscapement和nOrientation为相同的值。Windows 95：nEscapement同时指定移位角和定位角，可设置nEscapement和nOrientation为相同的值。
    .参数 Orientation, 整数型, , 指定每个字符的基线和设备X轴之间的角度
    .参数 加粗, 整数型, , Weight在0到1000之间指定字体的权值，如400表示标准体，700表示黑（粗）体，如果此值为0，则使用缺省的权值。    为方便定义，可使用如下值：
    .参数 倾斜, 逻辑型, , Italic如果设置为TRUE则指定斜体
    .参数 下划线, 逻辑型, , Underline如果设置为TRUE，则指定加下划线的字全
    .参数 删除线, 逻辑型, , StrikeOut如果设置为TRUE，则strikeout指定字体。
    .参数 内码, 整数型, , CharSetfdwCharSet：指定字符集，下列值是预定义的：
    .参数 OutputPrecision, 整数型, , fdwOutputPrecision：指定输出精度，输出精度义输出与要求的字体高度、宽度、字符定位、移位、字符间距和字符类型的匹配程序，它可取下列值之一：
    .参数 CP, 整数型, , ClipPrecision指定裁剪精度，裁剪精度定义如何裁剪部分超出裁剪区的字符，它可取一个或多个下列值：
    .参数 输出质量, 整数型, , fdwQuality指向输出质量，输出质量定义GDI如何仔细地将逻辑字体属性与实际物理字体属性相匹配。它可取下列值之一：
    .参数 PAF, 整数型, , PitchAndFamily指定字体间距和字体族，低端二位指定字体的字符间距，它可取下列值之一：
    .参数 新字体名, 文本型, , FaceName指向指定字体的字样名的、以\0结束的字符串指针，字符串的长度不能超过32个字符（包括字符\0），函数EnumFontFamilies可用来列举所有当前可用字体的字样名。如果lpszFace为NULL或指向一个空串，GDI使用能匹配其他属性的第一种字体。

.DLL命令 IsDebuggerPresent, 逻辑型, "kernel32.dll", "IsDebuggerPresent", 公开, 程序是否被调试

.DLL命令 CreateCompatibleDC, 整数型, "gdi32.dll", "CreateCompatibleDC", 公开, 创建内存场景
    .参数 hdc, 整数型, , 

.DLL命令 CreateEvent, 整数型, "Kernel32.dll", "CreateEventA", 公开, 创建事件同步对象
    .参数 lpEventAttributes, 整数型, , 
    .参数 bManualReset, 逻辑型, , 
    .参数 bInitialState, 逻辑型, , 
    .参数 lpName, 文本型, , 

.DLL命令 LookupPrivilegeValueA, 逻辑型, "advapi32.dll", "LookupPrivilegeValueA", 公开, _恢复权限
    .参数 lpSystemName, 文本型, , 
    .参数 lpName, 文本型, , 
    .参数 lpLuid, 未知类型0x41012C6D, 传址, 

.DLL命令 OpenEventA, 整数型, "kernel32.dll", "OpenEventA", 公开, 打开事件同步对象
    .参数 dwDesiredAccess, 整数型, , 
    .参数 bInheritHandle, 逻辑型, , 
    .参数 lpName, 文本型, , 

.DLL命令 lstrcpynA_字节集, 整数型, "kernel32.dll", "lstrcpynA", 公开, 
    .参数 lpString1, 字节集, 传址, 
    .参数 lpString2, 字节集, 传址, 
    .参数 iMaxLength, 整数型, , 

.DLL命令 lstrcpynA_整数数组, 整数型, "kernel32.dll", "lstrcpynA", 公开, ,
    .参数 数据1, 整数型, 数组, lpString1
    .参数 数据2, 整数型, 数组, lpString2
    .参数 数据长度, 整数型, , iMaxLength

.DLL命令 lstrcpynA_字节型, 文本型, "kernel32.dll", "lstrcpynA", 公开, 
    .参数 lpString1, 字节型, 数组, 
    .参数 lpString2, 字节型, , 
    .参数 iMaxLength, 整数型, , 

.DLL命令 lstrcpynA_指针, 子程序指针, "kernel32.dll", "lstrcpynA", 公开, 
    .参数 参数1, 整数型, , 
    .参数 参数2, 整数型, , 
    .参数 保留, 整数型, , 

.DLL命令 lstrcpynA_文本, 整数型, "kernel32.dll", "lstrcpynA", 公开, _复制字符串
    .参数 lpString1, 文本型, 传址, 
    .参数 lpString2, 文本型, 传址, 
    .参数 iMaxLength, 整数型, , 

.DLL命令 SwapMouseButton, 逻辑型, "user32.dll", "SwapMouseButton", 公开, 鼠标左右键交换
    .参数 鼠标按钮方式, 逻辑型, , bSwap，Long，倘若为TRUE（非零），则互换两个鼠标按钮的功能。FALSE则恢复正常状态

.DLL命令 GetProcAddress1, 整数型, "kernel32.dll", "GetProcAddress", 公开, 
    .参数 hModule, 整数型, , 
    .参数 lpProcName, 文本型, , 

.DLL命令 ZwResumeProcess, 空白型, "NTDLL.DLL", "ZwResumeProcess", 公开, 进程恢复
    .参数 进程句柄, 整数型, , 

.DLL命令 ZwSuspendProcess, 空白型, "NTDLL.DLL", "ZwSuspendProcess", 公开, 进程暂停
    .参数 进程句柄, 整数型, , 

.DLL命令 ResumeThread, 整数型, "kernel32.dll", "ResumeThread", 公开, 线程_恢复   恢复执行用SuspendThread挂起的一个线程,Long，调用这个函数前的挂起计数。&HFFFFFFFF表示出错。会设置GetLastError
    .参数 hThread, 整数型, , 

.DLL命令 SuspendThread, 整数型, "kernel32.dll", "SuspendThread", 公开, 线程_挂起  将指定线程的执行挂起，调用这个函数前的挂起计数。&HFFFFFFFF表示出错。会设置GetLastError
    .参数 hThread, 整数型, , 

.DLL命令 WaitForSingleObject, 整数型, "kernel32.dll", "WaitForSingleObject", 公开, 线程等待
    .参数 hHandle, 整数型, , 线程句柄
    .参数 dwMilliseconds, 整数型, , 值为:4294967295

.DLL命令 InitializeCriticalSection, 空白型, "kernel32.dll", "InitializeCriticalSection", 公开, 创建许可证
    .参数 lpCriticalSection, 线程许可证, 传址, 

.DLL命令 DeleteCriticalSection, 空白型, "kernel32.dll", "DeleteCriticalSection", 公开, _删除许可证
    .参数 lpCriticalSection, 线程许可证, 传址, 

.DLL命令 EnterCriticalSection, 空白型, "kernel32.dll", "EnterCriticalSection", 公开, _进入许可区
    .参数 lpCriticalSection, 线程许可证, 传址, 

.DLL命令 LeaveCriticalSection, 空白型, "kernel32.dll", "LeaveCriticalSection", 公开, 退出许可区
    .参数 lpCriticalSection, 线程许可证, 传址, 

.DLL命令 DuplicateHandle, 整数型, "kernel32.dll", "DuplicateHandle", 公开, 复制对象句柄
    .参数 源进程句柄, 整数型, , hSourceProcessHandle,参见相关帮助
    .参数 现句柄, 整数型, , hSourceHandle,指定对象的现有句柄
    .参数 新进程句柄, 整数型, , hTargetProcessHandle,参见相关帮助
    .参数 转载句柄变量, 整数型, 传址, lpTargetHandle,指定用于装载新句柄的长整型变量
    .参数 新句柄安全访问级别, 整数型, , dwDesiredAccess,新句柄要求的安全访问级别
    .参数 继承句柄, 整数型, , bInheritHandle Long，参见相关帮助
    .参数 复选项, 整数型, , dwOptions

.DLL命令 CloseHandle, 逻辑型, "kernel32.dll", "CloseHandle", 公开, 关闭一个内核对象。其中包括文件、文件映射、进程、线程、安全和同步对象等。涉及文件处理时，这个函数通常与vb的close命令相似。应尽可能的使用close，因为它支持vb的差错控制。注意这个函数使用的文件句柄与vb的文件编号是完全不同的  非零表示成功，零表示失败。会设置GetLastError
    .参数 对象句柄, 整数型, , 欲关闭的一个对象的句柄;

.DLL命令 lstrlen, 整数型, "kernel32.dll", "lstrlenW", 公开, 取字节长度　
    .参数 lpString, 整数型, , 

.DLL命令 DeviceIoControl1, 逻辑型, "kernel32.dll", "DeviceIoControl", 公开, 设备操作4
    .参数 hDevice, 整数型, , 
    .参数 dwIoControlCode, 整数型, , 
    .参数 lpInBuffer, 整数型, , 
    .参数 nInBufferSize, 整数型, , 
    .参数 lpOutBuffer, 整数型, , 
    .参数 nOutBufferSize, 整数型, , 
    .参数 lpBytesReturned, 整数型, 传址, 
    .参数 lpOverlapped, 整数型, , 

.DLL命令 Process32Next, 整数型, "kernel32.dll", "Process32Next", 公开, 取下一个进程
    .参数 h, 整数型, , 
    .参数 p, 精易_进程信息列表, , 

.DLL命令 GetModuleFileNameExA, 整数型, "Psapi.dll", "GetModuleFileNameExA", 公开, _进程取全路径名
    .参数 hProcess, 整数型, , 
    .参数 hModule, 整数型, , 0
    .参数 lpFilename, 文本型, , 1000
    .参数 nSize, 整数型, , 1000

.DLL命令 Process32First, 整数型, "kernel32.dll", "Process32First", 公开, 取第一个进程
    .参数 hSnapshot, 整数型, , 
    .参数 lppe, 精易_进程信息列表, , 

.DLL命令 OpenProcess, 整数型, "kernel32.dll", "OpenProcess", 公开, 打开进程
    .参数 进程对象, 整数型, , 
    .参数 继承句柄, 整数型, , 
    .参数 进程标识符, 整数型, , 

.DLL命令 AdjustTokenPrivileges, 逻辑型, "advapi32.dll", "AdjustTokenPrivileges", 公开, 使能/取消令牌特权 _进程置权限
    .参数 令牌句柄, 整数型, , 
    .参数 DisableAllPrivileges, 逻辑型, , 
    .参数 NewState, 未知类型0x41012C6E, 传址, 
    .参数 BufferLength, 整数型, , 
    .参数 PreviousState, 整数型, , 
    .参数 ReturnLength, 整数型, , 

.DLL命令 TerminateProcess, 整数型, "kernel32.dll", "TerminateProcess", 公开, _进程终止
    .参数 hProcess, 整数型, , PID
    .参数 uExitCode, 整数型, , 

.DLL命令 GetCurrentProcessId, 整数型, "kernel32.dll", "GetCurrentProcessId", 公开, 取自进程ID

.DLL命令 CreateToolhelp32Snapshot, 整数型, "kernel32.dll", "CreateToolhelp32Snapshot", 公开, 创建进程快照
    .参数 falg, 整数型, , 
    .参数 id, 整数型, , 

.DLL命令 GetWindowThreadProcessId, 整数型, "user32.dll", "GetWindowThreadProcessId", 公开, 线程_取ID
    .参数 hwnd, 整数型, , 指定窗口句柄
    .参数 进程标识符, 整数型, 传址, 用于装载进程ID的变量

.DLL命令 LBItemFromPt, 整数型, "comctl32.dll", "LBItemFromPt", 公开, 列表框_鼠标坐标取项目索引
    .参数 hwnd, 整数型, , hwnd
    .参数 横向位置, 整数型, , ptx
    .参数 纵向位置, 整数型, , pty
    .参数 自动滚动, 逻辑型, , bAutoScroll

.DLL命令 ShowWindow, 逻辑型, "user32.dll", "ShowWindow", 公开, 窗口_置状态
    .参数 hwnd, 整数型, , 窗口句柄，要向这个窗口应用由命令
    .参数 nCmdShow, 整数型, , 为窗口指定的一个命令。请用下述任何一个常数:0 隐藏取消激活  1 还原激活 2 最小化激活 3 最大化激活 4 还原 6 最小化取消激活 7 最小化 9 还原激活

.DLL命令 SetWindowPos, 整数型, "user32.dll", "SetWindowPos", 公开, _窗口置最前
    .参数 hwnd, 整数型, , 欲定位的窗口
    .参数 hWndInsertAfter, 整数型, , 
    .参数 x, 整数型, , 窗口新的x坐标。如hwnd是一个子窗口，则x用父窗口的客户区坐标表示
    .参数 y, 整数型, , 窗口新的y坐标。如hwnd是一个子窗口，则y用父窗口的客户区坐标表示
    .参数 cx, 整数型, , 指定新的窗口宽度
    .参数 cy, 整数型, , 指定新的窗口高度
    .参数 wFlags, 整数型, , 

.DLL命令 CloseWindow, 整数型, "user32.dll", "CloseWindow", 公开, 窗口_最小化, 非0表示成功，0表示失败
    .参数 hwnd, 整数型, , hwnd，欲最小化窗口的窗口句柄

.DLL命令 ShowWindowAsync, 空白型, "user32.dll", "ShowWindowAsync", 公开, 窗口_显示隐藏, ShowWindowAsync
    .参数 hwnd, 整数型, , hwnd，欲接收ShowWindow命令的窗口
    .参数 可视性类型, 逻辑型, , nCmdShow，与ShowWindow相同

.DLL命令 BringWindowToTop, 逻辑型, "user32.dll", "BringWindowToTop", 公开, 窗口置顶
    .参数 hwnd, 整数型, , hwnd,欲带至顶部的那个窗口的句柄

.DLL命令 GetForegroundWindow, 整数型, "user32.dll", "GetForegroundWindow", 公开, ,窗口_取顶端窗口句柄

.DLL命令 ExtractIconExA, 整数型, "shell32.dll", "ExtractIconExA", 公开, 提取图标扩展
    .参数 文件名, 文本型, , lpszFile
    .参数 图标索引, 整数型, , nIconIndex
    .参数 大图标句柄, 整数型, 传址, phiconLarge
    .参数 小图标句柄, 整数型, , phiconSmall
    .参数 图标数量, 整数型, , nIcons

.DLL命令 MoveWindow, 逻辑型, "user32.dll", "MoveWindow", 公开, 窗口_置位置和大小
    .参数 hwnd, 整数型, , 
    .参数 左侧位置, 整数型, , 
    .参数 顶部位置, 整数型, , 
    .参数 新宽度, 整数型, , 
    .参数 新高度, 整数型, , 
    .参数 是否重画, 逻辑型, , 

.DLL命令 GetWindowRect, 逻辑型, "user32.dll", "GetWindowRect", 公开,    获得整个窗口的范围矩形，窗口的边框、标题栏、滚动条及菜单等都在这个矩形内
    .参数 句柄, 整数型, , Long，想获得范围矩形的那个窗口的句柄
    .参数 大小, 精易_矩形, 传址, RECT，屏幕坐标中随同窗口装载的矩形(左边,顶边,右边,底边)

.DLL命令 IsZoomed, 逻辑型, "user32.dll", "IsZoomed", 公开, 窗口_是否最大化 判断窗口是否已最大化 非零表示成功，零表示失败
    .参数 hwnd, 整数型, , 要测试的那个窗口的句柄

.DLL命令 IsIconic, 逻辑型, "user32.dll", "IsIconic", 公开, 窗口_是否最小化 判断窗口是否已最小化 非零表示成功，零表示失败
    .参数 hwnd, 整数型, , 要测试的那个窗口的句柄

.DLL命令 IsWindowVisible, 逻辑型, "user32.dll", "IsWindowVisible", 公开, 窗口_是否可见  判断窗口是否可见  返回真为可见，否则为不可见
    .参数 hwnd, 整数型, , 要测试的那个窗口的句柄

.DLL命令 StrTrimA, 整数型, "shlwapi.dll", "StrTrimA", 公开, _文本修剪
    .参数 psz, 文本型, , 
    .参数 pszTrimChars, 文本型, , 

.DLL命令 FlashWindow, 逻辑型, "user32.dll", "FlashWindow", 公开, 窗口_闪动
    .参数 hwnd, 整数型, , 
    .参数 bInvert, 逻辑型, , 是否闪动窗口

.DLL命令 lstrlenA, 整数型, "kernel32.dll", "lstrlenA", 公开, 
    .参数 lpString, 整数型, , 

.DLL命令 WideCharToMultiByte, 整数型, "kernel32.dll", "WideCharToMultiByte", 公开, 
    .参数 CodePage, 整数型, , 
    .参数 dwFlags, 整数型, , 
    .参数 lpWideCharStr, 整数型, , 
    .参数 cchWideChar, 整数型, , 
    .参数 lpMultiByteStr, 整数型, , 
    .参数 cbMultiByte, 整数型, , 
    .参数 lpDefaultChar, 整数型, , 
    .参数 lpUsedDefaultChar, 整数型, , 

.DLL命令 GetDC, 整数型, "user32.dll", "GetDC", 公开, 取设备场景
    .参数 hwnd, 整数型, , 

.DLL命令 ReleaseDC, 整数型, "user32.dll", "ReleaseDC", 公开, 释放设备场景
    .参数 hwnd, 整数型, , 
    .参数 设备句柄, 整数型, , 

.DLL命令 GetPixel, 整数型, "gdi32.dll", "GetPixel", 公开, 鼠标取坐标颜色
    .参数 设备句柄, 整数型, , 
    .参数 横坐标, 整数型, , 
    .参数 纵坐标, 整数型, , 

.DLL命令 GetDIBits2, 整数型, "gdi32.dll", "GetDIBits", 公开, 
    .参数 aHDC, 整数型, , 
    .参数 hBitmap, 整数型, , 
    .参数 nStartScan, 整数型, , 
    .参数 nNumScans, 整数型, , 
    .参数 lpBits, 字节型, 传址, 
    .参数 lpBI, 字节型, 传址, 
    .参数 wUsage, 整数型, , 

.DLL命令 GetDIBits1, 整数型, "gdi32.dll", "GetDIBits", 公开, _位图复制1
    .参数 HDC, 整数型, , 
    .参数 hBitmap, 整数型, , 
    .参数 nStartScan, 整数型, , 
    .参数 nNumScans, 整数型, , 
    .参数 lpBits, 整数型, , 
    .参数 lpBI, 未知类型0x41012C67, , 
    .参数 wUsage, 整数型, , 

.DLL命令 GetDIBits, 整数型, "gdi32.dll", "GetDIBits", 公开, _位图复制 将来自一幅位图的二进制位复制到一幅与设备无关的位图里
    .参数 HDC, 整数型, , 
    .参数 hBitmap, 整数型, , 
    .参数 nStartScan, 整数型, , 
    .参数 nNumScans, 整数型, , 
    .参数 lpBits, 字节集, , 
    .参数 lpBI, 未知类型0x41012C67, , 
    .参数 wUsage, 整数型, , 

.DLL命令 BitBlt, 逻辑型, "gdi32.dll", "BitBlt", 公开, 复制场景位图
    .参数 目标设备场景, 整数型, , 
    .参数 目标横坐标, 整数型, , 
    .参数 目标纵坐标, 整数型, , 
    .参数 传输图像宽度, 整数型, , 
    .参数 传输图像高度, 整数型, , 
    .参数 源设备场景, 整数型, , 
    .参数 源横坐标, 整数型, , 
    .参数 源纵坐标, 整数型, , 
    .参数 光栅运算方式, 整数型, , 

.DLL命令 VirtualAlloc, 整数型, "Kernel32.dll", "VirtualAlloc", 公开, 
    .参数 lpAddress, 整数型, , 
    .参数 dwSize, 整数型, , 
    .参数 flAllocationType, 整数型, , 
    .参数 flProtect, 整数型, , 

.DLL命令 MultiByteToWideChar, 整数型, "Kernel32.dll", "MultiByteToWideChar", 公开, 该函数映射一个字符串到一个宽字符（unicode）的字符
    .参数 CodePage, 整数型, , 
    .参数 dwFlags, 整数型, , 
    .参数 lpMultiByteStr, 整数型, , 
    .参数 cchMultiByte, 整数型, , 
    .参数 lpWideCharStr, 整数型, , 
    .参数 cchWideChar, 整数型, , 

.DLL命令 CharUpperA, 文本型, "user32.dll", "CharUpperA", 公开, 把字符串中的字母都转换成大写的
    .参数 str, 文本型, , 

.DLL命令 CharLowerA, 文本型, "user32.dll", "CharLowerA", 公开, 把字符串中的字母都转换成小写的
    .参数 str, 文本型, , 

.DLL命令 GetClientRect, 逻辑型, "user32.dll", "GetClientRect", 公开, ,窗口_取控件大小
    .参数 hwnd, 整数型, , 
    .参数 矩形区域, 精易_矩形, 传址, 

.DLL命令 IsChild, 逻辑型, "user32.dll", "IsChild", 公开, 窗口_是否子窗口 user32.dll判断一个窗口是否为另一窗口的子或隶属窗口
    .参数 父窗口的句柄, 整数型, , 父窗口的句柄
    .参数 欲判断的窗口句柄, 整数型, , 欲判断的窗口句柄

.DLL命令 SetParent, 整数型, "user32.dll", "SetParent", 公开, 窗口_置父   指定一个窗口的新父(返回  前一个父窗口的句柄)
    .参数 子窗口句柄, 整数型, , 
    .参数 父窗口句柄, 整数型, , 

.DLL命令 IsWindow, 整数型, "user32.dll", "IsWindow", 公开, 窗口_句柄是否有效  判断一个窗口句柄是否有效(非零表示成功，零表示失败)
    .参数 hwnd, 整数型, , 

.DLL命令 EnumChildWindows_整数, 逻辑型, "user32.dll", "EnumChildWindows", 公开, 
    .参数 hWndParent, 整数型, , 0
    .参数 lpEnumFunc, 整数型, , 0
    .参数 lParam, 整数型, , 0

.DLL命令 EnumChildWindows, 逻辑型, "user32.dll", "EnumChildWindows", 公开, 
    .参数 父窗口句柄, 整数型, , 
    .参数 函数指针, 子程序指针, , 
    .参数 自定义值, 整数型, , 

.DLL命令 EnumWindows, 逻辑型, "user32.dll", "EnumWindows", 公开, 窗口_枚举
    .参数 枚举过程, 子程序指针, , 
    .参数 参数, 整数型, , 

.DLL命令 SetActiveWindow, 整数型, "user32.dll", "SetActiveWindow", 公开, 激活窗口
    .参数 hwnd, 整数型, , 

.DLL命令 RedrawWindow, 逻辑型, "user32.dll", "RedrawWindow", 公开, 窗口_重画
    .参数 hwnd, 整数型, , 
    .参数 矩形, 精易_矩形, , 
    .参数 区域, 整数型, , 
    .参数 旗帜, 整数型, , 

.DLL命令 EnableMenuItem, 整数型, "user32.dll", "EnableMenuItem", 公开, 窗口禁止关闭
    .参数 hMenu, 整数型, , 
    .参数 wIDEnableItem, 整数型, , 
    .参数 wEnable, 整数型, , 

.DLL命令 OpenIcon, 逻辑型, "user32.dll", "OpenIcon", 公开, 窗口_还原   恢复一个最小化的程序，并将其激活
    .参数 hwnd, 整数型, , 

.DLL命令 GetFocus, 整数型, "user32.dll", "GetFocus", 公开, 窗口_取焦点句柄, GetFocus，获得自身拥有输入焦点的窗口的句柄

.DLL命令 GetDesktopWindow, 整数型, "user32.dll", "GetDesktopWindow", 公开, 窗口_取屏幕句柄

.DLL命令 ChildWindowFromPoint, 整数型, "user32.dll", "ChildWindowFromPoint", 公开, 窗口_取坐标子句柄 user32.dll取父窗口中包含了指定坐标的第一个子窗口句柄(与其它取窗口句柄不同的是:可取出不可视或透明的窗口)
    .参数 父窗口句柄, 整数型, , 欲取坐标句柄所在的父窗口句柄
    .参数 横坐标, 整数型, , 指定横坐标
    .参数 纵坐标, 整数型, , 指定纵坐标

.DLL命令 GetClassNameA, 整数型, "user32.dll", "GetClassNameA", 公开, 窗口_取类名 为指定的窗口取得类名　以字节数表示的类名长度；排除最后的空中止字符。零表示出错。会设置GetLastError
    .参数 句柄, 整数型, , 欲获得类名的那个窗口的句柄
    .参数 文本, 文本型, 传址, 随同类名载入的缓冲区。预先至少必须分配nMaxCount+1个字符
    .参数 文本长度, 整数型, , 由lpClassName提供的缓冲区长度;

.DLL命令 SetWindowRgn, 整数型, "user32.dll", "SetWindowRgn", 公开, 为区域指定的所有坐标都以窗口坐标（不是客户坐标）表示，它们以整个窗口（包括标题栏和边框）的左上角为起点
    .参数 hwnd, 整数型, , 将设置其区域的窗口
    .参数 区域, 整数型, , 将设置的区域的句柄，一旦设置了该区域，就不能使用或修改该区域句柄，也不要删除它
    .参数 自动刷新, 逻辑型, , Boolean，若为TRUE，则立即重画窗口

.DLL命令 AtlAxWinInit, 空白型, "atl.dll", "AtlAxWinInit", 公开, 

.DLL命令 AtlAxGetControl, 整数型, "atl.dll", "AtlAxGetControl", 公开, 
    .参数 h, 整数型, , 
    .参数 x, 对象, , 

.DLL命令 GetTextExtentPointA, 空白型, "gdi32.dll", "GetTextExtentPointA", 公开, 
    .参数 hdc, 整数型, , 
    .参数 lpString, 文本型, , 
    .参数 cbString, 整数型, , 
    .参数 lpSize, 精易_坐标, , 

.DLL命令 CreateWindowExA, 整数型, "user32.dll", "CreateWindowExA", 公开, 创建窗口_
    .参数 扩展风格, 整数型, , 
    .参数 类名, 文本型, , 刚才注册的类名
    .参数 窗口标题, 文本型, , 
    .参数 风格, 整数型, , 
    .参数 屏幕横坐标, 整数型, , 
    .参数 屏幕纵坐标, 整数型, , 
    .参数 宽度, 整数型, , 
    .参数 高度, 整数型, , 
    .参数 父窗口句柄, 整数型, , 没有就写0
    .参数 菜单句柄, 整数型, , 
    .参数 模块句柄, 整数型, , 
    .参数 参数, 整数型, , 

.DLL命令 CreateWindowExW, 整数型, "user32", "CreateWindowExW", 公开, 创建窗口
    .参数 dwExStyle, 整数型, , 窗口的扩展风格
    .参数 lpClassName, 字节集, , 注册类名
    .参数 lpWindowName, 字节集, , 窗口名称
    .参数 dwStyle, 整数型, , 窗口风格
    .参数 x, 整数型, , 窗口的水平位置
    .参数 y, 整数型, , 窗口的垂直位置
    .参数 nWidth, 整数型, , 窗口的宽度
    .参数 nHeight, 整数型, , 窗口的高度
    .参数 hWndParent, 整数型, , 父窗口的句柄
    .参数 hMenu, 整数型, , 菜单的句柄或是子窗口的标识符
    .参数 hInstance, 整数型, , 应用程序实例的句柄
    .参数 lpParam, 整数型, , 指向窗口的创建数据

.DLL命令 GetWindowLongA, 整数型, "user32.dll", "GetWindowLongA", 公开, 获取窗口信息
    .参数 hwnd, 整数型, , 
    .参数 属性, 整数型, , 

.DLL命令 GetWindowTextA, 整数型, "user32.dll", "GetWindowTextA", 公开, 窗口_取标题
    .参数 hwnd, 整数型, , 
    .参数 标题名, 文本型, 传址, 
    .参数 长度, 整数型, , 

.DLL命令 GetWindowTextW, 整数型, "user32.dll", "GetWindowTextW", 公开, 窗口_取标题W
    .参数 hwnd, 整数型, , 
    .参数 标题名, 整数型, , 
    .参数 长度, 整数型, , 

.DLL命令 Thread32Next, 逻辑型, "Kernel32.dll", "Thread32Next", 公开, _线程取第一个
    .参数 快照句柄, 整数型, , 
    .参数 线程入口结构, 未知类型0x41012C6F, , 

.DLL命令 SHGetSpecialFolderPath, 逻辑型, "shell32.dll", "SHGetSpecialFolderPathA", 公开, 取系统目录
    .参数 hwndOwner, 整数型, , 
    .参数 lpszPath, 文本型, , 
    .参数 nFolder, 整数型, , 
    .参数 fCreate, 逻辑型, , 

.DLL命令 GetTempPathA, 整数型, "kernel32.dll", "GetTempPathA", 公开, 取临时目录
    .参数 目录长度, 整数型, , 
    .参数 临时目录, 文本型, , 

.DLL命令 SHBrowseForFolderA, 整数型, "shell32.dll", "SHBrowseForFolderA", 公开, 打开浏览目录对话框
    .参数 lpBrowseInfo, 未知类型0x41012C70, , 

.DLL命令 GetSystemDirectoryA, 整数型, "kernel32.dll", "GetSystemDirectoryA", 公开, 目录_取system32目录  成功返回system32目录的全路径
    .参数 缓冲区, 文本型, , 
    .参数 缓冲区长度, 整数型, , 

.DLL命令 GetWindowsDirectoryA, 整数型, "kernel32.dll", "GetWindowsDirectoryA", 公开, 目录_取Windows目录  成功返回Windows目录的全路径
    .参数 缓冲区, 文本型, , 
    .参数 尺寸, 整数型, , 

.DLL命令 PathMakeSystemFolderA, 整数型, "shlwapi.dll", "PathMakeSystemFolderA", 公开, 设置目录的系统属性
    .参数 目录, 文本型, , pszPath

.DLL命令 PathIsSystemFolderA, 整数型, "shlwapi.dll", "PathIsSystemFolderA", 公开, 判断目录是否有系统属性
    .参数 目录, 文本型, , pszPath
    .参数 属性标志, 整数型, 传址, dwAttrb

.DLL命令 PathUnmakeSystemFolderA, 整数型, "shlwapi.dll", "PathUnmakeSystemFolderA", 公开, 取消目录的系统属性
    .参数 目录, 文本型, , pszPath

.DLL命令 PathIsDirectoryEmptyA, 逻辑型, "shlwapi.dll", "PathIsDirectoryEmptyA", 公开, 目录_是否为空
    .参数 目录路径, 文本型, , 

.DLL命令 InternetGetCookieExA, 整数型, "wininet.dll", "InternetGetCookieExA", 公开, 
    .参数 lpszURL, 文本型, , 
    .参数 lpszCookieName, 文本型, , 
    .参数 lpszCookieData, 文本型, , 
    .参数 lpdwSize, 整数型, 传址, 
    .参数 dwFlags, 整数型, , 
    .参数 lpReserved, 整数型, , 

.DLL命令 InternetGetCookieA, 逻辑型, "wininet.dll", "InternetGetCookieA", 公开, 读取COOKIE
    .参数 域名, 文本型, , 
    .参数 名称, 文本型, , 
    .参数 内容, 文本型, 传址, 
    .参数 尺寸, 整数型, 传址, 

.DLL命令 InternetSetCookieA, 逻辑型, "wininet.dll", "InternetSetCookieA", 公开, 设置COOKIE
    .参数 域名, 文本型, 传址, 
    .参数 名称, 文本型, 传址, 
    .参数 内容, 文本型, 传址, 

.DLL命令 ChooseColorA, 整数型, "comdlg32.dll", "ChooseColorA", 公开, 打开颜色对话框
    .参数 pChoosecolor, 精易_颜色对话框, 传址, 

.DLL命令 PrintWindow, 逻辑型, "User32.dll", "PrintWindow", 公开, 打印窗口
    .参数 hwnd, 整数型, , 
    .参数 hdcBlt, 整数型, , 
    .参数 nFlags, 整数型, , 

.DLL命令 OpenProcessToken, 整数型, "advapi32.dll", "OpenProcessToken", 公开, 打开过程令牌对象OpenProcessToken
    .参数 ProcessHandle, 整数型, , 进程句柄
    .参数 DesiredAccess, 整数型, , 权限
    .参数 TokenHandle, 整数型, 传址, 令牌句柄

.DLL命令 ObjectFromLresult, 整数型, "OLEACC.DLL", "ObjectFromLresult", 公开, 
    .参数 lResult, 整数型, , 
    .参数 riid, 字节集, , 
    .参数 wParam, 整数型, , 
    .参数 ppvObject, 对象, , 

.DLL命令 SendMessageTimeoutA, 整数型, "user32.dll", "SendMessageTimeoutA", 公开, _同步发送消息  向窗口发送一条消息。如窗口位于不同的线程中，则利用这个函数可以指定一个超时值，以便在另一个进程挂起的时候防止调用进程也永远挂起　成功时返回TRUE，失败时返回FALSE。会设置GetLastError
    .参数 hwnd, 整数型, , 要接收消息的一个窗口的句柄
    .参数 MSG, 整数型, , 消息的标识符
    .参数 wParam, 整数型, , 由消息决定
    .参数 lParam, 整数型, , 由消息决定
    .参数 fuFlags, 整数型, , 下述常数的一个或多个;SMTO_ABORTIFHUNG：如目标进程挂起，则函数立即返回;SMTO_BLOCK：除非函数返回，否则调用线程不能处理消息;SMTO_NORMAL：允许调用线程处理消息，同时保持函数继续执行
    .参数 uTimeout, 整数型, , 超时值，采用毫秒为单位
    .参数 lpdwsult, 整数型, 传址, 用于装载函数结果的一个变量;

.DLL命令 RegisterWindowMessageA, 整数型, "user32.dll", "RegisterWindowMessageA", 公开, _获取消息编号  获取分配给一个字串标识符的消息编号　&C000 到 &FFFF之间的一个消息编号。零意味着出错
    .参数 消息名称, 文本型, , 注册消息的名字;  

.DLL命令 RegisterHotKey, 逻辑型, "user32.dll", "RegisterHotKey", 公开, 热键注册
    .参数 hWnd, 整数型, , 
    .参数 id, 整数型, , 
    .参数 fsModifoers, 整数型, , 
    .参数 vk, 整数型, , 

.DLL命令 UnregisterHotKey, 逻辑型, "user32.dll", "UnregisterHotKey", 公开, 撤消热键钩子
    .参数 hWnd, 整数型, , 
    .参数 id, 整数型, , 

.DLL命令 OpenFileMappingA, 整数型, "kernel32.dll", "OpenFileMappingA", 公开, 打开一个现成的文件映射对象　指定文件映射对象的句柄。零表示出错。会设置GetLastError
    .参数 常数, 整数型, , 带有前缀FILE_MAP_???的一个常数。参考MapViewOfFile函数的dwDesiredAccess参数的说明
    .参数 进程继承, 整数型, , 如这个函数返回的句柄能由当前进程启动的新进程继承，则这个参数为TRUE
    .参数 文件映射对象名称, 文本型, , 指定要打开的文件映射对象名称;

.DLL命令 UnmapViewOfFile, 整数型, "kernel32.dll", "UnmapViewOfFile", 公开, _取消文件映射对象 在当前应用程序的内存地址空间对一个文件映射对象的映射
    .参数 lpBaseAddress, 整数型, , 

.DLL命令 VirtualFreeEx, 整数型, "kernel32.dll", "VirtualFreeEx", 公开, 销毁外部指针
    .参数 hProcess, 整数型, , 
    .参数 lpAddress, 整数型, , 
    .参数 dwSize, 整数型, , 
    .参数 flAllocationType, 整数型, , 

.DLL命令 GetCurrentProcess, 整数型, "kernel32.dll", "GetCurrentProcess", 公开, 取当前进程伪句柄

.DLL命令 CreateThread, 整数型, "kernel32.dll", "CreateThread", 公开, 线程_启动
    .参数 lpThreadAttributes, 整数型, , 
    .参数 dwStackSize, 整数型, , 
    .参数 lpStartAddress, 整数型, , 
    .参数 lpParameter, 整数型, , 
    .参数 dwCreationFlags, 整数型, , 控制线程创建的标志。如果指定了CREATE_SUSPENDED标志，是创建线程处于暂停状态，并不会运行，直到ResumeThread函数被调用。如果这个值是零，线程创建后立即运行
    .参数 lpThreadId, 整数型, , 

.DLL命令 GetUrlCacheEntryInfo, 整数型, "wininet.dll", "GetUrlCacheEntryInfoA", 公开, 
    .参数 lpszUrlName, 文本型, , lpszUrlSearchPattern
    .参数 第一个Url缓存入口信息, 整数型, , lpFirstCacheEntryInfo
    .参数 第一个Url缓存入口信息大小, 整数型, 传址, lpdwFirstCacheEntryInfoBufferSize

.DLL命令 PathAppend, 逻辑型, "shlwapi.dll", "PathAppendA", 公开, 合并路径
    .参数 pszPath, 字节集, 传址, 
    .参数 pszMore, 字节集, , 

.DLL命令 ImmGetDescriptionA, 整数型, "imm32.dll", "ImmGetDescriptionA", 公开, _输入法取名称
    .参数 布局, 整数型, , 
    .参数 布局名称, 文本型, , 
    .参数 名称长度, 整数型, , 

.DLL命令 ImmIsIME, 整数型, "imm32.dll", "ImmIsIME", 公开, _输入法判断中文键盘布局
    .参数 hkl, 整数型, , 

.DLL命令 DeleteDC, 整数型, "gdi32.dll", "DeleteDC", 公开, 
    .参数 hdc, 整数型, , 

.DLL命令 GetKeyboardLayout, 整数型, "user32.dll", "GetKeyboardLayout", 公开, _输入法取当前的序号
    .参数 布局索引, 整数型, , 

.DLL命令 GetLogicalDriveStringsA, 整数型, "kernel32.dll", "GetLogicalDriveStringsA", 公开, _系统取所有磁盘盘符 获取一个字串，其中包含了当前所有逻辑驱动器的根驱动器路径  装载到lpBuffer的字符数量（排除空中止字符）。如缓冲区的长度不够，不能容下路径，则返回值就变成要求的缓冲区大小。零表示失败。会设置GetLastError
    .参数 缓冲器长度, 整数型, , lpBuffer字串的长度
    .参数 缓冲区, 字节集, , 用于装载逻辑驱动器名称的字串。每个名字都用一个NULL字符分隔，在最后一个名字后面用两个NULL表示中止（空中止）;

.DLL命令 GetDiskFreeSpaceExA, 逻辑型, "kernel32.dll", "GetDiskFreeSpaceExA", 公开, 系统_取磁盘大小信息
    .参数 根路径名称, 文本型, , lpRootPathName
    .参数 剩余空间, 长整数型, 传址, lpFreeBytesAvailableToCaller
    .参数 总大小, 长整数型, 传址, lpTotalNumberOfBytes
    .参数 总剩余空间, 长整数型, 传址, lpTotalNumberOfFreeBytes

.DLL命令 GetDriveTypeA, 整数型, "kernel32.dll", "GetDriveTypeA", 公开, _系统光驱查询
    .参数 nDrive, 文本型, , 

.DLL命令 LockWorkStation, 空白型, "user32.dll", "LockWorkStation", 公开, 切换系统用户

.DLL命令 SetSuspendState, 整数型, "Powrprof.dll", "SetSuspendState", 公开, 系统进入待机状态
    .参数 冬眠, 整数型, , Hibernate
    .参数 强制, 整数型, , ForceCritical
    .参数 不激发事件, 整数型, , DisableWakeEvent

.DLL命令 ExitWindowsEx, 整数型, "user32.dll", "ExitWindowsEx", 公开, 关闭系统, 退出windows，并用特定的选项重新启动
    .参数 标志, 整数型, , uFlags,指定一个或多个标志的组合
    .参数 保留值, 整数型, , dwReserved,保留，设为零

.DLL命令 SHEmptyRecycleBinA, 整数型, "shell32.dll", "SHEmptyRecycleBinA", 公开, 系统_清空回收站, SHEmptyRecycleBin
    .参数 hwnd, 整数型, , hwnd
    .参数 根路径, 文本型, , pszRootPath
    .参数 标志, 逻辑型, , dwFlags

.DLL命令 SHFormatDrive, 逻辑型, "shell32.dll", "SHFormatDrive", 公开, _格式化软盘
    .参数 hwnd, 整数型, , hwndOwner
    .参数 驱动器, 整数型, , iDrive
    .参数 容量, 整数型, , iCapacity
    .参数 格式化类型, 整数型, , iFormatType

.DLL命令 SystemParametersInfoA, 逻辑型, "user32.dll", "SystemParametersInfoA", 公开, _系统设置桌面壁纸
    .参数 uiAction, 整数型, , 
    .参数 uiParam, 整数型, , 
    .参数 pvParam, 整数型, , 
    .参数 fWinlni, 短整数型, , 

.DLL命令 GetUserNameA, 整数型, "advapi32.dll", "GetUserNameA", 公开, 取出当前的用户名,TRUE（非零）表示成功，否则返回零。
    .参数 字串缓冲区, 文本型, , lpBuffer，随同用户名载入的字串缓冲区
    .参数 缓冲区长度, 整数型, 传址, nSize，缓冲区的长度。这个变量随同返回用户名的实际长度载入

.DLL命令 waveOutGetVolume, 整数型, "winmm.dll", "waveOutGetVolume", 公开, 
    .参数 设备, 整数型, , 
    .参数 音量值, 整数型, 传址, 

.DLL命令 waveOutSetVolume, 整数型, "winmm.dll", "waveOutSetVolume", 公开, _系统置音量
    .参数 设备, 整数型, , 
    .参数 音量值, 整数型, , 

.DLL命令 ChangeDisplaySettingsA, 整数型, "user32.dll", "ChangeDisplaySettingsA", 公开, _系统置分辨率2
    .参数 lpDevMode, 短整数型, 传址, 
    .参数 dwFlags, 整数型, , 

.DLL命令 GetComputerNameA, 整数型, "kernel32.dll", "GetComputerNameA", 公开, _系统取计算机名 取出当前完整的计算机名称，TRUE（非零）表示成功，否则返回零。
    .参数 字串缓冲区, 文本型, , lpBuffer，随同计算机名载入的字串缓冲区
    .参数 缓冲区长度, 整数型, 传址, nSize，缓冲区的长度。这个变量随同返回计算机名的实际长度载入

.DLL命令 EnumDisplaySettingsA, 整数型, "user32.dll", "EnumDisplaySettingsA", 公开, _系统置分辨率1
    .参数 lpszDeviceName, 整数型, , 
    .参数 iModeNum, 整数型, , 
    .参数 lpDevMode, 短整数型, 传址, 

.DLL命令 SHAppBarMessage, 整数型, "shell32.dll", "SHAppBarMessage", 公开, _系统取任务栏高度
    .参数 dwMessage, 整数型, , 
    .参数 pData, 未知类型0x41012C71, , 

.DLL命令 GetDateFormatA, 整数型, "kernel32.dll", "GetDateFormatA", 公开, 针对指定的“当地”格式，对一个系统日期进行格式化  格式化过后的字串的长度。
    .参数 地方ID, 整数型, , Locale，用于决定格式的地方ID。lpFormat参数中指定的任何信息（倘若不是NULL）都优先于特定于地方的信息
    .参数 标志, 整数型, , dwFlags，如指定了lpFormat，那么该参数应该为零。否则，可设为LOCALE_NOUSEROVERRIDE，强制使用系统地方参数——即使它们已由用户取代。
    .参数 日期结构, 精易_时间, , lpDate，包含了一个系统日期的结构
    .参数 格式化, 文本型, , lpFormat，String，可设为NULL，使用特定于不同地方的值（用vbNullString传递一个NULL）。否则包含一个日期格式字串。
    .参数 缓冲区文本, 文本型, , lpDateStr，指定一个缓冲区，用于容纳格式化过后的字串。注意事先对字串进行初始化
    .参数 缓冲区文本长度, 整数型, , cchDate，缓冲区的长度。如为零，表示函数会返回需要缓冲区的大小;

.DLL命令 SystemTimeToVariantTime, 整数型, "oleaut32.dll", "SystemTimeToVariantTime", 公开, _系统时间变时间
    .参数 LPSYSTEMTIME, 精易_时间, 传址, 
    .参数 double, 日期时间型, 传址, 

.DLL命令 FileTimeToSystemTime, 整数型, "kernel32.dll", "FileTimeToSystemTime", 公开, _系统结构的内容 根据一个FILETIME结构的内容，装会设置GetLastError
    .参数 文件时间结构, 未知类型0x41012C6C, , FILETIME，包含了文件时间的一个结构
    .参数 系统时间结构, 精易_时间, , SYSTEMTIME，用于装载系统时间信息的一个结构;

.DLL命令 SystemTimeToFileTime, 整数型, "kernel32.dll", "SystemTimeToFileTime", 公开,  _系统到本地时间1
    .参数 lpSystemTime, 精易_时间, , 
    .参数 lpFileTime, 未知类型0x41012C6C, , 

.DLL命令 FileTimeToLocalFileTime, 整数型, "kernel32.dll", "FileTimeToLocalFileTime", 公开, _系统到本地时间 将一个FILETIME结构转换成本地时间  非零表示成功，零表示失败。会设置GetLastError
    .参数 文件时间, 未知类型0x41012C6C, , FILETIME，包含了UTC时间信息的一个结构
    .参数 所在文件时间, 未知类型0x41012C6C, , FILETIME，用于装载转换过后的本地时间的结构;

.DLL命令 GetTimeFormatA, 整数型, "kernel32.dll", "GetTimeFormatA", 公开, _系统置时间进行格式化 针对指定的“当地”格式，对一个系统时间进行格式化。
    .参数 地方ID, 整数型, , Locale，用于决定格式的地方ID。lpFormat参数中指定的任何信息（倘若不是NULL）都优先于特定于地方的信息
    .参数 标志, 整数型, , dwFlags，如指定了lpFormat，那么该参数应该为零。否则，可设为LOCALE_NOUSEROVERRIDE，强制使用系统地方参数
    .参数 时间结构, 精易_时间, , lpDate，SYSTEMTIME，用于包容系统时间的一个结构
    .参数 格式化, 文本型, , lpFormat，String，可设为NULL，使用特定于不同地方的值（用vbNullString传递一个NULL）。
    .参数 缓冲区文本, 文本型, , lpDateStr，指定一个缓冲区，用于容纳格式化过后的字串。注意事先对字串进行初始化
    .参数 缓冲区文本长度, 整数型, , cchDate，缓冲区的长度。如为零，表示函数会返回需要缓冲区的大小;

.DLL命令 GetInputState, 整数型, "user32.dll", "GetInputState", 公开, 用法,如果真(我的处理事件()≠0),处理事件()    比系统自带的"处理事件"比3倍以上

.DLL命令 EnumThreadWindows, 整数型, "user32.dll", "EnumThreadWindows", 公开, _窗口枚举任务 枚举与指定任务相关的窗口　非零表示成功，零表示失败
    .参数 线程标识符, 整数型, , 某线程的标识符，它的窗口将被枚举
    .参数 函数指针, 子程序指针, , 指向一个函数的指针，要求为每个子窗口都调用这个函数。用AddressOf运算符获得函数在标准模式下的地址
    .参数 自定义数值, 整数型, , 在枚举期间，传递给dwcbkd32d.ocx定制控件之EnumWindows事件的值。这个值的含义是由程序员规定的
  

.DLL命令 CreateRoundRectRgn, 整数型, "gdi32.dll", "CreateRoundRectRgn", 公开, 创建一个圆角矩形，该矩形由X1，Y1-X2，Y2确定，并由X3，Y3确定的椭圆描述圆角弧度，不用时一定要用DeleteObject函数删除该区域用该函数创建的区域与用RoundRect API函数画的圆角矩形不完全相同，因为本矩形的右边和下边不包括在区域之内
    .参数 左上横坐标, 整数型, , X1，矩形左上角横坐标
    .参数 左上纵坐标, 整数型, , Y1，矩形左上角纵坐标
    .参数 右下横坐标, 整数型, , X2，矩形右下角横坐标
    .参数 右下纵坐标, 整数型, , Y2，矩形右下角纵坐标
    .参数 圆角椭圆的宽, 整数型, , X3，圆角椭圆的宽，其范围从0（没有圆角）到矩形宽（全圆）
    .参数 圆角椭圆的高, 整数型, , Y3，圆角椭圆的高，其范围从0（没有圆角）到矩形高（全圆）

.DLL命令 ClientToScreen, 整数型, "user32.dll", "ClientToScreen", 公开, _窗口取区域位置 非零表示成功，零表示失败
    .参数 hwnd, 整数型, , hwnd，要取出区域坐标的窗口句柄
    .参数 位置变量, 精易_坐标, , lpPoint，参见相关帮助

.DLL命令 SetFocus, 逻辑型, "user32.dll", "SetFocus", 公开, 窗口_置后台焦点 将输入焦点设到指定的窗口。如有必要，会激活窗口  (返回前一个拥有焦点的窗口的句柄)
    .参数 hwnd, 整数型, , 准备接收焦点的窗口的句柄

.DLL命令 SetForegroundWindow, 逻辑型, "user32.dll", "SetForegroundWindow", 公开, 窗口_置焦点 将窗口设为系统的前台窗口。这个函数可用于改变用户目前正在操作的应用程序
    .参数 句柄, 整数型, , 

.DLL命令 ShowCursor, 空白型, "user32.dll", "ShowCursor", 公开, 鼠标_显示隐藏   控制鼠标指针的可视性(返回值:显示计数（参考注解）)
    .参数 bShow, 逻辑型, , （非零）显示指针，零 隐藏

.DLL命令 ClipCursor, 空白型, "user32.dll", "ClipCursor", 公开, 鼠标限制
    .参数 区域, 精易_矩形, , 

.DLL命令 LoadCursor, 整数型, "user32.dll", "LoadCursorA", 公开, 从指定的模块或应用程序实例中载入一个鼠标指针。LoadCursorBynum是LoadCursor函数的类型安全声明　执行成功则返回已载入的指针的句柄；零表示失败。在Windows ;    95 和Win16环境中，这个函数只能载入标准尺寸的图标
    .参数 实例句柄, 整数型, , 一个DLL的模块句柄；或者一个实例句柄，指定包含了鼠标指针的可执行程序
    .参数 鼠标指针标识, 整数型, , 作为一个字串，指定欲载入的指针资源。作为一个长整数值，指定欲载入的资源ID；或者设置一个常数，代表某幅固有系统指针。如装载的是一个固有系统指针，注意hInstance参数应设为零。在api32.txt文件中以前缀IDC_ 作为标志;  

.DLL命令 SetCursor, 整数型, "user32.dll", "SetCursor", 公开, 将指定的鼠标指针设为当前指针　前一个指针的值
    .参数 指针句柄, 整数型, , 要设为当前指针的一个指针的句柄。如设为零，表示不显示任何指针;  

.DLL命令 GetDoubleClickTime, 整数型, "user32.dll", "GetDoubleClickTime", 公开, 鼠标_取双击间隔时间

.DLL命令 SetCursorPos, 空白型, "user32.dll", "SetCursorPos", 公开, 鼠标_置位置 
    .参数 横坐标, 整数型, , 
    .参数 纵坐标, 整数型, , 

.DLL命令 SetClassLongA, 整数型, "user32.dll", "SetClassLongA", 公开, 
    .参数 hwnd, 整数型, , 
    .参数 nIndex, 整数型, , 
    .参数 dwNewLong, 整数型, , 类信息的新值

.DLL命令 LoadCursorFromFileA, 整数型, "user32.dll", "LoadCursorFromFileA", 公开, 创建一个鼠标指针
    .参数 lpFileName, 文本型, , 包含指针的那个文件的名字

.DLL命令 SetCapture, 整数型, "user32.dll", "SetCapture", 公开, 鼠标捕获
    .参数 hwnd, 整数型, , 

.DLL命令 ReleaseCapture, 逻辑型, "user32.dll", "ReleaseCapture", 公开, 鼠标释放

.DLL命令 mouse_event, 空白型, "user32.dll", "mouse_event", 公开, 鼠标模拟
    .参数 标志组合, 整数型, , 2鼠标左键按住不放；6鼠标左键单击；24鼠标右键单击；
    .参数 水平方向, 整数型, , dx，参见相关帮助
    .参数 垂直方向, 整数型, , dy，参见相关帮助
    .参数 数据信息, 整数型, , cButtons，未使用
    .参数 扩展数据信息, 整数型, , dwExtraInfo，通常未用的一个值

.DLL命令 GetClipboardOwner, 整数型, "user32.dll", "GetClipboardOwner", 公开, _剪辑板取数据权窗口句柄 返回复制该数据的窗口句柄；如：一段文字是在记事本复制的，则返回记事本的窗口句柄

.DLL命令 GetClipboardData, 整数型, "user32.dll", "GetClipboardData", 公开, 剪辑板取数据句柄
    .参数 wFormat, 整数型, , 

.DLL命令 CloseClipboard, 整数型, "user32.dll", "CloseClipboard", 公开, 剪辑板关闭

.DLL命令 SetClipboardData, 整数型, "user32.dll", "SetClipboardData", 公开, 剪辑板置数据
    .参数 uFormat, 整数型, , 
    .参数 hMem, 整数型, , 

.DLL命令 GetDIBits3, 整数型, "gdi32.dll", "GetDIBits", 公开, gdi32.dll将来自一幅位图的二进制位复制到一幅与设备无关的位图里  非零表示成功，零表示失败。在Windows 95中，返回值是返回的扫描线数量
    .参数 设备场景句柄, 整数型, , aHDC，定义了与设备有关位图hBitmap的配置信息的一个设备场景的句柄
    .参数 源位图句柄, 整数型, , hBitmap，源位图的句柄。绝对不能将这幅位图选入设备场景
    .参数 扫描线初始编号, 整数型, , nStartScan，欲复制到DIB中的第一条扫描线的编号
    .参数 扫描线数量, 整数型, , nNumScans，欲复制的扫描线数量
    .参数 缓冲区指针, 字节型, 传址, lpBits，指向一个缓冲区的指针。这个缓冲区将用于装载采用DIB格式的信息，但不取回数据（用ByVal传递零值）
    .参数 位图结构, 未知类型0x41012C69, , lpBI，BITMAPINFO，对lpBits DIB的格式及颜色进行说明的一个结构。在BITMAPINFOHEADER结构中，从biSize到biCompression之间的所有字段都必须初始化
    .参数 常量标志, 整数型, , wUsage，下述常数之一：;DIB_PAL_COLORS：在颜色表中装载一个16位所以数组，它们与当前选定的调色板有关;DIB_RGB_COLORS：在颜色表中装载RGB颜色;

.DLL命令 SetPixelV, 整数型, "gdi32.dll", "SetPixelV", 公开, 置场景颜色_在指定的设备场景中设置一个像素的RGB值
    .参数 hdc, 整数型, , 
    .参数 x, 整数型, , 
    .参数 y, 整数型, , 
    .参数 crColor, 整数型, , 指定像素的新RGB颜色值

.DLL命令 DrawIconEx, 整数型, "user32.dll", "DrawIconEx", 公开, 描绘一个图标或鼠标指针
    .参数 hdc, 整数型, , 
    .参数 xLeft, 整数型, , 
    .参数 yTop, 整数型, , 
    .参数 hIcon, 整数型, , 
    .参数 cxWidth, 整数型, , 
    .参数 cyWidth, 整数型, , 
    .参数 istepIfAniCur, 整数型, , 
    .参数 hbrFlickerFreeDraw, 整数型, , 
    .参数 diFlags, 整数型, , 

.DLL命令 EmptyClipboard, 逻辑型, "user32.dll", "EmptyClipboard", 公开, 剪辑板清空

.DLL命令 GetObjectA, 整数型, "gdi32.dll", "GetObjectA", 公开, _取对象属性
    .参数 hgdiobj, 整数型, , 
    .参数 cbBuffer, 整数型, , 
    .参数 lpvObject, 未知类型0x41012C72, , 

.DLL命令 GlobalLock, 整数型, "kernel32.dll", "GlobalLock", 公开, 锁定内存对象并返回一个指针
    .参数 hMem, 整数型, , 

.DLL命令 GlobalUnlock, 整数型, "kernel32.dll", "GlobalUnlock", 公开, 开锁全局内存块
    .参数 hMem, 整数型, , 

.DLL命令 GlobalAlloc, 整数型, "kernel32.dll", "GlobalAlloc", 公开, 在堆中分配内存
    .参数 wFlags, 整数型, , 
    .参数 dwBytes, 整数型, , 

.DLL命令 IsClipboardFormatAvailable, 整数型, "user32.dll", "IsClipboardFormatAvailable", 公开, _剪贴板格式是可用
    .参数 wFormat, 整数型, , 

.DLL命令 RegisterClipboardFormatA, 整数型, "user32.dll", "RegisterClipboardFormatA", 公开, _剪辑板注册格式
    .参数 lpString, 文本型, , 

.DLL命令 RtlMoveMemory_字节型_数组, 空白型, "kernel32.dll", "RtlMoveMemory", 公开, 复制内存数据_MIB_IPFORWARDROW参数
    .参数 Destination, 字节型, 数组, 目标地址
    .参数 Source, 字节型, 数组, 要复制的数据MIB_IPFORWARDROW
    .参数 Length, 整数型, , 长度

.DLL命令 RtlMoveMemory_字节型, 空白型, "kernel32.dll", "RtlMoveMemory", 公开, 复制内存数据_MIB_IPFORWARDROW参数
    .参数 Destination, 字节型, 传址, 目标地址
    .参数 Source, 字节型, 传址, 要复制的数据MIB_IPFORWARDROW
    .参数 Length, 整数型, , 长度

.DLL命令 RtlMoveMemory_文本型, 空白型, "kernel32.dll", "RtlMoveMemory", 公开, 内存拷贝
    .参数 Destination, 整数型, , 
    .参数 Source, 文本型, , 
    .参数 Length, 整数型, , 

.DLL命令 RtlMoveMemory_剪贴板_置文件, 空白型, "kernel32.dll", "RtlMoveMemory", 公开, _剪贴板置文件
    .参数 pDest, 整数型, , 
    .参数 pSrc, 未知类型0x41012C73, 传址, 
    .参数 ByteLen, 整数型, , 

.DLL命令 DragQueryFileA, 整数型, "shell32.dll", "DragQueryFileA", 公开, _拖动查询文件
    .参数 hDrop, 整数型, , 
    .参数 iFile, 整数型, , 
    .参数 lpszFile, 文本型, , 
    .参数 cch, 整数型, , 

.DLL命令 OpenClipboard, 整数型, "user32.dll", "OpenClipboard", 公开, 打开剪辑板
    .参数 句柄, 整数型, , 

.DLL命令 keybd_event, 整数型, "user32.dll", "keybd_event", 公开, 键盘模拟
    .参数 键代码, 整数型, , bVk,欲模拟的虚拟键码
    .参数 键扫描码, 整数型, , bScan,键的OEM扫描码
    .参数 标志值, 整数型, , dwFlags,标志常数
    .参数 特定值, 整数型, , dwExtraInfo,通常不用的一个值

.DLL命令 SetLayeredWindowAttributes, 逻辑型, "user32.dll", "SetLayeredWindowAttributes", 公开, 窗口_置透明
    .参数 hwnd, 整数型, , 透明窗体的句柄
    .参数 crKey, 整数型, , 颜色值
    .参数 bAlpha, 字节型, , 透明度，取值范围是[0,255]
    .参数 dwFlags, 整数型, , 透明方式：LWA_ALPHA(2)时，crKey参数无效，bAlpha参数有效 || LWA_COLORKEY(1)时，bAlpha参数有效而窗体中的所有颜色为crKey的地方将变为透明

.DLL命令 SetWindowTextA, 逻辑型, "user32.dll", "SetWindowTextA", 公开, 窗口_置标题
    .参数 hwnd, 整数型, , 
    .参数 窗口标题, 文本型, , 

.DLL命令 SetWindowTextW, 逻辑型, "user32.dll", "SetWindowTextW", 公开, 改变指定窗口的标题栏的文本内容（如果窗口有标题栏）。如果指定窗口是一个控件，则改变控件的文本内容。然而，SetWindowText函数不改变其他应用程序中的控件的文本内容。
    .参数 hWnd, 整数型, , 要改变文本内容的窗口或控件的句柄。
    .参数 lpString, 字节集, , 指向一个空结束的字符串的指针，该字符串将作为窗口或控件的新文本。(注意：易语言BUG，不能直接用字节集常量)

.DLL命令 WindowFromPoint, 整数型, "user32.dll", "WindowFromPoint", 公开, 窗口_取鼠标处窗口句柄 返回包含了指定点的窗口的句柄。忽略屏蔽、隐藏以及透明窗口  包含了指定点的窗口的句柄。如指定的点处没有窗口存在，则返回零
    .参数 横坐标, 整数型, , 
    .参数 纵坐标, 整数型, , 

.DLL命令 ShowScrollBar, 逻辑型, "user32.dll", "ShowScrollBar", 公开, 滚动条_显示隐藏 窗口_控件显示隐藏, ShowScrollBar
    .参数 hwnd, 整数型, , hwnd
    .参数 滚动条标志, 整数型, , wBar
    .参数 显示标志, 逻辑型, , bShow

.DLL命令 SetTimer, 整数型, "user32.dll", "SetTimer", 公开, 用指定的超时值创建或替换一个定时器。如果函数成功并且hWnd参数为NULL，则返回值为标识新定时器的整数，应用程序可以将此值传递给KillTimer函数以销毁定时器。如果函数成功并且hWnd参数不为NULL，则返回值为非零整数，应用程序可以将nIDEvent参数的值传递给KillTimer函数以销毁定时器。如果函数无法创建定时器，则返回值为零。要获取扩展的错误信息，请调用GetLastError。
    .参数 hWnd, 整数型, , 与定时器关联的窗口句柄。如果将为 NULL 的 hWnd 与现有定时器的 nIDEvent 一起传递，该定时器将被替换的方式与现有的非 NULL 的 hWnd 定时器相同。
    .参数 nIDEvent, 整数型, , 非零的定时器ID。如果 hWnd 参数为 NULL，并且 nIDEvent 与现有定时器不匹配，则会忽略该参数并生成新的定时器ID。如果 hWnd 参数非 NULL，并且 hWnd 指定的窗口已具有具有值为 nIDEvent 的定时器，则现有定时器将被新定时器替换。当 SetTimer 替换定时器时，定时器将重置。因此，将在当前超时值过去之后发送一条消息，但先前设置的超时值将被忽略。如果该调用不是要替换现有的定时器，则如果 hWnd 为 NULL，则 nIDEvent 应为 0。
    .参数 uElapse, 整数型, , 超时值，以毫秒为单位。如果 uElapse 小于 USER_TIMER_MINIMUM（10），则将超时设置为 USER_TIMER_MINIMUM。如果 uElapse 大于 USER_TIMER_MAXIMUM（2147483647），则将超时设置为 USER_TIMER_MAXIMUM。
    .参数 lpTimerFunc, 整数型, , 当超时值过去时，指向要通知的函数指针。有关该函数的更多信息，请参见 TimerProc 。如果 lpTimerFunc 为 NULL，则系统将 WM_TIMER 消息发送到应用程序消息队列的 MSG 结构的 hwnd 成员包含 hWnd 参数的值。

.DLL命令 KillTimer, 逻辑型, "user32.dll", "KillTimer", 公开, 销毁指定的定时器。
    .参数 hWnd, 整数型, , 与指定定时器关联的窗口的句柄。此值必须与传递给创建定时器的SetTimer函数的hWnd值相同。
    .参数 uIDEvent, 整数型, , 要销毁的定时器。如果传递给SetTimer的窗口句柄有效，则此参数必须与传递给SetTimer的nIDEvent相同。如果应用程序调用SetTimer的hWnd设为NULL，这个参数必须由SetTimer返回的定时器ID。

.DLL命令 GetWindowDC, 整数型, "user32.dll", "GetWindowDC", 公开, 获取整个窗口（包括边框、滚动条、标题栏、菜单等）的设备场景  执行成功为窗口设备场景，失败则为0
    .参数 hwnd, 整数型, , 将获取其设备场景的窗口;

.DLL命令 CreatePen, 整数型, "gdi32.dll", "CreatePen", 公开, 用指定的样式、宽度和颜色创建一个画笔  如函数执行成功，就返回指向新画笔的一个句柄；否则返回零
    .参数 风格, 整数型, , 指定画笔样式，可以是下述常数之一;PS_SOLID：画笔画出的是实线;PS_DASH：画笔画出的是虚线（nWidth必须是1）;PS_DOT：画笔画出的是点线（nWidth必须是1）;PS_DASHDOT：画笔画出的是点划线（nWidth必须是1）;PS_DASHDOTDOT：画笔画出的是点-点-划线（nWidth必须是1）;PS_NULL：画笔不能画图;PS_INSIDEFRAME：画笔在由椭圆、矩形、圆角矩形、饼图以及弦等生成的封闭对象框中画图。如指定的准确RGB颜色不存在，就进行抖动处理
    .参数 宽度, 整数型, , 以逻辑单位表示的画笔的宽度
    .参数 颜色, 整数型, , 画笔的RGB颜色;

.DLL命令 GetStockObject, 整数型, "gdi32.dll", "GetStockObject", 公开, 取得一个固有对象的句柄（Stock）。这是可由任何应用程序使用的windows标准对象之一  指向指定对象的一个句柄。零表示出错
    .参数 类型, 整数型, , 下述表格中定义的任何常数之一BLACK_BRUSH黑色刷子DKGRAY_BRUSH黑灰色刷子GRAY_BRUSH灰色刷子HOLLOW_BRUSH凹刷子LTGRAY_BRUSH浅灰色刷子NULL_BRUSH空刷子WHITE_BRUSH白色刷子BLACK_PEN黑色画笔NULL_PEN空画笔WHITE_PEN白色画笔ANSI_FIXED_FONT采用windows（ANSI）字符集的等宽字体ANSI_VAR_FONT采用windows（ANSI）字符集的不等宽字体DEVICE_DEFAULT_FONT设备使用的默认字体（NT）DEFAULT_GUI_FONT用户界面的默认字体，包括菜单和对话框字体（Windows 95）OEM_FIXED_FONTOEM字符集的固有字体SYSTEM_FONT屏幕系统字体。这是用于菜单、对话框等等的默认不等宽字体SYSTEM_FIXED_FONT屏幕系统字体。这是用于菜单、对话框等等的默认等宽字体（在windows 3.0之前使用）DEFAULT_PALETTE默认调色板;

.DLL命令 SetROP2, 整数型, "gdi32.dll", "SetROP2", 公开, 设置指定设备场景的绘图模式。与vb的DrawMode属性完全一致　如执行成功，返回前一个绘图模式；零表示出错
    .参数 设备场景, 整数型, , 
    .参数 光栅运算方式, 整数型, , 

.DLL命令 Rectangle, 整数型, "gdi32.dll", "Rectangle", 公开, 画矩形 用当前选定的画笔描绘矩形，并用当前选定的刷子进行填充  非零表示成功，零表示失败。会设置GetLastError
    .参数 设备场景句柄, 整数型, , 设备场景的句柄
    .参数 左上角横坐标, 整数型, , 指定矩形左上角位置
    .参数 左上角纵坐标, 整数型, , 同上
    .参数 右下角横坐标, 整数型, , 指定矩形右下角位置
    .参数 右下角纵坐标, 整数型, , 同上;

.DLL命令 GetCurrentThread, 整数型, "kernel32.dll", "GetCurrentThread", 公开, 取当前线程句柄

.DLL命令 GetCurrentThreadId, 整数型, "kernel32.dll", "GetCurrentThreadId", 公开, 取当前线程ID

.DLL命令 CreateFontIndirectA, 整数型, "gdi32.dll", "CreateFontIndirectA", 公开, gdi32.dll用指定的属性创建一种逻辑字体　执行成功则返回逻辑字体句柄，零表示失败
    .参数 字体结构信息, LOGFONT, , LOGFONT，这个结构定义了逻辑字体请求的属性;  

.DLL命令 OpenThread, 整数型, "kernel32.dll", "OpenThread", 公开, 打开线程
    .参数 dwDesiredAccess, 整数型, , 2032639
    .参数 bInheritHandle, 整数型, , 0
    .参数 线程ID, 整数型, , 线程ID

.DLL命令 CreateDCA, 整数型, "gdi32.dll", "CreateDCA", 公开, _创建场景
    .参数 lpDriverName, 文本型, , 
    .参数 lpDeviceName, 文本型, , 
    .参数 lpOutput, 文本型, , 
    .参数 lpInitData, 整数型, , 

.DLL命令 lpRect, 整数型, "user32.dll", "IsRectEmpty", 公开, _矩形是否为空
    .参数 lpRect, 精易_矩形, , 

.DLL命令 PatBlt, 空白型, "gdi32.dll", "PatBlt", 公开, _填充设备场景
    .参数 hdc, 整数型, , 
    .参数 x, 整数型, , 
    .参数 y, 整数型, , 
    .参数 nWidth, 整数型, , 
    .参数 nHeight, 整数型, , 
    .参数 dwRop, 整数型, , 

.DLL命令 GetDlgCtrlID, 整数型, "user32.dll", "GetDlgCtrlID", 公开, 
    .参数 hwnd, 整数型, , 

.DLL命令 GetDlgItem, 整数型, "user32.dll", "GetDlgItem", 公开, 控件ID取窗口句柄
    .参数 父句柄, 整数型, , 
    .参数 欲取句柄的控件ID, 整数型, , 

.DLL命令 CoInitialize, 空白型, "ole32.dll", "CoInitialize", 公开, 加载COM
    .参数 pvReserved, 整数型, , 值为0

.DLL命令 CoUninitialize, 空白型, "ole32.dll", "CoUninitialize", 公开, 卸载COM

.DLL命令 WinExec, 整数型, "kernel32.dll", "WinExec", 公开, _服务
    .参数 lpCmdLine, 文本型, , 
    .参数 nCmdShow, 整数型, , 

.DLL命令 OpenSCManagerA, 整数型, "advapi32.dll", "OpenSCManagerA", 公开, 
    .参数 lpMachineName, 整数型, , 
    .参数 lpDatabaseName, 整数型, , 
    .参数 dwDesiredAccess, 整数型, , 

.DLL命令 OpenService, 整数型, "Advapi32.dll", "OpenServiceA", 公开, 
    .参数 hSCManager, 整数型, , 
    .参数 lpServiceName, 文本型, , 
    .参数 dwDesiredAccess, 整数型, , 

.DLL命令 ControlService, 逻辑型, "advapi32.dll", "ControlService", 公开, 
    .参数 hService, 整数型, , 
    .参数 dwControl, 整数型, , 
    .参数 lpServiceStatus, 未知类型0x41012C74, , 

.DLL命令 DeleteService, 逻辑型, "advapi32.dll", "DeleteService", 公开, ,
    .参数 hService, 整数型, , 

.DLL命令 CloseServiceHandle, 整数型, "advapi32.dll", "CloseServiceHandle", 公开, ,
    .参数 hSCObject, 整数型, , 

.DLL命令 StartService, 逻辑型, "advapi32.dll", "StartServiceA", 公开, 
    .参数 hService, 整数型, , 
    .参数 dwNumServiceArgs, 整数型, , 
    .参数 lpServiceArgVectors, 整数型, , 

.DLL命令 QueryServiceStatus, 逻辑型, "advapi32.dll", "QueryServiceStatus", 公开, 4：启动　7：暂停　1：停止　0：找不到服务
    .参数 hService, 整数型, , 
    .参数 lpServiceStatus, 未知类型0x41012C74, , 

.DLL命令 QueryServiceStatusEx, 整数型, "ADVAPI32.DLL", "QueryServiceStatusEx", 公开, 
    .参数 hService, 整数型, , 
    .参数 InfoLevel, 整数型, , 
    .参数 lpBuffer, 字节集, , 
    .参数 cbBufSize, 整数型, , 
    .参数 pcbBytesNeeded, 整数型, 传址, 

.DLL命令 ChangeServiceConfig, 逻辑型, "advapi32.dll", "ChangeServiceConfigA", 公开, 更改服务配置
    .参数 hService, 整数型, , 
    .参数 dwServiceType, 整数型, , 
    .参数 dwStartType, 整数型, , 
    .参数 dwErrorControl, 整数型, , 误差控制
    .参数 lpBinaryPathName, 文本型, , 加载顺序组名称
    .参数 lpLoadOrderGroup, 文本型, , 
    .参数 lpdwTagId, 整数型, , 标签标识
    .参数 lpDependencies, 文本型, , 依赖名称阵列
    .参数 lpServiceStartName, 文本型, , 帐户名称
    .参数 lpPassword, 文本型, , 帐户密码
    .参数 lpDisplayName, 文本型, , 显示名称

.DLL命令 CreateService, 整数型, "advapi32.dll", "CreateServiceA", 公开, 服务类
    .参数 hSCManager, 整数型, , 
    .参数 lpServiceName, 文本型, , 
    .参数 lpDisplayName, 文本型, , 
    .参数 dwDesiredAccess, 整数型, , 
    .参数 dwServiceType, 整数型, , 
    .参数 dwStartType, 整数型, , 
    .参数 dwErrorControl, 整数型, , 
    .参数 lpBinaryPathName, 文本型, , 
    .参数 lpLoadOrderGroup, 文本型, , 
    .参数 lpdwTagId, 整数型, , 
    .参数 lpDependencies, 文本型, , 
    .参数 lpServiceStartName, 文本型, , 
    .参数 lpPassword, 文本型, , 

.DLL命令 QueryServiceConfig2, 逻辑型, "Advapi32.dll", "QueryServiceConfig2A", 公开, 
    .参数 hService, 整数型, , SC_HANDLE
    .参数 dwInfoLevel, 整数型, , 
    .参数 lpBuffer, 整数型, , 
    .参数 cbBufSize, 整数型, , 
    .参数 pcbBytesNeeded, 整数型, 传址, 

.DLL命令 UnlockServiceDatabase, 整数型, "advapi32.dll", "UnlockServiceDatabase", 公开, 开锁数据库
    .参数 ScLock, 整数型, , 

.DLL命令 QueryServiceConfig2A_字节, 逻辑型, "Advapi32.dll", "QueryServiceConfig2A", 公开, 
    .参数 hService, 整数型, , SC_HANDLE
    .参数 dwInfoLevel, 整数型, , 
    .参数 lpBuffer, 字节集, 传址, 
    .参数 cbBufSize, 整数型, , 
    .参数 pcbBytesNeeded, 整数型, 传址, 

.DLL命令 ZwQuerySystemInformation, 整数型, "ntdll.dll", "ZwQuerySystemInformation", 公开, _进程隐藏 ntdll.dll
    .参数 SystemInformationClass, 整数型, , 未知类型：SYSTEM_INFORMATION_CLASS。
    .参数 SystemInformation, 整数型, , any
    .参数 SystemInformationLength, 整数型, , 
    .参数 ReturnLength, 整数型, 传址, 

.DLL命令 CreateRemoteThread, 整数型, "kernel32.dll", "CreateRemoteThread", 公开, 在另一进程中建立线索　
    .参数 hProcess, 整数型, , 
    .参数 lpThreadAttributes, 整数型, , 
    .参数 dwStackSize, 整数型, , 
    .参数 lpStartAddress, 整数型, , 
    .参数 lpParameter, 整数型, , 
    .参数 dwCreationFlags, 整数型, , 
    .参数 lpThreadId, 整数型, , 

.DLL命令 GetExitCodeThread, 整数型, "kernel32.dll", "GetExitCodeThread", 公开, _取中止线程退出代码
    .参数 线程句柄, 整数型, , 
    .参数 退出代码, 整数型, 传址, 

.DLL命令 InternetGetConnectedStateExA, 逻辑型, "wininet.dll", "InternetGetConnectedStateExA", 公开, _取网络连接状态
    .参数 标志, 整数型, 传址, lpdwFlags
    .参数 连接名称, 文本型, , lpszConnectionName
    .参数 名称长度, 整数型, , dwNameLen
    .参数 保留参数, 整数型, , dwReserved

.DLL命令 原子递增变量, 整数型, "kernel32.dll", "InterlockedIncrement", 公开, _递增变量值
    .参数 递增变量, 整数型, 传址, 

.DLL命令 原子递减变量, 整数型, "kernel32.dll", "InterlockedDecrement", 公开, _递减变量值
    .参数 递减的一个变量, 整数型, 传址, 

.DLL命令 DragFinish, 整数型, "shell32.dll", "DragFinish", 公开, 释放文件拖放 释放分配用于托动文件的内容
    .参数 hDrop, 整数型, , 

.DLL命令 DragAcceptFiles, 空白型, "shell32.dll", "DragAcceptFiles", 公开, 注册拖放类 登记窗口是否接受托动文件的内容
    .参数 对象句柄, 整数型, , 
    .参数 是否打开, 整数型, , 

.DLL命令 RegCloseKey, 整数型, "advapi32.dll", "RegCloseKey", 公开, _注册表_关闭项 advapi32.dll关闭系统注册表中的一个项（或键）  零（ERROR_SUCCESS）表示成功。其他任何值都代表一个错误代码
    .参数 hKey, 整数型, , 要关闭的项;

.DLL命令 RegCreateKeyA, 整数型, "advapi32.dll", "RegCreateKeyA", 公开, _注册表_创建项 advapi32.dll在指定的项下创建一个新项。如指定的项已经存在，那么函数会打开现有的项  零（ERROR_SUCCESS）表示成功。其他任何值都代表一个错误代码
    .参数 hKey, 整数型, , 要打开项的句柄，或者一个标准项名
    .参数 lpSubKey, 文本型, , 欲创建的新子项。可同时创建多个项，只需用反斜杠将它们分隔开即可。例如level1\level2\newkey
    .参数 phkResult, 整数型, 传址, 指定一个变量，用于装载新子项的句柄;

.DLL命令 RegQueryValueExA, 整数型, "advapi32.dll", "RegQueryValueExA", 公开, _注册表_取值获取一个项的设置值  零（ERROR_SUCCESS）表示成功。其他任何值都代表一个错误代码
    .参数 hKey, 整数型, , 一个已打开项的句柄，或者指定一个标准项名
    .参数 lpValueName, 文本型, , 要获取值的名字
    .参数 lpReserved, 整数型, , 未用，设为零
    .参数 lpType, 整数型, 传址, 用于装载取回数据类型的一个变量
    .参数 lpData, 字节集, 传址, 用于装载指定值的一个缓冲区
    .参数 lpcbData, 整数型, 传址, 用于装载lpData缓冲区长度的一个变量。一旦返回，它会设为实际装载到缓冲区的字节数;

.DLL命令 RegOpenCurrentUser, 整数型, "advapi32.dll", "RegOpenCurrentUser", 公开, 
    .参数 samDesired, 整数型, , 
    .参数 phkResult, 整数型, 传址, 

.DLL命令 RegEnumValueA, 整数型, "advapi32.dll", "RegEnumValueA", 公开, _注册表_枚举值 零（ERROR_SUCCESS）表示成功。其他任何值都代表一个错误代码
    .参数 句柄, 整数型, , 一个已打开项的句柄，或者指定一个标准项名
    .参数 表项索引, 整数型, , 欲获取值的索引。注意第一个值的索引编号为零
    .参数 子键名, 文本型, , 用于装载位于指定索引处值名的一个缓冲区
    .参数 子键长度, 整数型, 传址, 用于装载lpValueName缓冲区长度的一个变量。一旦返回，它会设为实际载入缓冲区的字符数量
    .参数 lpReserved, 整数型, , 未用设为零
    .参数 键值类型, 整数型, 传址, 值的类型，用于装载值的类型代码的变量
    .参数 键值数据, 字节集, 传址, 用于装载值数据的一个缓冲区
    .参数 键值缓寸, 整数型, 传址, 用于装载lpData缓冲区长度的一个变量。一旦返回，它会设为实际载入缓冲区的字符数量

.DLL命令 RegEnumKeyA, 整数型, "advapi32.dll", "RegEnumKeyA", 公开, _注册表_枚举子项
    .参数 hKey, 整数型, , 
    .参数 dwIndex, 整数型, , 
    .参数 lpName, 文本型, 传址, 
    .参数 cbName, 整数型, , 

.DLL命令 RegDeleteKeyA, 整数型, "advapi32.dll", "RegDeleteKeyA", 公开, _注册表_删除项删除现有项下方一个指定的子项  零（ERROR_SUCCESS）表示成功。其他任何值都代表一个错误代码
    .参数 hKey, 整数型, , 一个已打开项的句柄，或者标准项名之一
    .参数 lpSubKey, 文本型, , 要删除项的名字。这个项的所有子项也会删除;

.DLL命令 RegOpenKeyA, 整数型, "advapi32.dll", "RegOpenKeyA", 公开, _注册表_打开项 打开一个现有的注册表项  零（ERROR_SUCCESS）表示成功。其他任何值都代表一个错误代码
    .参数 hKey, 整数型, , 一个已打开项的句柄，或指定一个标准项名
    .参数 lpSubKey, 文本型, , 要打开的项名
    .参数 phkResult, 整数型, 传址, 指定一个变量，用于装载（保存）打开注册表项的一个句柄;

.DLL命令 RegSetValueExA, 整数型, "advapi32.dll", "RegSetValueExA", 公开, _注册表_置值设置指定项的值  零（ERROR_SUCCESS）表示成功。其他任何值都代表一个错误代码
    .参数 hKey, 整数型, , 一个已打开项的句柄，或指定一个标准项名
    .参数 lpValueName, 文本型, , 要设置值的名字
    .参数 Reserved, 整数型, , 未用，设为零
    .参数 dwType, 整数型, , 要设置的数量类型
    .参数 lpData, 字节集, , 包含数据的缓冲区中的第一个字节
    .参数 cbData, 整数型, , lpData缓冲区的长度;

.DLL命令 RegSetValueExA_数值, 整数型, "advapi32.dll", "RegSetValueExA", 公开, _注册表_置值_文本型 设置指定项的值  零（ERROR_SUCCESS）表示成功。其他任何值都代表一个错误代码
    .参数 hKey, 整数型, , 一个已打开项的句柄，或指定一个标准项名
    .参数 lpValueName, 文本型, , 要设置值的名字
    .参数 Reserved, 整数型, , 未用，设为零
    .参数 dwType, 整数型, , 要设置的数量类型
    .参数 lpData, 字节集, , 包含数据的缓冲区中的第一个字节
    .参数 cbData, 整数型, , lpData缓冲区的长度;

.DLL命令 RasDialA, 整数型, "rasapi32.dll", "RasDialA", 公开, _ADSL拨号
    .参数 lprasdialextensions, 整数型, , 拔号参数
    .参数 lpszPhonebook, 整数型, , 电话本名称,0
    .参数 lprasdialparamsa, 未知类型0x41012C75, , 拔号参数
    .参数 dwNotifierType, 整数型, , 消息通知方式
    .参数 lpvNotifier, 整数型, , 消息处理回调子程序
    .参数 lphrasconn, 整数型, 传址, 返回的成功连接的连接句柄

.DLL命令 RasHangUpA, 整数型, "rasapi32.dll", "RasHangUpA", 公开, RasApi32.DLL挂断当前拔号连接 0表示成功
    .参数 hRasConn, 整数型, , 连接句柄

.DLL命令 RasGetEntryDialParams, 整数型, "rasapi32.dll", "RasGetEntryDialParamsA", 公开, 
    .参数 lpszPhoneBook, 文本型, 传址, 
    .参数 lpDialParams, 未知类型0x41012C75, 传址, 未知类型：TRasDialParams。
    .参数 lpfPassword, 逻辑型, 传址, 

.DLL命令 GlobalSize_取连接信息用结构, 整数型, "kernel32.dll", "GlobalSize", 公开, kernel32.dll取结构尺寸
    .参数 结构, 未知类型0x41012C76, 传址, 

.DLL命令 GetPrivateProfileInt, 整数型, "kernel32.dll", "GetPrivateProfileIntA", 公开, 读配置项数值
    .参数 小节名, 字节集, , 
    .参数 项目名, 文本型, , 
    .参数 默认返回值, 整数型, , 
    .参数 文件名, 文本型, ,   

.DLL命令 ConvertSidToStringSid, 整数型, "ADVAPI32.DLL", "ConvertSidToStringSidW", 公开, 　
    .参数 Sid, 字节集, 传址, 
    .参数 StringSid, 整数型, 传址, 

.DLL命令 IsValidSid, 整数型, "advapi32.dll", "IsValidSid", 公开, 使SID有效　
    .参数 pSid, 整数型, , 

.DLL命令 LookupAccountName, 整数型, "advapi32.dll", "LookupAccountNameA", 公开, 把帐户名转为SID　
    .参数 lpSystemName, 文本型, 传址, 
    .参数 lpAccountName, 文本型, , 
    .参数 Sid, 字节集, 传址, 
    .参数 cbSid, 整数型, 传址, 
    .参数 ReferencedDomainName, 文本型, , 
    .参数 cbReferencedDomainName, 整数型, 传址, 
    .参数 peUse, 整数型, 传址, 

.DLL命令 LsaOpenPolicy, 整数型, "ADVAPI32.DLL", "LsaOpenPolicy", 公开, 
    .参数 SystemName, 整数型, , 未知类型：PLSA_UNICODE_STRING。
    .参数 ObjectAttributes, 未知类型0x41012C77, , 未知类型：PLSA_OBJECT_ATTRIBUTES。
    .参数 DesiredAccess, 整数型, , 
    .参数 PolicyHandle, 整数型, 传址, 未知类型：PLongWord。

.DLL命令 RasEnumEntrie, 整数型, "rasapi32.dll", "RasEnumEntriesA", 公开, 
    .参数 reserved, 整数型, , 
    .参数 lpszPhoneBook, 整数型, , 
    .参数 entrynamesArray, 未知类型0x41012C76, 传址, 未知类型：LPRasEntryNameA。
    .参数 lpcb, 整数型, 传址, 
    .参数 lpcEntries, 整数型, 传址, 

.DLL命令 RasEnumEntries, 整数型, "rasapi32.dll", "RasEnumEntriesA", 公开, rasapi32.dll 取连接信息结构,连接名称,数量等等
    .参数 lpStrNull, 整数型, , 保留字段,必须为NIL
    .参数 lpszphonebook, 整数型, , 电话本名称,在Win9X下无作用
    .参数 lprasetryname, 未知类型0x41012C76, 传址 数组, RASENTRYNAME类型数组的指针
    .参数 lpcb, 整数型, 传址, 接收拨号连接名称的缓冲区的大小
    .参数 lpcentries, 整数型, 传址, 实际获得的拨号连接名称的数目

.DLL命令 InternetGetConnectedStateEx, 整数型, "wininet.dll", "InternetGetConnectedStateEx", 公开, _取连接状态 wininet.dll
    .参数 lpdwFlags, 整数型, 传址, 
    .参数 lpszConnectionName, 文本型, 传址, 
    .参数 dwNameLen, 整数型, , 
    .参数 dwReserved, 整数型, , 

.DLL命令 RasSetEntryPropertiesA, 整数型, "rasapi32.dll", "RasSetEntryPropertiesA", 公开, _创建新拨号连接 rasapi32.dll 0=建立成功,其他为失败
    .参数 lpszPhonebook, 整数型, , 电话本名称,0
    .参数 lpszEntry, 文本型, , 连接名称
    .参数 lpRasEntry, 未知类型0x41012C78, , 
    .参数 dwEntryInfoSize, 整数型, , 
    .参数 lpbDeviceInfo, 整数型, , 
    .参数 wDeviceInfoSize, 整数型, , 

.DLL命令 RasSetCredentialsA, 整数型, "rasapi32.dll", "RasSetCredentialsA", 公开, _设置拨号连接 rasapi32.dll
    .参数 lpszPhonebook, 整数型, , 电话本名称,0
    .参数 lpszEntry, 文本型, , 连接名称
    .参数 lpCredentials, 未知类型0x41012C79, , 
    .参数 fClearCredentials, 整数型, , 

.DLL命令 GetKeyState, 逻辑型, "user32.dll", "GetKeyState", 公开, _取键盘状态 针对已处理过的按键，在最近一次输入信息时，判断指定虚拟键的状态  如开关键打开，则位0设为1（开关键包括CapsLock， ;    NumLock，ScrollLock）；如某个键当时正处于按下状态，则位15为1；如已经抬起，则为0
    .参数 键代码, 整数型, , 欲测试的虚拟键键码。对字母、数字字符（A-Z、a-z、0-9），用它们实际的ASCII值;

.DLL命令 GetOpenFileNameA, 逻辑型, "Comdlg32.dll", "GetOpenFileNameA", 公开, _打开文件对话框
    .参数 结构, OPENFILENAME, , 

.DLL命令 GetSaveFileNameA, 逻辑型, "Comdlg32.dll", "GetSaveFileNameA", 公开, _另存文件对话框
    .参数 结构, OPENFILENAME, , 

.DLL命令 ExtractIconA, 整数型, "shell32.dll", "ExtractIconA", 公开, _图标取数量
    .参数 实例句柄, 整数型, , 可为0
    .参数 程序的全名, 文本型, , 
    .参数 图标的索引, 整数型, , 欲获取的图标的索引。如果为-1，表示取得文件中的图标总数

.DLL命令 SHAutoComplete, 空白型, "Shlwapi.dll", "SHAutoComplete", 公开, 
    .参数 编辑框句柄, 整数型, , 
    .参数 表示IE历史, 整数型, , 

.DLL命令 GetShortPathNameA, 整数型, "kernel32.dll", "GetShortPathNameA", 公开, 取短文件名
    .参数 lpszLongPath, 文本型, 传址, 
    .参数 lpszShortPath, 文本型, 传址, 
    .参数 cchBuffer, 整数型, , 

.DLL命令 GetLongPathNameA, 整数型, "kernel32.dll", "GetLongPathNameA", 公开, 取长文件名
    .参数 lpszShortPath, 文本型, 传址, 
    .参数 lpszLongPath, 文本型, 传址, 
    .参数 cchBuffer, 整数型, , 

.DLL命令 GetAdaptersInfo, 整数型, "IPHlpApi.dll", "GetAdaptersInfo", 公开, 
    .参数 IpAdapterInfo, 整数型, , 
    .参数 pOutBufLen, 整数型, 传址, 

.DLL命令 CopyMemory_ip_adapter_info, 整数型, "kernel32.dll", "RtlMoveMemory", 公开, 
    .参数 Destination, 未知类型0x41012C7A, , 
    .参数 Source, 整数型, , 
    .参数 Length, 整数型, , 

.DLL命令 CopyMemory_ias, 空白型, "kernel32.dll", "RtlMoveMemory", 公开, 
    .参数 Destination, 未知类型0x41012C5A, 传址, 
    .参数 Source, 未知类型0x41012C5A, , 
    .参数 Length, 整数型, , 

.DLL命令 ImageList_Read, 整数型, "comctl32.dll", "ImageList_Read", 公开, 成功返回图片组句柄
    .参数 pstm, 整数型, , 

.DLL命令 ImageList_Write, 逻辑型, "comctl32.dll", "ImageList_Write", 公开, 成功返回真,失败返回假
    .参数 图片组句柄, 整数型, , 图片组句柄
    .参数 pstm, 整数型, , 

.DLL命令 ImageList_Replace, 整数型, "comctl32.dll", "ImageList_Replace", 公开, 
    .参数 图片组句柄, 整数型, , 
    .参数 i, 整数型, , 
    .参数 hbmImage, 整数型, , 
    .参数 hbmMask, 整数型, , 

.DLL命令 ImageList_ReplaceIcon, 整数型, "comctl32.dll", "ImageList_ReplaceIcon", 公开, 
    .参数 图片组句柄, 整数型, , ImageList_Create创建成功后的返回值
    .参数 位置, 整数型, , 索引从0开始
    .参数 图标句柄, 整数型, , 

.DLL命令 ImageList_AddIcon, 整数型, "comctl32.dll", "ImageList_AddIcon", 公开, 添加图标到图片组
    .参数 图片组句柄, 整数型, , 
    .参数 ico句柄, 整数型, , 

.DLL命令 ImageList_Add, 整数型, "comctl32.dll", "ImageList_Add", 公开, 
    .参数 图标列表句柄, 整数型, , 
    .参数 位图句柄, 整数型, , 
    .参数 掩码位位图句柄, 整数型, , 

.DLL命令 ImageList_SetBkColor, 逻辑型, "comctl32.dll", "ImageList_SetBkColor", 公开, 设置图片组背景颜色
    .参数 图片组句柄, 整数型, , 
    .参数 欲设置的颜色, 整数型, , 其它选项可使用 CLR_开头的常量

.DLL命令 ImageList_GetBkColor, 整数型, "comctl32.dll", "ImageList_GetBkColor", 公开, 返回图片组背景颜色
    .参数 图片组句柄, 整数型, , 

.DLL命令 ImageList_SetIconSize, 逻辑型, "comctl32.dll", "ImageList_SetIconSize", 公开, 设置图片组图标大小
    .参数 图片组句柄, 整数型, , 图片组句柄,ImageList_Create创建成功后的返回值
    .参数 宽度, 整数型, 传址, 
    .参数 高度, 整数型, 传址, 

.DLL命令 ImageList_SetImageCount, 逻辑型, "comctl32.dll", "ImageList_SetImageCount", 公开, 设置图片组图片数
    .参数 图片组句柄, 整数型, , ImageList_Create创建成功后的返回值
    .参数 欲设置的图片数, 整数型, , 

.DLL命令 ImageList_GetImageCount, 整数型, "comctl32.dll", "ImageList_GetImageCount", 公开, 取图片组图片数
    .参数 图片组句柄, 整数型, , 图片组句柄,ImageList_Create创建成功后的返回值

.DLL命令 ImageList_GetIconSize, 逻辑型, "comctl32.dll", "ImageList_GetIconSize", 公开, 取图片组图标大小
    .参数 图片组句柄, 整数型, , ImageList_Create创建成功后的返回值
    .参数 宽度, 整数型, 传址, 
    .参数 高度, 整数型, 传址, 

.DLL命令 ImageList_Remove, 逻辑型, "comctl32.dll", "ImageList_Remove", 公开, 删除指定图片组图片
    .参数 图片组句柄, 整数型, , 图片组句柄,ImageList_Create创建成功后的返回值
    .参数 位置, 整数型, , 位置0为第一个,如果本参数设置为-1表示删除图片组所有图标

.DLL命令 ImageList_Create, 整数型, "comctl32.dll", "ImageList_Create", 公开, 创建图片组,返回图片组句柄
    .参数 宽度, 整数型, , 
    .参数 高度, 整数型, , 
    .参数 位深, 整数型, , 
    .参数 初始数量, 整数型, , 
    .参数 是否手动销毁, 逻辑型, , 

.DLL命令 ImageList_Destroy, 整数型, "comctl32.dll", "ImageList_Destroy", 公开, 销毁图片组
    .参数 图片组句柄, 整数型, , ImageList_Create创建成功后的返回值

.DLL命令 SetWindowLongA, 整数型, "user32.dll", "SetWindowLongA", 公开, 在窗口结构中为指定的窗口设置信息  指定数据的前一个值
    .参数 hwnd, 整数型, , 句柄
    .参数 nIndex, 整数型, , -16=样式，-20=扩展样式
    .参数 dwNewLong, 整数型, , 新样式

.DLL命令 SetWindowLongW, 整数型, "user32.dll", "SetWindowLongW", 公开, 
    .参数 hWnd, 整数型, , 
    .参数 nIndex, 整数型, , 
    .参数 dwNewLong, 整数型, , 

.DLL命令 GetCommandLineA, 文本型, "kernel32.dll", "GetCommandLineA", 公开, 取命令行

.DLL命令 LsaRetrievePrivateData, 整数型, "ADVAPI32.DLL", "LsaRetrievePrivateData", 公开, 
    .参数 LSA_HANDLE, 整数型, , 
    .参数 KeyName, 未知类型0x41012C7B, , 未知类型：PLSA_UNICODE_STRING。
    .参数 PrivateData, 整数型, 传址, 未知类型：PLSA_UNICODE_STRING。

.DLL命令 GetVersionEx, 逻辑型, "kernel32.dll", "GetVersionExA", 公开, 在一个OSVERSIONINFO结构中载入与平台和操作系统有关的版本信息  非零表示成功，零表示失败
    .参数 版本, OSVERSIONINFOEX, , OSVERSIONINFO，用于装载版本信息的结构。在正式调用函数之前，必须先将这个结构的dwOSVersionInfoSize字段设为结构的大小（148）;

.DLL命令 GetVersion, 整数型, "kernel32.dll", "GetVersion", 公开, ,

.DLL命令 GlobalSize_RASENTRY, 整数型, "kernel32.dll", "GlobalSize", 公开, 取结构尺寸
    .参数 结构, 未知类型0x41012C7C, 传址, 

.DLL命令 IsBadStringPtrA, 整数型, "kernel32.dll", "IsBadStringPtrA", 公开, 指针是否有效,无否返回1
    .参数 指针, 整数型, , 
    .参数 ucchMax, 整数型, , 指针长度

.DLL命令 GetLastError, 整数型, "kernel32.dll", "GetLastError", 公开, 取错误信息

.DLL命令 QueryServiceConfig_字节, 整数型, "advapi32.dll", "QueryServiceConfigA", 公开, 函数检索指定服务的配置参数。使用QueryServiceConfig2功能，可选的配置参数都是可用
    .参数 hService, 整数型, , 
    .参数 lpServiceConfig, 字节集, 传址, 
    .参数 cbBufSize, 整数型, , 
    .参数 pcbBytesNeeded, 整数型, 传址, 

.DLL命令 QueryServiceConfig, 逻辑型, "advapi32.dll", "QueryServiceConfigA", 公开, 函数检索指定服务的配置参数。使用QueryServiceConfig2功能，可选的配置参数都是可用
    .参数 hService, 整数型, , 
    .参数 lpServiceConfig, 整数型, , 
    .参数 cbBufSize, 整数型, , 
    .参数 pcbBytesNeeded, 整数型, 传址, 

.DLL命令 GetServiceKeyName, 逻辑型, "advapi32.dll", "GetServiceKeyNameA", 公开, 通过显示名称取服务名称
    .参数 hSCManager, 整数型, , 
    .参数 lpDisplayName, 文本型, , 
    .参数 lpServiceName, 文本型, , 
    .参数 lpcchBuffer, 整数型, 传址, 

.DLL命令 GetServiceDisplayName, 逻辑型, "advapi32.dll", "GetServiceDisplayNameA", 公开, 通过服务名称取显示名称
    .参数 hSCManager, 整数型, , 
    .参数 lpServiceName, 文本型, , 
    .参数 lpDisplayName, 文本型, , 
    .参数 lpcchBuffer, 整数型, 传址, 

.DLL命令 LockServiceDatabase, 整数型, "advapi32.dll", "LockServiceDatabase", 公开, 
    .参数 hSCManager, 整数型, , 

.DLL命令 ChangeServiceConfig2A, 逻辑型, "ADVAPI32.DLL", "ChangeServiceConfig2A", 公开, 
    .参数 hService, 整数型, , 
    .参数 dwInfoLevel, 整数型, , 
    .参数 lpInfo, 整数型, 传址, 

.DLL命令 StartServiceCtrlDispatcher, 整数型, "advapi32.dll", "StartServiceCtrlDispatcherA", 公开, 
    .参数 SERVICE_TABLE, 未知类型0x41012C7D, 数组, 

.DLL命令 RegisterServiceCtrlHandler, 整数型, "advapi32.dll", "RegisterServiceCtrlHandlerA", 公开, 
    .参数 lpServiceName, 文本型, , 
    .参数 lpHandlerProc, 整数型, , 

.DLL命令 SetServiceStatus, 整数型, "advapi32.dll", "SetServiceStatus", 公开, 
    .参数 hServiceStatus, 整数型, , 
    .参数 lpServiceStatus, 未知类型0x41012C74, , 

.DLL命令 GdipLoadImageFromStream, 整数型, "GdiPlus.dll", "GdipLoadImageFromStream", 公开, 
    .参数 stream, 整数型, , 
    .参数 image, 整数型, 传址, 

.DLL命令 GdipGetImageDimension, 整数型, "GdiPlus.dll", "GdipGetImageDimension", 公开, 
    .参数 image, 整数型, , 
    .参数 width, 小数型, 传址, 
    .参数 height, 小数型, 传址, 

.DLL命令 GdipCreateFromHDC, 整数型, "GdiPlus.dll", "GdipCreateFromHDC", 公开, 
    .参数 hdc, 整数型, , 
    .参数 graphics, 整数型, 传址, 

.DLL命令 GdipDrawImageRect, 整数型, "GdiPlus.dll", "GdipDrawImageRect", 公开, 
    .参数 graphics, 整数型, , 
    .参数 image, 整数型, , 
    .参数 x, 小数型, , 
    .参数 y, 小数型, , 
    .参数 width, 小数型, , 
    .参数 height, 小数型, , 

.DLL命令 GdipGetImageThumbnail, 整数型, "gdiplus.dll", "GdipGetImageThumbnail", 公开, 
    .参数 Image, 整数型, , 
    .参数 thumbWidth, 整数型, , 
    .参数 thumbHeight, 整数型, , 
    .参数 thumbImage, 整数型, 传址, 
    .参数 callback, 整数型, , 
    .参数 callbackData, 整数型, , 

.DLL命令 GdipDisposeImage, 整数型, "gdiplus.dll", "GdipDisposeImage", 公开, 
    .参数 image, 整数型, , 

.DLL命令 GdipDeleteGraphics, 整数型, "GdiPlus.dll", "GdipDeleteGraphics", 公开, 
    .参数 graphics, 整数型, , 

.DLL命令 UpdateLayeredWindow, 整数型, "user32.dll", "UpdateLayeredWindow", 公开, 
    .参数 hWnd, 整数型, , 
    .参数 hdcDst, 整数型, , 
    .参数 pptDst, 整数型, , 
    .参数 psize, 未知类型0x41012C7E, , 
    .参数 hdcSrc, 整数型, , 
    .参数 pptSrc, 精易_坐标, , 
    .参数 crKey, 整数型, , 
    .参数 pblend, 未知类型0x41012C7F, , 
    .参数 dwFlags, 整数型, , 

.DLL命令 InitCompression, 整数型, "gzip.dll", "InitCompression", 公开, 

.DLL命令 CreateCompression, 整数型, "gzip.dll", "CreateCompression", 公开, 
    .参数 context, 整数型, 传址, 
    .参数 flags, 整数型, , 

.DLL命令 Compress, 整数型, "gzip.dll", "Compress", 公开, 压缩
    .参数 context, 整数型, , 
    .参数 inBytes, 字节集, , 
    .参数 input_size, 整数型, , 
    .参数 outBytes, 字节集, , 
    .参数 output_size, 整数型, , 
    .参数 input_used, 整数型, 传址, 
    .参数 output_used, 整数型, 传址, 
    .参数 compressionLevel, 整数型, , 

.DLL命令 DestroyCompression, 整数型, "gzip.dll", "DestroyCompression", 公开, 
    .参数 context, 整数型, , 

.DLL命令 InitDecompression, 整数型, "gzip.dll", "InitDecompression", 公开, gzip.dll 请自行到这里来下载http://pan.baidu.com/share/link?shareid=222122&uk=2013335237

.DLL命令 CreateDecompression, 整数型, "gzip.dll", "CreateDecompression", 公开, 
    .参数 context, 整数型, 传址, 
    .参数 flags, 整数型, , 

.DLL命令 DestroyDecompression, 空白型, "gzip.dll", "DestroyDecompression", 公开, 
    .参数 context, 整数型, , 

.DLL命令 ShellExecuteEx, 整数型, "shell32.dll", "ShellExecuteEx", 公开, 　
    .参数 lpExecInfo, 未知类型0x41012C66, , 

.DLL命令 RegOpenKeyExA, 整数型, "advapi32.dll", "RegOpenKeyExA", 公开, 
    .参数 hKey, 整数型, , 
    .参数 lpSubKey, 文本型, , 
    .参数 ulOptions, 整数型, , 
    .参数 samDesired, 整数型, , 
    .参数 phkResult, 整数型, 传址, 

.DLL命令 RegCreateKeyExA, 整数型, "advapi32.dll", "RegCreateKeyExA", 公开, 
    .参数 hKey, 整数型, , 
    .参数 lpSubKey, 文本型, , 
    .参数 Reserved, 整数型, , 
    .参数 lpClass, 整数型, , 
    .参数 dwOptions, 整数型, , 
    .参数 samDesired, 整数型, , 
    .参数 lpSecurityAttributes, 整数型, , 
    .参数 phkResult, 整数型, 传址, 
    .参数 lpdwDisposition, 整数型, 传址, 

.DLL命令 DrawTextA, 整数型, "user32.dll", "DrawTextA", 公开, 将文本描绘到指定的矩形中　描绘文字的高度
    .参数 HDC, 整数型, , 欲在其中显示文字的一个设备场景的句柄
    .参数 String, 文本型, , 欲描绘的文本字串
    .参数 StringCount, 整数型, , 欲描绘的字符数量。如果要描绘整个字串（直到空中止符），则可将这个参数设为-1
    .参数 rect, 精易_矩形, , RECT，指定用于绘图的一个格式化矩形（采用逻辑坐标）
    .参数 format, 整数型, , 一个标志位数组，决定了以何种形式执行绘图。参考下面总结的常数类型列表标志常数说明DT_BOTTOM必须同时指定DT_SINGLE。指示文本对齐格式化矩形的底边DT_CALCRECT象下面这样计算格式化矩形：多行绘图时矩形的底边根据需要进行延展，以便容下所有文字；单行绘图时，延展矩形的右侧。不描绘文字。由lpRect参数指定的矩形会载入计算出来的值DT_CENTER文本垂直居中DT_EXPANDTABS描绘文字的时候，对制表站进行扩展。默认的制表站间距是8个字符。但是，可用DT_TABSTOP标志改变这项设定DT_EXTERNALLEADING计算文本行高度的时候，使用当前字体的外部间距属性（the external leading attribute）DT_LEFT文本左对齐DT_NOCLIP描绘文字时不剪切到指定的矩形DT_NOPREFIX通常，函数认为 & 字符表示应为下一个字符加上下划线。该标志禁止这种行为DT_RIGHT文本右对齐DT_SINGLELINE只画单行DT_TABSTOP指定新的制表站间距，采用这个整数的高8位DT_TOP必须同时指定DT_SINGLE。指示文本对齐格式化矩形的顶部DT_VCENTER必须同时指定DT_SINGLE。指示文本对齐格式化矩形的中部DT_WORDBREAK进行自动换行。如用SetTextAlign函数设置了TA_UPDATECP标志，这里的设置则无效;

.DLL命令 FindWindowExA, 整数型, "user32.dll", "FindWindowExA", 公开, 取子窗口句柄
    .参数 hWndParent, 整数型, , 父窗口要搜索其子窗口的句柄
    .参数 hWndChildAfter, 整数型, , 子窗口的句柄
    .参数 lpszClass, 整数型, , 窗口类名
    .参数 lpszWindow, 整数型, , 窗口名称

.DLL命令 capGetDriverDescriptionA, 逻辑型, "avicap32.dll", "capGetDriverDescriptionA", 公开, 
    .参数 dwDriverIndex, 整数型, , 
    .参数 lpszName, 文本型, , 
    .参数 cbName, 整数型, , 
    .参数 lpszVer, 文本型, , 
    .参数 cbVer, 整数型, , 

.DLL命令 AddFontResourceA, 整数型, "gdi32.dll", "AddFontResourceA", 公开, 在Windows系统中添加一种字体资源
    .参数 LPCSTR, 文本型, , 

.DLL命令 RemoveFontResourceA, 逻辑型, "gdi32.dll", "RemoveFontResourceA", 公开, 通常情况下，只允许卸载由“AddFontResourceA()”安装的字体资源
    .参数 LPCSTR, 文本型, , 

.DLL命令 RtlMoveMemory_字节集2, 整数型, "kernel32.dll", "RtlMoveMemory", 公开, RtlMoveMemory
    .参数 目标数据地址, 字节集, , lpvDest
    .参数 源数据, 字节集, , lpvSource
    .参数 尺寸, 整数型, , cbCopy

.DLL命令 PathFileExistsA, 整数型, "shlwapi.dll", "PathFileExistsA", 公开, 
    .参数 pszPath, 文本型, , 

.DLL命令 CreateProcessA, 整数型, "kernel32.dll", "CreateProcessA", 公开, 
    .参数 lpApplicationName, 文本型, , 
    .参数 lpCommandLine, 文本型, , 
    .参数 lpProcessAttributes, 整数型, , 
    .参数 lpThreadAttributes, 整数型, , 
    .参数 bInheritHandles, 整数型, , 
    .参数 dwCreationFlags, 整数型, , 
    .参数 lpEnvironment, 整数型, , 
    .参数 lpCurrentDriectory, 文本型, , 
    .参数 lpStartupInfo, StartupInfo, , 
    .参数 lpProcessInformation, 精易_进程结构, , 

.DLL命令 StrToIntEx, 整数型, "shlwapi.dll", "StrToIntExA", 公开, 
    .参数 pszString, 文本型, , 
    .参数 dwFlags, 整数型, , 
    .参数 piRet, 整数型, 传址, 

.DLL命令 lstrcmp, 整数型, "kernel32.dll", "lstrcmpA", 公开, 比较两个字符串
    .参数 lpString1, 文本型, , 
    .参数 lpString2, 文本型, , 

.DLL命令 Sleep, 整数型, "kernel32.dll", "Sleep", 公开, 延时
    .参数 毫秒, 整数型, , 

.DLL命令 PeekNamedPipe_字节集, 逻辑型, "kernel32.dll", "PeekNamedPipe", 公开, 
    .参数 hNamedPipe, 整数型, , 
    .参数 lpBuffer, 字节集, , 
    .参数 nBufferSize, 整数型, , 
    .参数 lpBytesRead, 整数型, 传址, 
    .参数 lpTotalBytesAvail, 整数型, 传址, 
    .参数 lpBytesLeftThisMessage, 整数型, 传址, 

.DLL命令 CreateProcess_运行, 逻辑型, "kernel32.dll", "CreateProcessA", 公开, 
    .参数 lpApplicationName, 整数型, , 
    .参数 lpCommandLine, 文本型, , 
    .参数 lpProcessAttributes, 整数型, , 
    .参数 lpThreadAttributes, 整数型, , 
    .参数 bInheritHandles, 逻辑型, , 
    .参数 dwCreationFlags, 整数型, , 
    .参数 lpEnvironment, 整数型, , 
    .参数 lpCurrentDirectory, 整数型, , 
    .参数 lpStartupInfo, 未知类型0x41012C80, , 
    .参数 lpProcessInformation, 精易_进程结构, 传址, 

.DLL命令 RtlAdjustPrivilege32, 整数型, "ntdll.dll", "RtlAdjustPrivilege", 公开, 提升进程权限
    .参数 整数, 整数型, , 
    .参数 整数, 逻辑型, , 
    .参数 整数, 整数型, , 
    .参数 整数, 整数型, 传址, 

.DLL命令 SHCreateFromPath, 整数型, "Shell32.dll", "ILCreateFromPathA", 公开, 文件_定位
    .参数 lpFileName, 文本型, , 

.DLL命令 SHFree, 空白型, "Shell32.dll", "ILFree", 公开, 文件_定位
    .参数 lngPidl, 整数型, , 

.DLL命令 SHOpenFolderAndSelectItems, 整数型, "Shell32.dll", "SHOpenFolderAndSelectItems", 公开, 文件_定位
    .参数 pidlfolder, 整数型, , 
    .参数 cidl, 整数型, , 
    .参数 apidl, 整数型, , 
    .参数 dwFlags, 整数型, , 

.DLL命令 GetFileInformationByHandle, 逻辑型, "kernel32.dll", "GetFileInformationByHandle", 公开, 文件_句柄取路径
    .参数 hFile, 整数型, , 
    .参数 lpFileInformation, 未知类型0x41012C81, , 

.DLL命令 GetVolumeInformation, 逻辑型, "kernel32.dll", "GetVolumeInformationA", 公开, 文件_句柄取路径
    .参数 lpRootPathName, 文本型, , 
    .参数 lpVolumeNameBuffer, 文本型, , 
    .参数 nVolumeNameSize, 整数型, , 
    .参数 lpVolumeSerialNumber, 整数型, 传址, 
    .参数 lpMaximumComponentLength, 整数型, 传址, 
    .参数 lpFileSystemFlags, 整数型, 传址, 
    .参数 lpFileSystemNameBuffer, 文本型, 传址, 
    .参数 nFileSystemNameSize, 整数型, , 

.DLL命令 ZwQueryInformationFile, 整数型, "ntdll.dll", "ZwQueryInformationFile", 公开, 文件_句柄取路径
    .参数 FileHandle, 整数型, , 
    .参数 IoStatusBlock, 未知类型0x41012C82, , 
    .参数 FileInformation, 整数型, , 
    .参数 Length, 整数型, , 
    .参数 FileInformationClass, 整数型, , 

.DLL命令 GetFileAttributes, 整数型, "kernel32.dll", "GetFileAttributesA", 公开, 文件_取属性
    .参数 文件名, 文本型, , 

.DLL命令 EnumProcesses, 逻辑型, "psapi.dll", "EnumProcesses", 公开, 进程_ID是否有效
    .参数 进程标识符, 整数型, 传址 数组, lpidProcess
    .参数 结构长度, 整数型, , cb
    .参数 结构需要长度, 整数型, 传址, cbNeeded

.DLL命令 GetNetworkParams, 整数型, "IPHLPAPI.DLL", "GetNetworkParams", 公开, 系统_取网络主机名
    .参数 pFixedInfo, 整数型, , 
    .参数 pOutBufLen, 整数型, 传址, 

.DLL命令 CopyMemory_Bytes2int, 整数型, "kernel32.dll", "RtlMoveMemory", 公开, 内存拷贝
    .参数 Destination, 整数型, , 
    .参数 字节集指针, 字节集, , 
    .参数 数据长度, 整数型, , 

.DLL命令 WinHelpA, 整数型, "user32.dll", "WinHelpA", 公开, 系统_调用帮助
    .参数 窗口句柄, 整数型, , hwnd
    .参数 帮助文件, 文本型, , lpHelpFile
    .参数 命令, 整数型, , wCommand
    .参数 数据, 整数型, , dwData

.DLL命令 GetMessageA, 逻辑型, "user32.dll", "GetMessageA", 公开, 
    .参数 lpMsg, 未知类型0x41012C83, , 
    .参数 hwnd, 整数型, , 
    .参数 wMsgFilterMin, 整数型, , 
    .参数 wMsgFilterMax, 整数型, , 

.DLL命令 GetEnvironmentVariable, 整数型, "kernel32.dll", "GetEnvironmentVariableA", 公开, 类_环境存取->读环境变量
    .参数 lpName, 文本型, , 
    .参数 lpBuffer, 文本型, , 
    .参数 nSize, 整数型, , 

.DLL命令 SetEnvironmentVariable, 逻辑型, "kernel32.dll", "SetEnvironmentVariableA", 公开, 类_环境存取->写环境变量
    .参数 lpName, 文本型, , 
    .参数 lpValue, 文本型, , 

.DLL命令 CopyMemory_objcet2int, 整数型, "kernel32.dll", "RtlMoveMemory", 公开, 
    .参数 Destination, 整数型, 传址, 
    .参数 Source, 对象, , 
    .参数 Length, 整数型, , 

.DLL命令 lstrcat_int2variant, 整数型, "kernel32.dll", "lstrcatA", 公开, 
    .参数 lpString1, 变体型, 传址, 
    .参数 lpString2, 整数型, 传址, 

.DLL命令 GetCurrentDirectory, 整数型, "kernel32.dll", "GetCurrentDirectoryA", 公开, 
    .参数 nBufferLength, 整数型, , 
    .参数 lpBuffer, 文本型, , 

.DLL命令 WinHttpCrackUrl, 逻辑型, "Winhttp.dll", "WinHttpCrackUrl", 公开, 
    .参数 pwszUrl, 字节集, , 
    .参数 dwUrlLength, 整数型, , 
    .参数 dwFlags, 整数型, , 
    .参数 lpUrlComponents, URL_COMPONENTS, , 

.DLL命令 MessageBoxTimeoutA, 整数型, "user32.dll", "MessageBoxTimeoutA", 公开, 系统_信息框Ex
    .参数 hwnd, 整数型, , 父窗口句柄
    .参数 lpText, 文本型, , 文本
    .参数 lpCaption, 文本型, , 标题
    .参数 wtype, 整数型, , 按钮类型
    .参数 wlange, 整数型, , 
    .参数 dwtimeout, 整数型, , 毫秒

.DLL命令 CreateTimerQueueTimer, 逻辑型, "kernel32.dll", "CreateTimerQueueTimer", 公开, 控件_时钟
    .参数 phNewTimer, 整数型, 传址, 
    .参数 TimerQueue, 整数型, , 
    .参数 Callback, 整数型, , 时钟回调
    .参数 Parameter, 整数型, , 传递给时钟回调的参数
    .参数 DueTime, 整数型, , 首次触发时钟的延时
    .参数 Period, 整数型, , 时钟周期
    .参数 Flags, 整数型, , 

.DLL命令 CreateTimerQueue, 整数型, "kernel32.dll", "CreateTimerQueue", 公开, 控件_时钟

.DLL命令 DeleteTimerQueueTimer, 逻辑型, "kernel32.dll", "DeleteTimerQueueTimer", 公开, 控件_时钟
    .参数 TimerQueue, 整数型, , 
    .参数 Timer, 整数型, , 
    .参数 CompletionEvent, 整数型, , 

.DLL命令 DeleteTimerQueue, 逻辑型, "kernel32.dll", "DeleteTimerQueue", 公开, 控件_时钟
    .参数 TimerQueue, 整数型, , 

.DLL命令 ChangeTimerQueueTimer, 逻辑型, "kernel32.dll", "ChangeTimerQueueTimer", 公开, 控件_时钟
    .参数 TimerQueue, 整数型, , 
    .参数 Timer, 整数型, , 
    .参数 DueTime, 整数型, , 
    .参数 Period, 整数型, , 

.DLL命令 PathIsURL, 逻辑型, "shlwapi.dll", "PathIsURLA", 公开, 
    .参数 pszPath, 文本型, , 

.DLL命令 Shell_NotifyIcon, 逻辑型, "shell32.dll", "Shell_NotifyIconA", 公开, 
    .参数 dwMessage, 整数型, , 
    .参数 lpData, 未知类型0x41012C84, , 

.DLL命令 GetTopWindow, 整数型, "user32.dll", "GetTopWindow", 公开, 
    .参数 hwnd, 整数型, , 

.DLL命令 GetNextWindow, 整数型, "user32.dll", "GetWindow", 公开, 
    .参数 hwnd, 整数型, , 
    .参数 wFlag, 整数型, , 

.DLL命令 GetWindowTextLengthA, 整数型, "user32.dll", "GetWindowTextLengthA", 公开, 
    .参数 hwnd, 整数型, , 

.DLL命令 GetWindowTextLengthW, 整数型, "user32.dll", "GetWindowTextLengthW", 公开, 
    .参数 hwnd, 整数型, , 

.DLL命令 AttachThreadInput, 逻辑型, "user32.dll", "AttachThreadInput", 公开, 
    .参数 idAttach, 整数型, , 
    .参数 idAttachTo, 整数型, , 
    .参数 fAttach, 逻辑型, , 

.DLL命令 Thread32First, 逻辑型, "KERNEL32.DLL", "Thread32First", 公开, 
    .参数 hSnapshot, 整数型, , 
    .参数 lpte, 未知类型0x41012C6F, , 

.DLL命令 gethostbyaddr, 整数型, "wsock32.dll", "gethostbyaddr", 公开, 
    .参数 addr, 整数型, 传址, 
    .参数 len, 整数型, 传址, 
    .参数 type, 整数型, 传址, 

.DLL命令 CopyMemory_int2hostent, 整数型, "kernel32.dll", "RtlMoveMemory", 公开, 
    .参数 目标数据地址, 未知类型0x41012C85, , 
    .参数 源数据, 整数型, , 
    .参数 尺寸, 整数型, , 

.DLL命令 IcmpCreateFile, 整数型, "iphlpapi.dll", "IcmpCreateFile", 公开, 

.DLL命令 IcmpSendEcho, 整数型, "ICMP.DLL", "IcmpSendEcho", 公开, 
    .参数 IcmpHandle, 整数型, , 
    .参数 DestinationAddress, 整数型, , 
    .参数 RequestData, 文本型, , 
    .参数 RequestSize, 短整数型, , 
    .参数 RequestOptions, 整数型, , 
    .参数 ReplyBuffer, 未知类型0x41012C86, , 
    .参数 ReplySize, 整数型, , 
    .参数 Timeout, 整数型, , 

.DLL命令 IcmpCloseHandle, 整数型, "ICMP.DLL", "IcmpCloseHandle", 公开, 
    .参数 IcmpHandle, 整数型, , 

.DLL命令 WinHttpCheckPlatform, 逻辑型, "Winhttp.dll", "WinHttpCheckPlatform", 公开, BOOL WinHttpCheckPlatform(void);

.DLL命令 WinHttpOpen, 整数型, "Winhttp.dll", "WinHttpOpen", 公开, HINTERNET WINAPI WinHttpOpen
    .参数 pwszUserAgent, 整数型, , __in_opt  LPCWSTR pwszUserAgent
    .参数 dwAccessType, 整数型, , __in      DWORD dwAccessType
    .参数 pwszProxyName, 字节集, , __in      LPCWSTR pwszProxyName
    .参数 pwszProxyBypass, 整数型, , __in      LPCWSTR pwszProxyBypass
    .参数 dwFlags, 整数型, , __in      DWORD dwFlags

.DLL命令 WinHttpConnect, 整数型, "Winhttp.dll", "WinHttpConnect", 公开, HINTERNET WINAPI WinHttpConnect
    .参数 hSession, 整数型, , __in        HINTERNET hSession
    .参数 pswzServerName, 字节集, , __in        LPCWSTR pswzServerName
    .参数 nServerPort, 整数型, , __in        INTERNET_PORT nServerPort
    .参数 dwReserved, 整数型, , __reserved  DWORD dwReserved

.DLL命令 WinHttpOpenRequest, 整数型, "Winhttp.dll", "WinHttpOpenRequest", 公开, HINTERNET WINAPI WinHttpOpenRequest
    .参数 hConnect, 整数型, , __in  HINTERNET hConnect
    .参数 pwszVerb, 字节集, , __in  LPCWSTR pwszVerb
    .参数 pwszObjectName, 字节集, , __in  LPCWSTR pwszObjectName
    .参数 pwszVersion, 整数型, , __in  LPCWSTR pwszVersion
    .参数 pwszReferrer, 整数型, , __in  LPCWSTR pwszReferrer
    .参数 ppwszAcceptTypes, 整数型, , __in  LPCWSTR *ppwszAcceptTypes
    .参数 dwFlags, 整数型, , __in  DWORD dwFlags

.DLL命令 WinHttpCloseHandle, 逻辑型, "Winhttp.dll", "WinHttpCloseHandle", 公开, BOOL WINAPI WinHttpCloseHandle
    .参数 hInternet, 整数型, , __in  HINTERNET hInternet

.DLL命令 WinHttpSetTimeouts, 逻辑型, "Winhttp.dll", "WinHttpSetTimeouts", 公开, BOOL WINAPI WinHttpSetTimeouts
    .参数 hInternet, 整数型, , __in  HINTERNET hInternet
    .参数 dwResolveTimeout, 整数型, , __in  int dwResolveTimeout
    .参数 dwConnectTimeout, 整数型, , __in  int dwConnectTimeout
    .参数 dwSendTimeout, 整数型, , __in  int dwSendTimeout
    .参数 dwReceiveTimeout, 整数型, , __in  int dwReceiveTimeout

.DLL命令 WinHttpSetOption, 逻辑型, "Winhttp.dll", "WinHttpSetOption", 公开, BOOL WINAPI WinHttpSetOption
    .参数 hInternet, 整数型, , __in  HINTERNET hInternet
    .参数 dwOption, 整数型, , __in  DWORD dwOption
    .参数 lpBuffer, 整数型, 传址, __in  LPVOID lpBuffer
    .参数 dwBufferLength, 整数型, , __in  DWORD dwBufferLength

.DLL命令 WinHttpAddRequestHeaders, 逻辑型, "Winhttp.dll", "WinHttpAddRequestHeaders", 公开, BOOL WINAPI WinHttpAddRequestHeaders
    .参数 hRequest, 整数型, , __in  HINTERNET hRequest
    .参数 pwszHeaders, 字节集, , __in  LPCWSTR pwszHeaders
    .参数 dwHeadersLength, 整数型, , __in  DWORD dwHeadersLength
    .参数 dwModifiers, 整数型, , __in  DWORD dwModifiers

.DLL命令 WinHttpSendRequest, 逻辑型, "Winhttp.dll", "WinHttpSendRequest", 公开, BOOL WINAPI WinHttpSendRequest
    .参数 hRequest, 整数型, , __in      HINTERNET hRequest
    .参数 pwszHeaders, 整数型, , __in_opt  LPCWSTR pwszHeaders
    .参数 dwHeadersLength, 整数型, , __in      DWORD dwHeadersLength
    .参数 lpOptional, 字节集, , __in_opt  LPVOID lpOptional
    .参数 dwOptionalLength, 整数型, , __in      DWORD dwOptionalLength
    .参数 dwTotalLength, 整数型, , __in      DWORD dwTotalLength
    .参数 dwContext, 整数型, , __in      DWORD_PTR dwContext

.DLL命令 WinHttpReceiveResponse, 逻辑型, "Winhttp.dll", "WinHttpReceiveResponse", 公开, BOOL WINAPI WinHttpReceiveResponse
    .参数 hRequest, 整数型, , __in        HINTERNET hRequest
    .参数 lpReserved, 整数型, , __reserved  LPVOID lpReserved

.DLL命令 WinHttpQueryDataAvailable, 逻辑型, "Winhttp.dll", "WinHttpQueryDataAvailable", 公开, 查询是否有可读数据
    .参数 hRequest, 整数型, , 请求句柄
    .参数 lpdwNumberOfBytesAvailable, 整数型, 传址, 可读数据长度

.DLL命令 WinHttpReadData, 逻辑型, "Winhttp.dll", "WinHttpReadData", 公开, BOOL WINAPI WinHttpReadData
    .参数 hRequest, 整数型, , __in   HINTERNET hRequest
    .参数 lpBuffer, 字节集, , __out  LPVOID lpBuffer
    .参数 dwNumberOfBytesToRead, 整数型, , __in   DWORD dwNumberOfBytesToRead
    .参数 lpdwNumberOfBytesRead, 整数型, 传址, __out  LPDWORD lpdwNumberOfBytesRead

.DLL命令 WinHttpQueryHeaders, 逻辑型, "Winhttp.dll", "WinHttpQueryHeaders", 公开, BOOL WINAPI WinHttpQueryHeaders
    .参数 hRequest, 整数型, , __in      HINTERNET hRequest
    .参数 dwInfoLevel, 整数型, , __in      DWORD dwInfoLevel
    .参数 pwszName, 整数型, , __in_opt  LPCWSTR pwszName
    .参数 lpBuffer, 字节集, , __out     LPVOID lpBuffer
    .参数 lpdwBufferLength, 整数型, 传址, __inout   LPDWORD lpdwBufferLength
    .参数 lpdwIndex, 整数型, 传址, __inout   LPDWORD lpdwIndex

.DLL命令 GetCalendarInfo, 整数型, "kernel32.dll", "GetCalendarInfoA", 公开, 
    .参数 Locale, 整数型, , 
    .参数 Calendar, 整数型, , 
    .参数 CalType, 整数型, , 
    .参数 lpCalData, 文本型, , 
    .参数 cchData, 整数型, 传址, 
    .参数 lpValue, 整数型, , 

.DLL命令 GetCompressedFileSize, 整数型, "kernel32.dll", "GetCompressedFileSizeA", 公开, 
    .参数 lpFileName, 文本型, , 
    .参数 lpFileSizeHigh, 整数型, 传址, 

.DLL命令 RtlGetNtProductType, 逻辑型, "ntdll.dll", "RtlGetNtProductType", 公开, 系统_取系统版本
    .参数 wProductType, 整数型, 传址, 

.DLL命令 RtlGetProductInfo, 整数型, "ntdll.dll", "RtlGetProductInfo", 公开, 系统_取系统版本，不支持XP
    .参数 dwOSMajorVersion, 整数型, , 
    .参数 dwOSMinorVersion, 整数型, , 
    .参数 dwSpMajorVersion, 整数型, , 
    .参数 dwSpMinorVersion, 整数型, , 
    .参数 pdwReturnedProductType, 整数型, 传址, 

.DLL命令 RtlGetNtVersionNumbers, 整数型, "ntdll.dll", "RtlGetNtVersionNumbers", 公开, 系统_取系统版本
    .参数 major, 整数型, 传址, 
    .参数 minor, 整数型, 传址, 
    .参数 build, 短整数型, 传址, 

.DLL命令 InternetQueryOption, 逻辑型, "wininet.dll", "InternetQueryOptionA", 公开, 
    .参数 hInternet, 整数型, , 
    .参数 dwOption, 整数型, , 
    .参数 lpBuffer, 整数型, , 
    .参数 lpdwBufferLength, 整数型, 传址, 

.DLL命令 ReadFile_字节集, 逻辑型, "kernel32.dll", "ReadFile", 公开, 
    .参数 hFile, 整数型, , 
    .参数 lpBuffer, 字节集, , 
    .参数 nNumberOfBytesToRead, 整数型, , 
    .参数 lpNumberOfBytesRead, 整数型, 传址, 
    .参数 lpOverlapped, 整数型, , 

.DLL命令 CreateSemaphore, 整数型, "kernel32.dll", "CreateSemaphoreA", 公开, 创建一个新的信号机  如执行成功，返回信号机对象的句柄；零表示出错。会设置GetLastError。即使返回一个有效的句柄，但倘若它指出同名的一个信号机已经存在，那么GetLastError也会返回ERROR_ALREADY_EXISTS
    .参数 信号量安全特性, 整数型, , 安全结构。默认可不写，留0即可。
    .参数 信号量初始计数, 整数型, , 设置信号机的初始计数。
    .参数 信号量最大计数, 整数型, , 设置信号机的最大计数
    .参数 信号量对象的名称, 文本型, , 指定信号机对象的名称。名字是用作多进程同步的，一般不使用。

.DLL命令 OpenSemaphore, 整数型, "kernel32.dll", "OpenSemaphoreA", 公开, 打开命名信号量对象
    .参数 dwDesiredAccess, 整数型, , 权限,2031619
    .参数 是否继承, 逻辑型, , 是否继承句柄
    .参数 lpName, 文本型, , 名称

.DLL命令 ReleaseSemaphore, 逻辑型, "kernel32.dll", "ReleaseSemaphore", 公开, 释放信号量对象
    .参数 hSemaphore, 整数型, , 句柄
    .参数 lReleaseCount, 整数型, , 增加的数量
    .参数 lpPreviousCount, 整数型, 传址, 之前的数量

.DLL命令 GetDeviceCaps, 整数型, "gdi32.dll", "GetDeviceCaps", 公开, 获取系统DPI大小
    .参数 HDC, 整数型, , 0
    .参数 int, 整数型, , 0

.DLL命令 GetClipboardFormatNameA, 整数型, "user32.dll", "GetClipboardFormatNameA", 公开, 
    .参数 iFormat, 整数型, , 
    .参数 psBuffer, 文本型, , 
    .参数 iMaxCount, 整数型, , 

.DLL命令 RtlMoveMemory, 整数型, "kernel32.dll", "RtlMoveMemory", 公开, 
    .参数 Destination, 整数型, , 
    .参数 Source, 整数型, , 
    .参数 Length, 整数型, , 

.DLL命令 DwmUpdateThumbnailProperties, 整数型, "Dwmapi.dll", "DwmUpdateThumbnailProperties", 公开, 更新桌面窗口管理器（DWM）缩略图的属性  返回0为成功
    .参数 HTHUMBNAIL, 整数型, , hThumbnailId  略缩图指针
    .参数 DWM_THUMBNAIL_PROPERTIES, 缩略图属性, , 略缩图属性

.DLL命令 DwmUnregisterThumbnail, 整数型, "Dwmapi.dll", "DwmUnregisterThumbnail", 公开, 删除由DwmRegisterThumbnail函数创建的桌面窗口管理器（DWM）缩略图关系
    .参数 HTHUMBNAIL, 整数型, , hThumbnailId 略缩图指针

.DLL命令 DwmSetIconicThumbnail, 整数型, "Dwmapi.dll", "DwmSetIconicThumbnail", 公开, 在窗口或选项卡上设置静态的图标位图，以用作缩略图表示。任务栏可以将此位图用作窗口或选项卡的缩略图切换目标
    .参数 HWND, 整数型, , 
    .参数 HBITMAP, 整数型, , 位图句柄
    .参数 DWORD, 整数型, , 显示选项 0=无框架；1=有框架

.DLL命令 DwmRegisterThumbnail, 整数型, "Dwmapi.dll", "DwmRegisterThumbnail", 公开, 在目标窗口和源窗口之间创建桌面窗口管理器（DWM）缩略图关系
    .参数 HWND, 整数型, , hwndDestination
    .参数 HWND, 整数型, , hwndSource
    .参数 PHTHUMBNAIL, 整数型, 传址, phThumbnailId  略缩图指针

.DLL命令 DwmIsCompositionEnabled, 整数型, "Dwmapi.dll", "DwmIsCompositionEnabled", 公开, 获取一个值，该值指示是否启用了桌面窗口管理器（DWM）组合。运行Windows 7或更早版本的计算机上的应用程序可以通过处理WM_DWMCOMPOSITIONCHANGED通知来侦听组合状态更改。
    .参数 pfEnabled, 逻辑型, 传址, 指向一个值的指针，当该函数成功返回时，如果启用了DWM组合，则该值为TRUE ; 否则，FALSE。

.DLL命令 DwmEnableComposition, 整数型, "Dwmapi.dll", "DwmEnableComposition", 公开, 启用或禁用桌面窗口管理器（DWM）组合。
    .参数 uCompositionAction, 整数型, , 

.DLL命令 DwmExtendFrameIntoClientArea, 整数型, "Dwmapi.dll", "DwmExtendFrameIntoClientArea", 公开, 将窗口框架扩展到客户端区域。
    .参数 hWnd, 整数型, , 
    .参数 pMarInset, 精易_位置和大小, 传址, 

.DLL命令 DwmEnableBlurBehindWindow, 整数型, "Dwmapi.dll", "DwmEnableBlurBehindWindow", 公开, 在指定窗口上启用模糊效果。
    .参数 hWnd, 整数型, , 
    .参数 pBlurBehind, 模糊属性, 传址, 

.DLL命令 GdipGetPropertyItemSize, 整数型, "gdiplus.dll", "GdipGetPropertyItemSize", 公开, 
    .参数 Image, 整数型, , 
    .参数 propId, 整数型, , 
    .参数 size, 整数型, 传址, 

.DLL命令 GdipGetPropertyItem, 整数型, "gdiplus.dll", "GdipGetPropertyItem", 公开, 
    .参数 Image, 整数型, , 
    .参数 propId, 整数型, , 
    .参数 propSize, 整数型, , 
    .参数 buffer, 字节集, , 

.DLL命令 GetCaretPos, 整数型, "user32.dll", "GetCaretPos", 公开, 将插入标记的位置（按客户区坐标）信息拷贝到指定的POINT结构中
    .参数 IpPoint, 精易_坐标, , 

.DLL命令 EnumDisplayMonitors, 整数型, "user32.dll", "EnumDisplayMonitors", 公开, ,
    .参数 hdc, 整数型, , 
    .参数 lprcClip, 整数型, , 
    .参数 lpfnEnum, 整数型, , 
    .参数 dwData, 整数型, , 

.DLL命令 ChangeClipboardChain, 逻辑型, "user32.dll", "ChangeClipboardChain", 公开, 从剪贴板查看器链中删除指定的窗口。
    .参数 hWndRemove, 整数型, , 要从链中移除的窗口的句柄。句柄必须已传递给SetClipboardViewer函数。
    .参数 hWndNewNext, 整数型, , 剪贴板查看器链中hWndRemove窗口后面的窗口句柄 。（这是SetClipboardViewer返回的句柄，除非响应WM_CHANGECBCHAIN消息更改了序列。）

.DLL命令 SetClipboardViewer, 整数型, "user32.dll", "SetClipboardViewer", 公开, 将指定的窗口添加到剪贴板查看器链。每当剪贴板的内容发生变化时，剪贴板查看器窗口将收到WM_DRAWCLIPBOARD消息。
    .参数 hWndNewViewer, 整数型, , 标识要添加到剪贴板链的窗口。

.DLL命令 GetClipboardViewer, 整数型, "user32.dll", "GetClipboardViewer", 公开, 检索剪贴板查看器链中第一个窗口的句柄。

.DLL命令 SHGetFolderPathA, 整数型, "Shell32.dll", "SHGetFolderPathA", 公开, 
    .参数 hWnd, 整数型, , 
    .参数 csidl, 整数型, , 
    .参数 hToken, 整数型, , 
    .参数 dwFlags, 整数型, , 
    .参数 pszPath, 整数型, , 

.DLL命令 GetComboBoxInfo, 逻辑型, "user32.dll", "GetComboBoxInfo", 公开, ,
    .参数 hwndCombo, 整数型, , 0
    .参数 pcbi, COMBOBOXINFO, , 0

.DLL命令 wcslen, 整数型, "msvcrt.dll", "@wcslen", 公开, 
    .参数 _String, 字节集, , 

.DLL命令 wcscmp, 整数型, "msvcrt.dll", "@wcscmp", 公开, 
    .参数 _String1, 字节集, , 
    .参数 _String2, 字节集, , 

.DLL命令 插件信息, 文本型, "", "", , 

.DLL命令 使用插件, 文本型, "", "", , 
    .参数 msgFrom, 整数型, , 0=频道聊天  1=好友私聊
    .参数 msgType, 整数型, , 同步之前的
    .参数 channelId, 文本型, , 当msgFrom=0时才有
    .参数 userId, 文本型, , 
    .参数 contant, 文本型, , 
    .参数 msgId, 文本型, , 
    .参数 json, 文本型, , 备用 留给你自己解析

.DLL命令 启动插件, 文本型, "", "", , 
    .参数 token, 文本型, , 

.程序集 程序集1, , , 

.子程序 _启动子程序, 整数型, , 本子程序在程序启动后最先执行
 ' // 这个是 开黑啦 BOT 易语言版本 （WebHook）
赋值 (Version, “v0.0.4”)

 ' // 开黑啦后台配置：
 ' //  回调地址填写：http://{yourdomain}/khl/botv1?compress=0
 ' // “?compress=0” 是不压缩，请务必加入

赋值 (g_baseUrl, “https://www.kaiheila.cn/api”)
赋值 (g_apiVer, “3”)
赋值 (g_url, 相加 (g_baseUrl, “/v”, g_apiVer))

赋值 (g_token, 读配置项 (相加 (取运行目录 (), “\bot_token.ini”), “def”, “token”, )) ' 请在机器人后台获取)

 ' rolevalueTorole (524288)
 ' 初始化（）
init ()
 ' CardMessage_index ()

 ' 卡片测试 ()
载入 (窗口1, , 假)
返回 (0) ' 可以根据您的需要返回任意数值

.子程序 init, 空白型, , 
.局部变量 json, 类_json, , , 

json.解析 (user_me (), )
赋值 (g_bot.username, json.取通用属性 (“data.username”, ))
赋值 (g_bot.id, json.取通用属性 (“data.id”, ))
赋值 (g_bot.quard, 相加 (g_bot.username, “#”, g_bot.id))

.窗口程序集 窗口程序集_窗口1, , , 

.子程序 _服务器1_数据到达, 空白型, , 
.局部变量 datapack, 字节集, , , 
.局部变量 connectId, 文本型, , , 
.局部变量 datapack_char, 文本型, , , 
.局部变量 url, 文本型, , , 
.局部变量 dataContent, 文本型, , , 
.局部变量 匿名局部变量_77, 空白型, , , 
.局部变量 data, 类_json, , , 
.局部变量 redata, 类_json, , , 
.局部变量 msg_id, 空白型, , , 

 ' 这里 开始处理
赋值 (datapack, 取回数据 ())
赋值 (connectId, 取回客户 ())
 ' //除了校验要回调以外，其他参数均不需要处理

赋值 (datapack_char, 到文本 (datapack))
赋值 (url, 文本_取指定内容 (datapack_char, “POST ”, “HTTP”))
赋值 (dataContent, 文本_取文本之后 (datapack_char, 相加 (#换行符, #换行符)))

data.解析 (编码_utf8到gb2312 (dataContent), )
日志_输出 (“↓”, data.取数据文本 ())
.判断开始 (等于 (data.取通用属性 (“d.type”, ), “255”))
     ' 这是个信令
    redata.置属性 (“challenge”, data.取通用属性 (“d.challenge”, ), )
     ' 这里要处理协议头
    
    connectId.发送数据 (协议头 (redata.取数据文本 ()), )
    connectId.断开客户 ()
    返回 ()
.默认
    
.判断结束

 ' 如果有多机器人（负载均衡）：
 ' msg_id ＝ data.取通用属性 (“d['msg_id']”, )
 ' .如果真 (等于 (数组中查找 (g_msgList_id, msg_id), 假))
     ' 加入成员 (g_msgList, data.取数据文本 ())
     ' 加入成员 (g_msgList_id, msg_id)
.如果真结束
 ' 单独机器人
加入成员 (g_msgList, data.取数据文本 ())
 ' g_MsgID ＝ data.取属性数值 (“sn”)
connectId.发送数据 (协议头 (redata.取数据文本 ()), )
connectId.断开客户 ()
返回 ()

.子程序 _窗口1_创建完毕, 空白型, , 
未知支持库函数_0 (&QueueHeart, , )
 ' 下边是启动Ws的选项
 ' 19730
 ' 启动线程 (&WsConnet, , )
未知支持库函数_0 (&LoadCoreFunctionAndPlugins, , )

.子程序 LoadCoreFunctionAndPlugins, 空白型, , 
日志_输出 (“→”, “主应用启动完成，3秒后开始加载核心函数以及外部插件”)

程序_延时 (3, 1)
 ' 启动线程 (&InitCorefunction, , )
 ' 启动线程 (&PluginsInitialize, , )


.子程序 数组中查找, 逻辑型, , 
.参数 数组, 文本型, 数组, 
.参数 文本, 文本型, , 

.局部变量 i, 整数型, , , 

.计次循环首 (取数组成员数 (数组), i)
    .如果真 (等于 (数组 [i], 文本))
        返回 (真)
        
    .如果真结束
    
.计次循环尾 ()
返回 (假)


.子程序 日志_输出, 空白型, , 
.参数 来源, 文本型, , 
.参数 文本, 文本型, , 

.判断开始 (等于 (来源, “”))
    赋值 (来源, “Core”)
.判断 (等于 (来源, “s”))
    赋值 (来源, “Server”)
.默认
    
.判断结束
调试输出 (相加 (时间_格式化 (取现行时间 (), “MM-DD ”, “hh:mm”, ), “ [”, 来源, “]”, 文本))
.如果真 (是否已创建 (窗口1))
    赋值 (.内容, 相加 (时间_格式化 (取现行时间 (), “MM-DD ”, “hh:mm”, ), “ [”, 来源, “]”, 文本, #换行符, .内容))
    
.如果真结束


.子程序 协议头, 文本型, , 
.参数 b, 文本型, , 

.局部变量 a, 文本型, , , 

赋值 (a, “HTTP/1.1 200 OK”)
赋值 (a, 相加 (a, #换行符, “Date: ”, 时间_转为GMT格式1 (增减时间 (取现行时间 (), #小时, -8))))
 ' a ＝ a ＋ #换行符 ＋ “Server: nginx/1.16.1”
赋值 (a, 相加 (a, #换行符, “Content-Length: ”, 到文本 (取文本长度 (b))))
赋值 (a, 相加 (a, #换行符, “Content-Type: application/json; charset=UTF-8”))
 ' a ＝ a ＋ #换行符 ＋ “Connection: close”
 ' a ＝ a ＋ #换行符 ＋ “X-Powered-By: PHP/7.4.13”
赋值 (a, 相加 (a, #换行符, #换行符))
赋值 (a, 相加 (a, b))
调试输出 (a)
返回 (a)

.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 网页_HTTP读文本, 文本型, , 
.参数 完整网址, 文本型, , 
.参数 访问方式, 文本型, 可空, "GET" 或 "POST" 为空默认"GET"
.参数 代理地址, 文本型, 可空, 
.参数 附加协议头, 文本型, 可空, 
.参数 提交信息, 文本型, 可空, "POST"专用
.参数 网页头, 文本型, 参考 可空, 返回网页头部信息



.子程序 网页_HTTP读文件, 字节集, , 
.参数 完整网址, 文本型, , 
.参数 访问方式, 文本型, 可空, "GET" 或 "POST" 为空默认"GET"
.参数 代理地址, 文本型, 可空, 
.参数 附加协议头, 文本型, 可空, 
.参数 提交信息, 文本型, 可空, "POST"专用
.参数 网页头, 文本型, 参考 可空, 返回网页头部信息



.子程序 网页_打开指定网址, 逻辑型, , 打开指定网址(成功返回真,失败返回假)
.参数 要打开的网址, 文本型, , 欲打开的网页地址



.子程序 网页_URL编码_UTF8, 文本型, , 返回已编码的URL
.参数 Bin_URL, 文本型, , 



.子程序 网页_URL编码, 文本型, , 返回已编码的URL
.参数 Bin_URL, 文本型, , 



.子程序 网页_URL解码_UTF8, 文本型, , 返回已解码的URL
.参数 Bin_URL, 文本型, , 欲解码的文本



.子程序 网页_URL解码, 文本型, , 返回已解码的URL
.参数 Bin_URL, 文本型, , 欲解码的文本



.子程序 Ansi转Utf8, 字节集, , 
.参数 ansi文本, 文本型, , 



.子程序 Utf8转ansi, 文本型, , 
.参数 utf8, 字节集, , 



.子程序 Unicode转Utf8, 字节集, , 
.参数 Unicode字节集, 字节集, , 



.子程序 Ansi转Unicode, 字节集, , 
.参数 Ansi文本, 文本型, , 



.子程序 Unicode转ansi, 文本型, , 将Unicode码转换为Ansi码 (返回转换后的文本)
.参数 Unicode, 字节集, , 欲转换的Unicode字节集



.子程序 Utf8转Unicode, 字节集, , 
.参数 utf8字节集, 字节集, , 



.子程序 取十进制, 整数型, , 十六进制转为十进制
.参数 十六进制文本, 文本型, , 



.子程序 UNICODE转汉字, 文本型, , 
.参数 原文本, 文本型, , 



.子程序 文本_取文本之后, 文本型, , 
.参数 被搜寻的文本, 文本型, , 
.参数 开始文本, 文本型, , 



.子程序 文本_取指定内容, 文本型, , 
.参数 完整内容, 文本型, , 
.参数 左边文本, 文本型, 可空, 
.参数 右边文本, 文本型, 可空, 



.子程序 文本_取文本之前, 文本型, , 
.参数 被搜寻的文本, 文本型, , 
.参数 开始文本, 文本型, , 



.子程序 枚举所有文件夹, 整数型, , 取一个文件夹下所有子目录；成功返回子目录数量，失败返回0；
.参数 父文件夹路径, 文本型, , 如：D:\Program Files；目录分割符请用\
.参数 子目录数组, 文本型, 参考 可空 数组, 用来装载返回的子目录路径；
.参数 是否带路径, 逻辑型, 可空, 假=带，真=不带;



.子程序 取配置项名, 整数型, , 返回配置项名数组成员数。返回 0 表示节名称下没有配置项；返回 -1 表示节名称或配置文件不存在。
.参数 配置文件名, 文本型, , 指定配置文件的名称，通常以.ini作为文件名后缀。
.参数 节名称, 文本型, , 包含欲读入配置项所处节的名称。
.参数 配置项名数组, 文本型, 参考 数组, 参数作为返回值使用。返回指定节中的各配置项名称。



.类模块 普通填表, , , 

.子程序 初始化, 逻辑型, , 使用网页填表时必须选初始化。成功返回真，失败返回假。
.参数 浏览器句柄, 整数型, , 提供浏览器窗口句柄



.子程序 网页_取文档对象, 对象, , 请先初始化后,再使用本命令


.子程序 销毁, 空白型, , 


.子程序 网页_取IE窗口句柄, 整数型, , 
.参数 窗口句柄, 整数型, , 



.子程序 网页_取网页文档对象, 逻辑型, , 通过浏览器句柄取网页文档对象
.参数 浏览器句柄, 整数型, , 
.参数 文档对象, 对象, 参考, 返回的网页文档对象，只能提供变量



.子程序 控件_所有属性操作读, 整数型, , 取指定控件的各种属性。成功返回指定控件的所有数量，失败返回0。
.参数 大类型, 整数型, 可空, 0=单选框，1=复选框，2=文本框，3=多行文本框，4=按钮，5=高级按钮，6=图片按钮，7=图片，8=链接。9=title链接。10=组合框。11=DIV。12=ULLI。13=SPAN。
.参数 元素类型, 文本型, 可空, 如：input,textarea,button
.参数 控件类型, 文本型, 可空, 如：text|password|file分隔
.参数 控件标题, 文本型, 参考 可空 数组, 
.参数 控件内容, 文本型, 参考 可空 数组, 
.参数 控件名称, 文本型, 参考 可空 数组, 
.参数 控件ID, 文本型, 参考 可空 数组, 
.参数 所属类型, 文本型, 参考 可空 数组, 
.参数 链接地址, 文本型, 参考 可空 数组, 
.参数 图片地址, 文本型, 参考 可空 数组, 
.参数 图片宽度, 文本型, 参考 可空 数组, 
.参数 图片高度, 文本型, 参考 可空 数组, 
.参数 选中状态, 文本型, 参考 可空 数组, 
.参数 匿名参数_5077, 文本型, 参考 可空 数组, 
.参数 是否标记, 逻辑型, 可空, 
.参数 title链接标题, 文本型, 参考 可空 数组, 
.参数 title链接地址, 文本型, 参考 可空 数组, 
.参数 返回的对象, 对象, 参考 可空 数组, 



.子程序 控件_置标记, 空白型, , 把网页上的控件填上标记。


.子程序 框架_取数量, 整数型, , 返回框架的数量。


.子程序 网页_跳转, 空白型, , 在本窗口跳转到指定的网址
.参数 网页地址, 文本型, , 



.子程序 网页_跳转1, 空白型, , 在本窗口跳转到指定的网址,如果 网页_跳转 失败，可试试本命令。
.参数 网页地址, 文本型, , 要跳转的网站地址。



.子程序 网页_缩放, 整数型, , 放大或缩小网页视图。成功返回放大后的百分比。
.参数 百分比, 整数型, , 如：110，就是放大百分之10。反则：如90，就是缩小到百分之90，100为恢复原大小。



.子程序 网页_取文本, 文本型, , 取网页的文本。


.子程序 网页_取源码, 文本型, , 取网页的源码。


.子程序 网页_取标题, 文本型, , 取网页的标题。


.子程序 网页_执行脚本, 空白型, , 在当前网页上执行指定的脚本命令。
.参数 脚本代码, 文本型, , 脚本代码。
.参数 脚本类型, 整数型, 可空, 默认为JavaScript。 0 = JavaScript。1 = VBScript。



.子程序 网页_解除网页限制, 空白型, , 可解除网页右键限制和防止复制限制!


.子程序 网页_执行事件, 逻辑型, , 执行某个网页元素相关的脚本方法。成功返回真，失败返回假。
.参数 元素对象, 对象, , 元素的对象，如：文本框的，直接用  文本框_取对象() 即可
.参数 事件类型, 文本型, , 以 #网页事件_  开头的常量



.子程序 网页_刷新, 空白型, , 刷新当前页面


.子程序 网页_取属性, 文本型, , 取网页的所种属性，如：网页标题，地址，编码，大小，等等。
.参数 属性类型, 文本型, , 请提供以 #网页属性_ 开头的常量值



.子程序 网页_置属性, 逻辑型, , 设置网页文档的属性。
.参数 属性类型, 文本型, , 请提供以“#网页属性_”开头的常量值
.参数 待写入值, 文本型, , 



.子程序 网页_修改, 逻辑型, , 成功返回真，失败返回假。
.参数 新源码, 文本型, , 



.子程序 网页_取坐标元素, 对象, , 通过坐标取网页上的元素，成功返回元素的对象。
.参数 横坐标, 整数型, 可空, （请提供屏幕的横坐标）留空则取鼠标所在位置的元素。
.参数 纵坐标, 整数型, 可空, （请提供屏幕的纵坐标）留空则取鼠标所在位置的元素。
.参数 网页地址, 文本型, 可空, 用于装载网页地址的变量
.参数 控件类型, 文本型, 可空, 用于装载控件类型的变量
.参数 元素标题, 文本型, 可空, 用于装载元素标题的变量
.参数 元素名称, 文本型, 可空, 用于装载元素名称的变量
.参数 元素ID, 文本型, 可空, 用于装载元素ID的变量
.参数 链接地址, 文本型, 可空, 用于装载链接地址的变量
.参数 引用代码, 文本型, 可空, 用于装载引用代码的变量



.子程序 网页_取元素坐标, 精易_坐标, , 取指定元素对象的坐标。
.参数 元素对象, 对象, , 可以通过“普通填表.按钮_取对象（）”方式,取得元素对象



.子程序 网页_取顶级域名, 文本型, , 取网页的顶级域名。


.子程序 网页_取页面地址, 文本型, , 取网页的页面地址。


.子程序 网页_取编码类型, 文本型, , 取网页的编码类型。如：GBK。


.子程序 网页_取选中内容, 文本型, , 取当前网页上选中的内容。
.参数 类型, 整数型, 可空, 默认为0。0.文本。1.HTML代码。 



.子程序 网页_屏蔽信息框, 空白型, , 直接无视网页上弹出来的信息框和对话框


.子程序 网页_取页面大小, 文本型, , 取当前网页的大小。


.子程序 网页_隐藏滚动条, 空白型, , 


.子程序 网页_滚动条控制, 空白型, , 控制浏览器滚动条上下滑动。
.参数 滚动距离, 整数型, , 正数为下滚，如：50。负数为上滚，如果-50。
.参数 滚动类型, 整数型, 可空, 可空：默认为0。0=纵，1=横



.子程序 网页_滚动条固定, 空白型, , 控制浏览器滚动条上下滑动。
.参数 横向位置, 整数型, , 横向位置
.参数 纵向位置, 整数型, , 纵向位置



.子程序 网页_滚动条取位置, 空白型, , 取滚动条横纵向位置。
.参数 横向位置, 整数型, 参考 可空, 用于存放浏览器滚动横向的位置。
.参数 纵向位置, 整数型, 参考 可空, 用于存放浏览器滚动纵向的位置。



.子程序 网页_滚动条取高宽, 空白型, , 取出浏览器滚动条的高宽！
.参数 滚动条高度, 整数型, 参考 可空, 用于存放浏览器滚动条高度的变量。
.参数 滚动条宽度, 整数型, 参考 可空, 用于存放浏览器滚动条宽度的变量。



.子程序 网页_替换选中内容, 空白型, , 替换网页上选中的文本。
.参数 替换为, 文本型, , 要替换为的文本。



.子程序 网页_创建新网页, 空白型, , 直接在Webbroswer或IES内写入一个完整的网页，创建前必须保证网页已打开。 
.参数 新网页代码, 文本型, , 必须是完整的网页，即以<html>开头，以</html>结束。



.子程序 网页_高亮关键字, 空白型, , 
.参数 关键字, 文本型, , 要高亮的网页关键字;
.参数 文字颜色, 文本型, 可空, 可空:默认为红色;16进制的网页颜色;
.参数 背景颜色, 文本型, 可空, 可空:默认为泥黄;16进制的网页颜色;
.参数 是否加粗, 逻辑型, 可空, 可空:默认为假,不加粗,真=加粗;



.子程序 文本框_取对象, 对象, , 根据网页文本框的Name或ID或索引取回对应的对象。
.参数 名称_ID_索引, 文本型, , 网页文本框的文本框名称或ID或索引。从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 文本框_取数量, 整数型, , 取网页上的文本框数量。成功返回文本框的数量。失败返回0。
.参数 是否标记, 逻辑型, 可空, 是否在每个文本框是写入标记文本。



.子程序 文本框_取内容, 文本型, , 用元素ID、名称、索引。取指定的网页文本框中的内容;成功返回文本框的内容，失败返回空文本。
.参数 名称_ID_索引, 文本型, , 网页文本框的文本框名称、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 文本框_取索引, 整数型, , 用文本框名称、ID、内容取出网页上指定的文本框索引，失败返回0。
.参数 名称_ID, 文本型, , 网页文本框的文本框名称或ID



.子程序 文本框_取属性, 逻辑型, , 取指定文本框的各种属性。成功返回真，失败返回假。
.参数 控件索引, 整数型, , 网页控件的索引。从1开始。
.参数 文本框内容, 文本型, 参考 可空, 用于装载文本框内容的变量。 
.参数 文本框名称, 文本型, 参考 可空, 用于装载文本框名称的变量。 
.参数 文本框ID, 文本型, 参考 可空, 用于装载文本框ID的变量。 
.参数 文本框类型, 文本型, 参考 可空, 用于装载文本框类型的变量。 
.参数 元素对象, 对象, 参考 可空, 用于装载元素对象的变量。 



.子程序 文本框_写内容, 逻辑型, , 往指定的网页文本框写入指定的内容。成功返回真，失败返回假。
.参数 名称_ID_索引, 文本型, , 网页文本框的文本框名称或ID或索引。从1开始。
.参数 欲写内的内容, 文本型, , 欲写内的内容
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 文本框_置焦点, 逻辑型, , 往指定的网页文本框置输入焦点
.参数 名称_ID_索引, 文本型, , 网页文本框的文本框名称或ID或索引。从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 文件框_写内容, 空白型, , 往指定的【文件框】写入内容
.参数 索引_名称_ID, 文本型, , 文本框的【索引_名称_ID】，索引从1开始
.参数 欲写内的内容, 文本型, , 欲写内的内容
.参数 跳过次数, 整数型, 可空, 如果元素名称一样，可以用此参数。说明：跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 多行文本框_置焦点, 逻辑型, , 往指定的网页多行文本框置输入焦点
.参数 名称_ID_索引, 文本型, , 网页多行文本框的多行文本框名称或ID或索引。从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 多行文本框_置状态, 逻辑型, , 设置多行文本框的可视状态
.参数 名称_ID_索引, 文本型, , 网页多行文本框的名称、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 可空。如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
.参数 隐藏, 逻辑型, 可空, 可空。默认为假。假=可视，真=隐藏



.子程序 多行文本框_取数量, 整数型, , 取网页上的多行文本框数量。成功返回多行文本框的数量。失败返回0。
.参数 是否标记, 逻辑型, 可空, 是否在每个多行文本框是写入标记文本。



.子程序 多行文本框_取内容, 文本型, , 用元素ID、名称、索引。取指定的网页多行文本框中的内容;成功返回多行文本框的内容，失败返回空文本。
.参数 名称_ID_索引, 文本型, , 网页多行文本框的多行文本框名称、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 多行文本框_取索引, 整数型, , 用多行文本框名称、ID、内容取出网页上指定的多行文本框索引，失败返回0。
.参数 名称_ID_内容, 文本型, , 网页多行文本框的多行文本框名称或ID
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 多行文本框_取属性, 逻辑型, , 取指定多行文本框的各种属性。成功返回真，失败返回假。
.参数 控件索引, 整数型, , 网页控件的索引。从1开始。
.参数 多行文本框内容, 文本型, 参考 可空, 用于装载多行文本框 内容 的变量。 
.参数 多行文本框名称, 文本型, 参考 可空, 用于装载多行文本框 名称 的变量。 
.参数 多行文本框ID, 文本型, 参考 可空, 用于装载多行文本框 ID 的变量。 
.参数 元素对象, 对象, 参考 可空, 用于装载元素对象的变量。 



.子程序 多行文本框_写内容, 逻辑型, , 往指定的网页多行文本框写入指定的内容。成功返回真，失败返回假。
.参数 名称_ID_索引, 文本型, , 网页多行文本框的多行文本框名称或ID或索引。从1开始。
.参数 欲写内的内容, 文本型, , 欲写内的内容
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 单选框_取对象, 对象, , 获取到相应的元素对象
.参数 标题_名称_ID_索引, 文本型, , 网页复选框的单选框标题、名称、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 单选框_取状态, 逻辑型, , 判断指定的单选框是否选中，选中返回真，没选中返回假。
.参数 标题_名称_ID_索引, 文本型, , 
.参数 跳过次数, 整数型, 可空, 网单选框_的索引。从1开始。



.子程序 单选框_取数量, 整数型, , 成功返回单选框的数量。失败返回0。
.参数 是否标记, 逻辑型, 可空, 是否在每个单选框是写入标记文本。



.子程序 单选框_取索引, 整数型, , 用单选框名称或ID取出网页上指定的单选框索引，失败返回0 。
.参数 标题_名称_ID, 文本型, , 网页单选框的单选框名称或ID
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 单选框_取属性, 逻辑型, , 取指定单选框的各种属性。改变网页上指定的复选框状态，将它取消打勾。成功返回真，失败返回假。
.参数 控件索引, 整数型, , 网页控件的索引。从1开始。
.参数 元素标题, 文本型, 参考 可空, 用于装载单选框内容的变量。 
.参数 元素名称, 文本型, 参考 可空, 用于装载单选框名称的变量。 
.参数 元素ID, 文本型, 参考 可空, 用于装载单选框ID的变量。 
.参数 元素类型, 文本型, 参考 可空, 用于装载单选框类型的变量。 
.参数 元素对象, 对象, 参考 可空, 用于装载元素对象的变量。 



.子程序 单选框_选择, 逻辑型, , 改变网页上指定的单选框选择状态，将它选中。成功返回真，失败返回假。
.参数 标题_名称_ID_索引, 文本型, , 网页单选框的单选框标题、名称、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
.参数 执行点击事件, 逻辑型, 可空, 执行鼠标单击事件，有些网页会判断你是否用过鼠标单击过。



.子程序 单选框_取消选择, 逻辑型, , 改变网页上指定的单选框选择状态，将它取消选中。成功返回真，失败返回假。
.参数 标题_名称_ID_索引, 文本型, , 网页单选框的单选框标题、名称、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
.参数 执行点击事件, 逻辑型, 可空, 执行鼠标单击事件，有些网页会判断你是否用过鼠标单击过。



.子程序 单选框_置焦点, 逻辑型, , 向指定的单选框置输入焦点
.参数 标题_名称_ID_索引, 文本型, , 网页单选框的标题、名称、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 单选框_置状态, 逻辑型, , 设置单选框的可视状态
.参数 标题_名称_ID_索引, 文本型, , 网页单选框的标题、名称、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 可空。如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
.参数 隐藏, 逻辑型, 可空, 可空。默认为假。假=可视，真=隐藏



.子程序 复选框_取对象, 对象, , 获取到相应的元素对象
.参数 标题_名称_ID_索引, 文本型, , 网页复选框的复选框标题、名称、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 复选框_取状态, 逻辑型, , 判断指定的复选框是否选中，选中返回真，没选中返回假。
.参数 标题_名称_ID_索引, 文本型, , 网页复选框的复选框标题、名称、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 复选框_取数量, 整数型, , 成功返回复选框的数量。失败返回0。
.参数 是否标记, 逻辑型, 可空, 是否在每个复选框是写入标记文本。



.子程序 复选框_取索引, 整数型, , 用复选框名称或ID取出网页上指定的复选框索引，失败返回0 。
.参数 标题_名称_ID, 文本型, , 网页复选框的复选框名称或ID
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 复选框_取属性, 逻辑型, , 取指定复选框的各种属性。改变网页上指定的复选框状态，将它取消打勾。成功返回真，失败返回假。
.参数 控件索引, 整数型, , 网页控件的索引。从1开始。
.参数 元素标题, 文本型, 可空, 用于装载复选框内容的变量。 
.参数 元素名称, 文本型, 可空, 用于装载复选框名称的变量。 
.参数 元素ID, 文本型, 可空, 用于装载复选框ID的变量。 
.参数 元素类型, 文本型, 可空, 用于装载复选框类型的变量。 
.参数 元素对象, 对象, 参考 可空, 用于装载元素对象的变量。 



.子程序 复选框_选择, 逻辑型, , 改变网页上指定的复选框选择状态，将它选中。成功返回真，失败返回假。
.参数 标题_名称_ID_索引, 文本型, , 网页复选框的复选框标题、名称、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
.参数 执行点击事件, 逻辑型, 可空, 执行鼠标单击事件，有些网页会判断你是否用过鼠标单击过。



.子程序 复选框_取消选择, 逻辑型, , 改变网页上指定的复选框选择状态，将它取消选中。成功返回真，失败返回假。
.参数 标题_名称_ID_索引, 文本型, , 网页复选框的复选框标题、名称、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
.参数 执行点击事件, 逻辑型, 可空, 执行鼠标单击事件，有些网页会判断你是否用过鼠标单击过。



.子程序 复选框_置焦点, 逻辑型, , 向指定的复选框置输入焦点
.参数 标题_名称_ID_索引, 文本型, , 网页复选框的复选框标题、名称、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 复选框_置状态, 逻辑型, , 设置复选框的可视状态
.参数 标题_名称_ID_索引, 文本型, , 网页复选框的标题、名称、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 可空。如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
.参数 隐藏, 逻辑型, 可空, 可空。默认为假。假=可视，真=隐藏



.子程序 按钮_取对象, 对象, , 获取到相应的元素对象
.参数 标题_名称_ID_索引, 文本型, , 网页按钮的按钮标题、名称、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 按钮_取属性, 逻辑型, , 取指定按钮的各种属性。成功返回真，失败返回假。
.参数 控件索引, 整数型, , 网页控件的索引。从1开始。
.参数 按钮标题, 文本型, 参考 可空, 用于装载按钮内容的变量。 
.参数 按钮名称, 文本型, 参考 可空, 用于装载按钮名称的变量。 
.参数 按钮ID, 文本型, 参考 可空, 用于装载按钮ID的变量。 
.参数 按钮类型, 文本型, 参考 可空, 用于装载按钮类型的变量。 
.参数 元素对象, 对象, 参考 可空, 用于装载元素对象的变量。 



.子程序 按钮_取数量, 整数型, , 成功返回按钮的数量。失败返回0。
.参数 是否标记, 逻辑型, 可空, 是否在每个按钮是写入标记文本。



.子程序 按钮_取索引, 整数型, , 用按钮名称或ID取出网页上指定的按钮索引，失败返回0 。
.参数 标题_名称_ID, 文本型, , 网页按钮的按钮名称或ID



.子程序 按钮_置焦点, 逻辑型, , 向指定的按钮置输入焦点
.参数 标题_名称_ID_索引, 文本型, , 网页按钮的标题、名称、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 按钮_置状态, 逻辑型, , 设置按钮的可视状态
.参数 标题_名称_ID_索引, 文本型, , 网页按钮的标题、名称、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 可空。如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
.参数 隐藏, 逻辑型, 可空, 可空。默认为假。假=可视，真=隐藏



.子程序 按钮_点击, 逻辑型, , 点击网页上的按钮。成功返回真，失败返回假。
.参数 标题_名称_ID_索引, 文本型, , 网页按钮的按钮标题、名称、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 高级按钮_取对象, 对象, , 获取高级按钮的对象
.参数 标题_名称_ID_索引, 文本型, , 网页高级按钮的高级按钮标题、名称、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 高级按钮_取属性, 逻辑型, , 取指定高级按钮的各种属性。成功返回真，失败返回假。
.参数 控件索引, 整数型, , 网页控件的索引。从1开始。
.参数 高级按钮标题, 文本型, 参考 可空, 用于装载高级按钮内容的变量。 
.参数 高级按钮名称, 文本型, 参考 可空, 用于装载高级按钮名称的变量。 
.参数 高级按钮ID, 文本型, 参考 可空, 用于装载高级按钮ID的变量。 
.参数 元素对象, 对象, 参考 可空, 用于装载元素对象的变量。 



.子程序 高级按钮_取数量, 整数型, , 成功返回高级按钮的数量。失败返回0。
.参数 是否标记, 逻辑型, 可空, 是否在每个高级按钮是写入标记文本。



.子程序 高级按钮_取索引, 整数型, , 用高级按钮名称或ID取出网页上指定的高级按钮索引，失败返回0 。
.参数 标题_名称_ID, 文本型, , 网页高级按钮的高级按钮名称或ID
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 高级按钮_点击, 逻辑型, , 点击网页上的高级按钮。成功返回真，失败返回假。
.参数 标题_名称_ID_索引, 文本型, , 网页高级按钮的高级按钮标题、名称、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 高级按钮_取源码, 文本型, , 获取高级按钮的源码
.参数 标题_名称_ID_索引, 文本型, , 网页高级按钮的高级按钮标题、名称、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 高级按钮_置焦点, 逻辑型, , 向指定的高级按钮置输入焦点
.参数 标题_名称_ID_索引, 文本型, , 网页高级按钮的复选框标题、名称、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 高级按钮_置状态, 逻辑型, , 设置高级按钮的可视状态
.参数 标题_名称_ID_索引, 文本型, , 网页高级按钮的标题、名称、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 可空。如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
.参数 隐藏, 逻辑型, 可空, 可空。默认为假。假=可视，真=隐藏



.子程序 图形按钮_取对象, 对象, , 获取到相应的元素对象
.参数 标题_名称_ID_索引, 文本型, , 网页图片按钮的图片按钮标题、名称、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 图形按钮_取属性, 逻辑型, , 取指定图形按钮的各种属性。成功返回真，失败返回假。
.参数 控件索引, 整数型, , 网页控件的索引。从1开始。
.参数 图片按钮标题, 文本型, 参考 可空, 用于装载图片按钮内容的变量。 
.参数 图片按钮名称, 文本型, 参考 可空, 用于装载图片按钮名称的变量。 
.参数 图片按钮ID, 文本型, 参考 可空, 用于装载图片按钮ID的变量。 
.参数 图片按钮类型, 文本型, 参考 可空, 用于装载图片按钮类型的变量。 
.参数 元素对象, 对象, 参考 可空, 用于装载元素对象的变量。 



.子程序 图形按钮_取数量, 整数型, , 成功返回图形按钮的数量。失败返回0。
.参数 是否标记, 逻辑型, 可空, 是否在每个图片按钮是写入标记文本。



.子程序 图形按钮_取索引, 整数型, , 用图形按钮名称或ID取出网页上指定的图形按钮索引，失败返回0 。
.参数 标题_名称_ID, 文本型, , 网页图片按钮的图片按钮名称或ID
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 图形按钮_点击, 逻辑型, , 点击网页上的图形按钮。成功返回真，失败返回假。
.参数 标题_名称_ID_索引, 文本型, , 网页图片按钮的图片按钮标题、名称、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 图形按钮_取源码, 文本型, , 获取指定图形按钮的源码
.参数 标题_名称_ID_索引, 文本型, , 网页图片按钮的图片按钮标题、名称、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 图形按钮_置焦点, 逻辑型, , 向指定的图形按钮置输入焦点
.参数 标题_名称_ID_索引, 文本型, , 网页图形按钮的复选框标题、名称、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 链接_取对象, 对象, , 获取链接的元素对象
.参数 地址_ID_索引_标题, 文本型, , 网页链接的标题、地址、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 链接_取数量, 整数型, , 取网页上的超级链接数目,成功返回链接数目，否则返回0。
.参数 是否标记, 逻辑型, 可空, 是否在每个按钮是写入标记文本。



.子程序 链接_取属性, 逻辑型, , 取指定链接的各种属性。成功返回真。失败返回假。 
.参数 控件索引, 整数型, , 网页控件的索引。从1开始。
.参数 链接标题, 文本型, 可空, 用于装载 链接内容 的变量。 
.参数 链接地址, 文本型, 可空, 用于装载 链接类型 的变量。 
.参数 元素名称, 文本型, 可空, 用于装载 元素名称 的变量。
.参数 元素ID, 文本型, 可空, 用于装载 元素ID 的变量。
.参数 元素对象, 对象, 参考 可空, 用于装载 元素对象 的变量。 



.子程序 链接_取索引, 整数型, , 用链接名称或ID取出网页上指定的链接索引，失败返回0 。
.参数 地址_ID_索引_标题, 文本型, , 网页链接的标题、地址、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 链接_点击, 逻辑型, , 点击网页上的链接。成功返回真。失败返回假。 
.参数 地址_ID_索引_标题, 文本型, , 网页链接的标题、地址、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
.参数 点击后在本窗口打开, 逻辑型, 可空, 可空。点击链接后,在本窗口内打开点击的链接地址



.子程序 链接_取源码, 文本型, , 获取指定链接的源码。
.参数 地址_ID_索引_标题, 文本型, , 网页链接的标题、地址、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 链接_取标题, 文本型, , 获取指定链接的标题。
.参数 地址_ID_索引_标题, 文本型, , 网页链接的标题、地址、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 链接_置焦点, 逻辑型, , 向指定的链接置输入焦点
.参数 地址_ID_索引_标题, 文本型, , 网页链接的标题、地址、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 链接_置状态, 逻辑型, , 设置链接的可视状态
.参数 地址_ID_索引_标题, 文本型, , 网页链接的标题、地址、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 可空。如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
.参数 隐藏, 逻辑型, 可空, 可空。默认为假。假=可视，真=隐藏



.子程序 链接_枚举, 整数型, , 枚举出所有超级链接，成功返回链接数量，失败返回0。
.参数 标题数组, 文本型, 参考 可空 数组, 可空。请提供一个 文本型 的数组变量，用于存放 标题数组
.参数 地址数组, 文本型, 参考 可空 数组, 可空。请提供一个 文本型 的数组变量，用于存放 地址数组
.参数 元素名称数组, 文本型, 参考 可空 数组, 可空。请提供一个 文本型 的数组变量，用于存放 元素名称数组
.参数 元素ID数组, 文本型, 参考 可空 数组, 可空。请提供一个 文本型 的数组变量，用于存放 元素ID数组



.子程序 网页_验证码同步, 字节集, , 直接同步网页上验证码回来，并且可以对图片进行格式转换
.参数 验证码地址, 文本型, , 如果验证码地址包含?号,只需要填写问号之前的地址(包括?号)
.参数 返回格式, 整数型, 可空, 可空。默认不转换   1=bmp　2=jpg　3=gif　4=tiff　5=png



.子程序 图片_点击, 逻辑型, , 点击网页上带有链接的图片。
.参数 索引_地址_ID_title, 文本型, 可空, 可以为“索引_地址_ID_title”。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 图片_取对象, 对象, , 获取指定图片的对象
.参数 索引_地址_ID_title, 文本型, , 网页图片的“索引_地址_ID_title”。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 图片_枚举, 整数型, , 枚举当前网页上的所有图片地址和图片标题，返回图片的数目，失败返回0 。
.参数 地址数组, 文本型, 参考 可空 数组, 用于存放 图片地址 数组的变量。
.参数 图片宽度, 文本型, 参考 可空 数组, 用于存放 图片宽度 数组的变量。
.参数 图片高度, 文本型, 参考 可空 数组, 用于存放 图片高度 数组的变量。
.参数 图片名称, 文本型, 参考 可空 数组, 用于存放 图片名称 数组的变量。
.参数 图片ID, 文本型, 参考 可空 数组, 用于存放 图片ID 数组的变量。
.参数 图片标题, 文本型, 参考 可空 数组, 用于存放 图片标题 数组的变量。



.子程序 图片_取数量, 整数型, , 取网页上的图片数目,成功点击返回图片数目，否则返回0。
.参数 是否标记, 逻辑型, 可空, 是否在每个图片上是写入标记文本，把鼠标放在上面即可看到。



.子程序 图片_取属性, 逻辑型, , 取指定图片的地址。失败返回空文本。
.参数 控件索引, 整数型, , 网页控件的索引。从1开始。
.参数 图片地址, 文本型, 可空, 
.参数 图片宽度, 文本型, 可空, 用于装载图片宽度的变量。
.参数 图片高度, 文本型, 可空, 用于装载图片高度的变量。
.参数 图片标题, 文本型, 可空, 用于装载图片标题的变量。
.参数 图片名称, 文本型, 可空, 用于装载图片名称的变量。
.参数 图片ID, 文本型, 可空, 用于装载图片ID的变量。
.参数 元素对象, 对象, 参考 可空, 用于装载元素对象的变量。 



.子程序 图片_取索引, 整数型, , 用图片地址取出网页上指定的图片索引，失败返回0 。
.参数 地址_名称_ID_title, 文本型, , 网页图片的图片 地址_ID
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 图片_置状态, 逻辑型, , 设置链接的可视状态
.参数 索引_地址_ID_title, 文本型, , 网页图片的“索引_地址_ID_title”。索引从1开始。
.参数 跳过次数, 整数型, 可空, 可空。如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
.参数 隐藏, 逻辑型, 可空, 可空。默认为假。假=可视，真=隐藏



.子程序 组合框_取所有属性, 整数型, , 取出组合框的全部属性。成功返回组合框数量。失败返回0。
.参数 组合框项目数, 整数型, 参考 可空 数组, 用于装载组合框项目数的变量。
.参数 所属类型, 文本型, 参考 可空 数组, 用于装载所属类型的变量。
.参数 控件名称, 文本型, 参考 可空 数组, 用于装载控件名称的变量。
.参数 控件ID, 文本型, 参考 可空 数组, 用于装载控件ID的变量。
.参数 引用代码, 文本型, 参考 可空 数组, 用于装载引用代码的变量。
.参数 是否标记, 逻辑型, 可空, 是否把每个组合框做上标记。



.子程序 组合框_取数量, 整数型, , 取网页上的组合框数目,成功点击返回图片数目，否则返回0。
.参数 是否标记, 逻辑型, 可空, 是否在每个组合框是写入标记文本。



.子程序 组合框_取项目数, 整数型, , 取指定组合框的项目数。成功返回项目数目，失败返回0。
.参数 组合框索引, 整数型, , 索引从1开始。



.子程序 组合框_取项目文本, 文本型, , 取指定组合框的项目文本。成功返回项目文本，失败返回空文本。
.参数 组合框索引, 整数型, , 索引从1开始。
.参数 项目索引, 整数型, , 项目索引,从0开始。



.子程序 组合框_置项目文本, 逻辑型, , 修改指定组合框的项目文本。成功返回真，失败返回假。
.参数 组合框索引, 整数型, , 索引从1开始。
.参数 项目索引, 整数型, , 项目索引,从0开始。
.参数 项目文本, 文本型, , 要写入的项目文本。



.子程序 组合框_取项目数值, 文本型, , 取指定组合框的项目数值。成功返回项目数值，失败返回空文本。
.参数 组合框索引, 整数型, , 索引从1开始。
.参数 项目索引, 整数型, , 项目索引,从0开始。



.子程序 组合框_置项目数值, 逻辑型, , 修改指定组合框的项目数值。成功返回真，失败返回假。
.参数 组合框索引, 整数型, , 索引从1开始。
.参数 项目索引, 整数型, , 项目索引,从0开始。
.参数 项目数值, 文本型, , 要写入的项目数值。



.子程序 组合框_取现行选中项, 整数型, , 取指定组合框的现行选中项。成功返回项目索引，失败返回0。
.参数 组合框索引, 整数型, , 索引从1开始。



.子程序 组合框_置现行选中项, 逻辑型, , 按索引修改指定组合框的现行选中项。成功返回真，失败返回假。
.参数 组合框索引, 整数型, , 索引从1开始。
.参数 项目索引, 整数型, , 项目索引,从0开始。



.子程序 组合框_按项目文本选择, 逻辑型, , 按项目文本修改指定组合框的现行选中项。成功返回真，失败返回假。
.参数 组合框索引, 整数型, , 索引从1开始。
.参数 项目文本, 文本型, , 要选择的项目文本。如果组合框里有个2008的项目，直接写2008就OK了。



.子程序 组合框_置焦点, 逻辑型, , 向指定的组合框置输入焦点
.参数 组合框索引, 整数型, , 索引从1开始。



.子程序 组合框_置状态, 逻辑型, , 设置组合框的可视状态
.参数 组合框索引, 整数型, , 索引从1开始。
.参数 隐藏, 逻辑型, 可空, 可空。默认为假。假=可视，真=隐藏



.子程序 表格_取数量, 整数型, , 取得当前网页内的表格(table)的数目


.子程序 表格_取文本, 文本型, , 取出指定表格内的所有单元格的文本
.参数 表格索引, 整数型, , 表格索引从1开始



.子程序 表格_取源码, 文本型, , 取出指定表格内的所有单元格的源码
.参数 表格索引, 整数型, , 表格索引从1开始



.子程序 表格_取行数, 整数型, , 取出指定表格内的行数
.参数 表格索引, 整数型, , 表格索引从1开始



.子程序 表格_取列数, 整数型, , 取出指定表格内的列数
.参数 表格索引, 整数型, , 表格索引从1开始
.参数 行数索引, 整数型, , 要取出列数的行索引



.子程序 表格_取单元格文本, 文本型, , 取指定单元格的文本
.参数 表格索引, 整数型, , 表格索引从1开始
.参数 行索引, 整数型, , 行索引从1开始
.参数 列索引, 整数型, , 列索引从1开始



.子程序 表格_置单元格文本, 文本型, , 取指定单元格的文本
.参数 表格索引, 整数型, , 表格索引从1开始
.参数 行索引, 整数型, , 行索引从1开始
.参数 列索引, 整数型, , 列索引从1开始
.参数 要置入的单元格文本, 文本型, 可空, 要置入的单元格文本



.子程序 表格_取单元格源码, 文本型, , 取指定单元格的源码
.参数 表格索引, 整数型, , 表格索引从1开始
.参数 行索引, 整数型, , 行索引从1开始
.参数 列索引, 整数型, , 列索引从1开始



.子程序 表格_取单元格数量, 整数型, , 取出指定表格内的所有单元格数量
.参数 表格索引, 整数型, , 表格索引从1开始



.子程序 表单_取对象, 对象, , 获取到表单的元素对象
.参数 名称_ID_索引, 文本型, , 可以为：表单的元素名称、ID或索引
.参数 元素索引, 整数型, 参考 可空, 请提供一个整数型的变量，用于存放该表单的 元素索引



.子程序 表单_提交, 逻辑型, , 有时候登陆网站的时候取不到登陆按钮的元素名称或ID的时候，可以用表单来提交。
.参数 名称_ID_索引, 文本型, , 可以为：表单的元素名称、ID或索引



.子程序 表单_取索引, 整数型, , 用表单的名称、ID取出相对应的索引，失败返回-1
.参数 名称_ID, 文本型, , 用表单的名称、ID取出相对应的索引



.子程序 表单_取源码, 文本型, , 获取指定表单的源码
.参数 名称_ID_索引, 文本型, , 可以为：表单的元素名称、ID或索引



.子程序 表单_取数量, 整数型, , 取回当前网页上的表单数目。


.子程序 表单_取信息, 逻辑型, , 通过表单的索引取回表单ID。
.参数 名称_ID_索引, 文本型, , 可以为：表单的元素名称、ID或索引
.参数 提交方式, 文本型, 可空, 请提供一个文本型的变量，用于存放该表单的 提交方式
.参数 提交地址, 文本型, 可空, 请提供一个文本型的变量，用于存放该表单的 提交地址



.子程序 隐藏表单_取对象, 对象, , 根据网页隐藏表单的Name或ID或索引取回对应的对象。
.参数 名称_ID_索引, 文本型, , 网页文本框的文本框名称或ID或索引。从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 隐藏表单_取数量, 整数型, , 获取网页上的隐藏表单数量。成功返回隐藏表单的数量。失败返回0。


.子程序 隐藏表单_取内容, 文本型, , 获取取指定的网页隐藏表单中的内容，成功返回隐藏表单的内容，失败返回空文本。
.参数 名称_ID_索引, 文本型, , 网页文本框的文本框名称、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 隐藏表单_取索引, 整数型, , 用隐藏表单“名称_ID”取出网页上指定的隐藏表单索引，失败返回0。
.参数 名称_ID, 文本型, , 网页文本框的文本框名称或ID



.子程序 隐藏表单_取属性, 逻辑型, , 取指定隐藏表单的各种属性。成功返回真，失败返回假。
.参数 控件索引, 整数型, , 网页控件的索引。从1开始。
.参数 隐藏表单内容, 文本型, 参考 可空, 用于装载隐藏表单内容的变量。 
.参数 隐藏表单名称, 文本型, 参考 可空, 用于装载隐藏表单名称的变量。 
.参数 隐藏表单ID, 文本型, 参考 可空, 用于装载隐藏表单ID的变量。 
.参数 隐藏表单类型, 文本型, 参考 可空, 用于装载隐藏表单类型的变量。 
.参数 元素对象, 对象, 参考 可空, 用于装载元素对象的变量。 



.子程序 隐藏表单_写内容, 逻辑型, , 往指定的网页隐藏表单写入指定的内容。成功返回真，失败返回假。
.参数 名称_ID_索引, 文本型, , 网页文本框的文本框名称或ID或索引。从1开始。
.参数 欲写内的内容, 文本型, , 欲写内的内容
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 DIV_取对象, 对象, , 获取到相应的元素对象
.参数 标题_索引_ID_名称, 文本型, , 网页DIV的DIV标题、名称、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 DIV_取数量, 整数型, , 取网页上的超级DIV数目,成功返回DIV数目，否则返回0。
.参数 是否标记, 逻辑型, 可空, 是否在每个DIV里是写入标记文本。



.子程序 DIV_取属性, 逻辑型, , 取指定DIV的各种属性。成功返回真。失败返回假。 
.参数 控件索引, 整数型, , 网页控件的索引。从1开始。
.参数 元素类名, 文本型, 可空, 用于装载DIV内容的变量。 
.参数 元素标题, 文本型, 可空, 用于装载DIV内容的变量。 
.参数 元素ID, 文本型, 可空, 
.参数 元素对象, 对象, 参考 可空, 用于装载元素对象的变量。 



.子程序 DIV_取内容, 文本型, , 获取指定DIV的内容
.参数 标题_索引_ID_名称, 文本型, , 网页DIV的DIV标题、名称、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 DIV_写内容, 逻辑型, , 往指定的DIV里写内容
.参数 标题_索引_ID_名称, 文本型, , 网页DIV的DIV标题、名称、ID、索引。索引从1开始。
.参数 欲写入的内容, 文本型, , 欲写入的内容，支持HTML代码
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 DIV_取源码, 文本型, , 获取指定DIV的源码
.参数 标题_索引_ID_名称, 文本型, , 网页DIV的DIV标题、名称、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 DIV_取索引, 整数型, , 通过DIV的“title标题_ID_名称_ClassName”获取他的索引，失败返回0 。
.参数 title标题_ID_名称_ClassName, 文本型, , 网页DIV的“title标题_ID_名称_ClassName”
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 DIV_点击, 逻辑型, , 点击网页上的DIV。成功返回真。失败返回假。 
.参数 标题_索引_ID_Class, 文本型, , 网页DIV的DIV标题、类名、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 DIV_置状态, 逻辑型, , 设置DIV的可视状态
.参数 标题_索引_ID_Class, 文本型, , 网页DIV的DIV标题、类名、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 可空。如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
.参数 隐藏, 逻辑型, 可空, 可空。默认为假。假=可视，真=隐藏



.子程序 ULLI_取数量, 整数型, , 成功返回控件数量，失败返回0。
.参数 是否标记, 逻辑型, 可空, 是否在每个DIV里是写入标记文本。



.子程序 ULLI_取索引, 整数型, , 成功返回控件索引，失败返回0。
.参数 标题_ID_ClassName, 文本型, , 
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 ULLI_选择, 逻辑型, , 成功返回真。失败返回假。
.参数 标题_ID_ClassName, 文本型, , 可以为控件的标题、ID和索引。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 ULLI_取源码, 文本型, , 获取指定ULLI的源码
.参数 标题_ID_ClassName, 文本型, , 可以为控件的标题、ID和索引。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 SPAN_取对象, 对象, , 获取SPAN的元素对象
.参数 标题_索引_ID_Class, 文本型, , 网页SPAN的SPAN标题、类名、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 SPAN_点击, 逻辑型, , 点击网页上的SPAN。成功返回真。失败返回假。 
.参数 标题_索引_ID_Class, 文本型, , 网页SPAN的SPAN标题、类名、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 SPAN_取数量, 整数型, , 成功返回控件数量，失败返回0。
.参数 是否标记, 逻辑型, 可空, 是否在每个DIV里是写入标记文本。



.子程序 SPAN_取索引, 整数型, , 成功返回到文本(到文本(控件索引))，失败返回0。
.参数 标题_ID_Class, 文本型, , 
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 SPAN_取属性, 逻辑型, , 取指定SPAN的各种属性。成功返回真，失败返回假。
.参数 控件索引, 整数型, , 网页控件的索引。从1开始。
.参数 元素标题, 文本型, 可空, 用于装载SPAN 元素标题 的变量。 
.参数 元素类名, 文本型, 可空, 用于装载SPAN 元素类名 的变量。 
.参数 元素内容, 文本型, 可空, 用于装载SPAN 元素内容 的变量。 
.参数 元素ID, 文本型, 可空, 用于装载SPAN 元素ID 的变量。 
.参数 元素对象, 对象, 参考 可空, 用于装载SPAN 元素对象 的变量。 



.子程序 SPAN_取内容, 文本型, , 获取指定SPAN的内容
.参数 标题_索引_ID_Class, 文本型, , 网页SPAN的SPAN标题、类名、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 SPAN_取源码, 文本型, , 获取指定SPAN的源码
.参数 标题_索引_ID_Class, 文本型, , 网页SPAN的SPAN标题、类名、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 SPAN_写内容, 逻辑型, , 往指定SPAN里写内容
.参数 标题_索引_ID_Class, 文本型, , 网页SPAN的SPAN标题、类名、ID、索引。索引从1开始。
.参数 欲写入的内容, 文本型, , 欲写入的内容，支持HTML代码
.参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”



.子程序 SPAN_置状态, 逻辑型, , 设置SPAN的可视状态
.参数 标题_索引_ID_Class, 文本型, , 网页SPAN的SPAN标题、类名、ID、索引。索引从1开始。
.参数 跳过次数, 整数型, 可空, 可空。如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
.参数 隐藏, 逻辑型, 可空, 可空。默认为假。假=可视，真=隐藏



.子程序 网页_屏蔽安全警报, 空白型, , 只对IE6有效。用于屏蔽HTTPS网页操作时弹出的安全警告信息框，感谢坛友【易之易】提供
.参数 屏蔽与解除, 整数型, 可空, 可空，默认为［屏蔽安全警报提示］。1=显示安全警报提示



.子程序 就绪判断_文本关键字, 逻辑型, , 通过【网页文本】关键字判断网页是否载入就绪,如果是就绪并且找到关键字,返回真,否则返回假
.参数 浏览器窗口句柄, 整数型, , 
.参数 欲判断的关键字, 文本型, , 
.参数 超时返回, 整数型, 可空, 可空,单位为毫秒,默认为等待5000毫秒
.参数 网页文档对象, 对象, 可空, 如果此参数不为空,将以此参数为主。第1个参数可以直接填0



.子程序 就绪判断_源码关键字, 逻辑型, , 通过【源码文本】关键字判断网页是否载入就绪,如果是就绪并且找到关键字,返回真,否则返回假
.参数 浏览器窗口句柄, 整数型, , 
.参数 欲判断的关键字, 文本型, , 
.参数 是否区分大小写, 逻辑型, 可空, 
.参数 超时返回, 整数型, 可空, 可空,单位为毫秒,默认为等待5000毫秒
.参数 网页文档对象, 对象, 可空, 如果此参数不为空,将以此参数为主。第1个参数可以直接填0



.类模块 外部树型框, , , 

.子程序 初始化, 逻辑型, , 
.参数 树型框句柄, 整数型, , 
.参数 树型框类名, 文本型, 可空, 
.参数 是否操作外部控件, 逻辑型, 可空, 



.子程序 取项目数, 整数型, , 返回树型框中所有项目的数目。


.子程序 取项目句柄数组, 整数型, , 
.参数 句柄组, 长整数型, 参考 数组, 



.子程序 取缩进层次, 整数型, , 返回指定项目所处缩进层次，层次值从1开始。如果未找到指定项目，返回 0 。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。



.子程序 取缩进层次_句柄, 整数型, , 
.参数 项目句柄, 长整数型, , 



.子程序 取项目文本, 文本型, , 返回指定项目的文本。如果该项目不存在，将返回空文本。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。



.子程序 取项目文本W, 字节集, , 返回指定项目的文本。如果该项目不存在，将返回空文本。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。



.子程序 取项目文本_句柄W, 字节集, , 
.参数 项目句柄, 长整数型, , 



.子程序 取项目文本_句柄, 文本型, , 
.参数 项目句柄, 长整数型, , 



.子程序 取图片, 整数型, , 返回指定项目的图片索引。如果该项目不存在，将返回 -1 
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。



.子程序 取图片_句柄, 整数型, , 
.参数 项目句柄, 长整数型, , 



.子程序 取选中图片, 整数型, , 返回指定项目被选中后的图片索引。如果该项目不存在，将返回 -1 。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。



.子程序 取项目数值, 整数型, , 返回与指定项目相关联的数值。如果该项目不存在，将返回 0 。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。



.子程序 取项目数值_句柄, 整数型, , 返回与指定项目相关联的数值。如果该项目不存在，将返回 0 。
.参数 项目句柄, 长整数型, , 0 为项目一，1 为项目二，如此类推。



.子程序 置图片, 逻辑型, , 设置在指定项目首部所显示图片的索引。成功返回真，失败返回假。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 图片索引, 整数型, , 图片索引用于指定图片组属性中的某张图片，从 0 开始。



.子程序 置选中图片, 逻辑型, , 设置指定项目被选中后所显示图片的索引。成功返回真，失败返回假。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 图片索引, 整数型, , 图片索引用于指定图片组属性中的某张图片，从 0 开始。



.子程序 置项目数值, 逻辑型, , 设置与指定项目相关联的数值。成功返回真，失败返回假。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 欲置入的项目数值, 整数型, 可空, 可以被省略。该数值与指定项目相关联。如果本参数被省略，默认值为 0 。



.子程序 置项目文本W, 逻辑型, , 设置指定项目的文本。成功返回真，失败返回假。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 欲置入的项目文本, 字节集, , 



.子程序 置项目文本, 逻辑型, , 设置指定项目的文本。成功返回真，失败返回假。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 欲置入的项目文本, 文本型, , 



.子程序 保证显示, 空白型, , 
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。



.子程序 保证显示_句柄, 空白型, , 
.参数 项目句柄, 长整数型, , 0 为项目一，1 为项目二，如此类推。



.子程序 扩展, 空白型, , 将指打开指定项目的下属分枝。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。



.子程序 扩展全部, 空白型, , 
.参数 不扩展第一项, 逻辑型, 可空, 



.子程序 收缩, 空白型, , 缩回指定项目的下属分枝。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。



.子程序 收缩全部, 空白型, , 


.子程序 强制刷新, 空白型, , 


.子程序 排序, 空白型, , 
.参数 排序1级缩进, 逻辑型, 可空, 是否排序缩进层次为1的，可空为不排序。
.参数 排序指定层次, 整数型, 可空, 可空，0=全部排序(默认)，排序大于为等于此值的缩进层次，如：2，将排序缩进层次≥2的项目，-1=不排序



.子程序 排序_句柄, 空白型, , 
.参数 项目句柄, 长整数型, , 



.子程序 加入项目, 整数型, , 将单个或一批项目加入到树型框中，如果仅加入一个项目，成功返回加入后该项目所处的位置，失败返回 -1 。如果成批加入项目，成功返回 0 ，失败返回 -1 。成批加入项目可以用作一次性快速加入大量项目到树型框中。
.参数 父项目索引, 整数型, 可空, 可以被省略。指定欲加入项目所处的父项目，0 为项目一，1 为项目二，如此类推。如果没有父项目（即欲加入项目为顶层项目），请提供值 -1 。如果本参数被省略，默认值为 -1 。
.参数 项目数据1, 项目数据, 可空, 用于只加入一个项目，如欲批量加入，请留空
.参数 项目数据2, 项目数据, 可空 数组, 用于批量加入项目
.参数 加入方式, 整数型, 可空, 可以被省略。默认为 3
.参数 加入完成后是否排序, 逻辑型, 可空, 



.子程序 加入项目W, 长整数型, , 
.参数 父项目句柄, 长整数型, 可空, 
.参数 项目文本, 字节集, , 
.参数 图片索引, 整数型, 可空, 
.参数 选中图片索引, 整数型, 可空, 
.参数 项目数值, 整数型, 可空, 
.参数 是否加粗, 逻辑型, 可空, 



.子程序 删除项目, 逻辑型, , 删除树型框中的指定项目。成功返回真，失败返回假。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。



.子程序 清空, 空白型, , 删除树型框中的所有项目。


.子程序 取父项目, 整数型, , 返回指定项目的父项目索引。如果该项目为顶层项目，将返回 -1 。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。



.子程序 取父项目文本, 文本型, , 
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。



.子程序 是否有子项目, 逻辑型, , 如果指定项目存在子项目，返回真，否则返回假。如果本命令返回真，意味着指定项目的下一项即为此项目的第一个子项目。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。



.子程序 是否已扩展, 逻辑型, , 如果树型框中的指定项目具有子项目并已扩展显示，返回真，否则返回假。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 置背景色, 空白型, , 
.参数 背景颜色, 整数型, , 



.子程序 取背景色, 整数型, , 


.子程序 置项目间隔, 空白型, , 
.参数 间隔距离, 整数型, 可空, 默认为16



.子程序 取项目间隔, 整数型, , 


.子程序 置文本颜色, 空白型, , 
.参数 文本颜色, 整数型, , 



.子程序 取文本颜色, 整数型, , 


.子程序 置连线颜色, 空白型, , 
.参数 连线颜色, 整数型, , 



.子程序 取连线颜色, 整数型, , 


.子程序 使用复选框, 空白型, , 


.子程序 使用热点跟踪, 空白型, , 


.子程序 禁止滚动条, 逻辑型, , 返回禁止的状态
.参数 禁止, 逻辑型, 可空, 真为禁止，假为解除禁止。默认为真



.子程序 禁止水平滚动条, 逻辑型, , 返回禁止的状态
.参数 禁止, 逻辑型, 可空, 真为禁止，假为解除禁止。默认为真



.子程序 使用整行选择, 逻辑型, , 要使用本功能，就不能使用显示连线。
.参数 是否使用, 逻辑型, 可空, 真为使用，假为不使用。默认为真。



.子程序 是否选中, 逻辑型, , 
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 是否自动更新数据, 逻辑型, 可空, 可以被省略。选择是否自动进行数据更新。当为真时，每次读取数据时都会对数据进行刷新，可能会因此而减慢速度。默认值为“置自动更新状态”方法所设置的状态。



.子程序 选中项目, 逻辑型, , 操作成功返回真
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 是否选中, 逻辑型, 可空, 可以被省略。设置项目的选中状态，默认为真。



.子程序 加粗, 空白型, , 
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。



.子程序 加粗_句柄, 空白型, , 
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。



.子程序 取消加粗, 空白型, , 将指定项目的标题取消加粗显示。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。



.子程序 取可显示数量, 整数型, , 取当前在树形框的用户区中大约可以显示的项目数量


.子程序 取第一项索引, 整数型, , 取在当前树形框中显示的第一条项目的索引。失败返回-1


.子程序 取现行选中项, 整数型, , 


.子程序 置现行选中项, 空白型, , 
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。



.子程序 置现行选中项_句柄, 空白型, , 
.参数 项目句柄, 整数型, , 0 为项目一，1 为项目二，如此类推。



.子程序 取全部选中项, 变体型, , 返回选中项索引数组


.子程序 更新缓存, 空白型, , 如果项目增加或减少，需要调用此命令进行更新


.子程序 置外部操作, 空白型, , 
.参数 是否操作外部控件, 逻辑型, , 



.子程序 遍历句柄_子项目, 整数型, , 遍历指定父项目下的所有子项目句柄
.参数 父项目句柄, 整数型, , 
.参数 项目数据, 项目数据, 参考 可空 数组, 
.参数 是否提取项目数值, 逻辑型, 可空, 



.子程序 句柄取索引, 整数型, , 用树型框的项目句柄获取他的项目索引
.参数 欲查找句柄, 整数型, , 



.子程序 索引取句柄, 整数型, , 失败返回-1
.参数 项目索引, 整数型, , 从0开始



.子程序 查找项目, 整数型, , 成功返回项目索引
.参数 项目文本, 文本型, , 
.参数 精确查找, 逻辑型, 可空, 可空，默认为假，真=精确查找
.参数 项目句柄, 整数型, 参考 可空, 



.子程序 查找项目数值, 整数型, , 成功返回索引
.参数 项目数值, 整数型, , 



.子程序 查找项目_外部, 整数型, , 返回结果数量，被查找出来的项目数值，对应目标树型框的项目索引
.参数 欲查找的文本, 文本型, , 
.参数 结果树型框句柄, 整数型, , 用于存放结果的树型框句柄
.参数 查找结果是否扩展, 逻辑型, 可空, 查找后，结果项目是否扩展开
.参数 是否同步图标, 逻辑型, 可空, 是否同步项目的图标，会影响速度
.参数 搜索时禁止重绘, 逻辑型, 可空, 禁止重绘，可能会导致未找到时(只有1个项目时，无法重绘)
.参数 搜索状态回调Call, 整数型, 可空, 共2个参数，参数1:状态文本(文本型)，参数2:备用(整数)



.子程序 取子项目数, 整数型, , 获取当前选中项目的子项目数量
.参数 项目索引, 整数型, 可空, 可空，默认取选中项的子项目数



.子程序 双击项目, 空白型, , 
.参数 项目句柄, 长整数型, , 



.子程序 取所有父项目, 整数型, , 获取所有有子项目的项目索引，成功返回获取到的数量
.参数 项目索引数组, 整数型, 参考 数组, 用于存放父项目索引的数组
.参数 排除父项目, 文本型, 可空, 如：类，将不获取类下的所有有子项目的父项目索引
.参数 缩进层次, 整数型, 可空, 可空，默认为所有。获取小于或等于这个层次的父项目，缩进层次从1开始
.参数 指定缩进层次, 整数型, 可空, 可空，默认为所有。如果有指定，第23参数将无效，只获取指定缩进层次的父项目



.子程序 取上一个同级项目, 整数型, , 
.参数 项目索引, 整数型, , 



.子程序 取下一个同级项目, 整数型, , 
.参数 项目索引, 整数型, , 



.类模块 外部控件操作, , , 

.子程序 结束操作, 空白型, , 
.参数 进程句柄, 整数型, , 



.子程序 打开进程, 整数型, , 成功就返回进程句柄
.参数 对象句柄, 整数型, , 



.子程序 写进程内存, 逻辑型, , 
.参数 进程句柄, 整数型, , 
.参数 数据指针, 整数型, , 
.参数 数据地址, 整数型, , 
.参数 数据长度, 整数型, , 



.子程序 分配外部指针, 整数型, , 
.参数 进程句柄, 整数型, , 
.参数 数据长度, 整数型, , 分配的数据长度



.子程序 销毁外部指针, 空白型, , 
.参数 进程句柄, 整数型, , 
.参数 外部指针, 整数型, , 



.子程序 读外部指针数据, 字节集, , 
.参数 进程句柄, 整数型, , 
.参数 外部程序指针, 整数型, , 
.参数 读取数据大小, 整数型, , 



.类模块 类_系统服务, , , 使用例程 - http://bbs.125.la/thread-102354-1-1.html

.子程序 取服务状态, 整数型, , 返回值如下:1=已停止;2=开始;3=停止;4=正在运行;5=继续挂起;6=暂停挂起;7暂停.
.参数 服务名, 文本型, , 



.子程序 取服务类型, 整数型, , 返回值如下:1=设备驱动;2=文件系统驱动;16=进程;32=自己进程或其它服务;256=交互服务.
.参数 服务名, 文本型, , 



.子程序 取服务描述, 文本型, , 成功返回服务描述文本，失败返回空！
.参数 服务名, 文本型, , 



.子程序 置服务描述, 逻辑型, , 修改指定系统服务描述，成功返回真，失败返回假。
.参数 服务名, 文本型, , 非显示名称。
.参数 新描述, 文本型, , 



.子程序 取显示名称, 文本型, , 根据系统服务数据库名称，获取显示名称。
.参数 服务名, 文本型, , 



.子程序 取服务名称, 文本型, , 根据系统服务数据库名称，获取显示名称。
.参数 显示名称, 文本型, , 



.子程序 安装服务, 逻辑型, , 创建一个系统服务项，成功返回真，失败返回假。
.参数 服务名称, 文本型, , 系统服务数据库中ID名称，不能为中文！
.参数 显示名称, 文本型, , 
.参数 执行文件, 文本型, , 文件绝对路径
.参数 服务描述, 文本型, 可空, 
.参数 允许桌面交互, 逻辑型, 可空, 可为空,默认不允许与桌面进行交互.
.参数 服务类型, 整数型, 可空, 可为空,默认即进程.1=内核驱动;2=文件系统驱动;16=进程;32=其它服务.
.参数 启动类型, 整数型, 可空, 可为空,默认即手动,参数;2=自动;3=手动;4=禁用.
.参数 依存关系, 文本型, 可空, 某些服务依赖于其它服务,系统驱动程序或加载顺序组.
.参数 登录用户, 文本型, 可空, 非本地系统,登陆用户名.
.参数 登录密码, 文本型, 可空, 



.子程序 卸载服务, 逻辑型, , 如果服务正在运动会先停止服务然后再删除。成功返回真，失败返回假。
.参数 服务名称, 文本型, , 



.子程序 开始服务, 逻辑型, , 开启一个系统服务，成功返回真，如果系统服务被禁用则返回假。
.参数 服务名, 文本型, , 需提供系统服务数据库名非显示名称



.子程序 停止服务, 逻辑型, , 停止一个存在运行的系统服务，成功返回真，失败返回假。
.参数 服务名, 文本型, , 需提供服务名称非显示名称。



.子程序 暂停服务, 逻辑型, , 暂停一个存在运行的系统服务，成功返回真，失败返回假。
.参数 服务名称, 文本型, , 需提供服务名称非显示名称。



.子程序 恢复服务, 逻辑型, , 恢复被暂停的系统服务，成功返回真，失败返回假。
.参数 服务名称, 文本型, , 需提供服务名称非显示名称。



.子程序 是否存在, 逻辑型, , 判断一个系统服务是否存在,存在返回真,否则返回假.
.参数 服务名称, 文本型, , 需提供服务名称非显示名称。



.子程序 置启动类型, 逻辑型, , 修改一个已有的系统服务启动类型，有些服务有权限是否允许操作，成功返回真，失败返回假。
.参数 服务名称, 文本型, , 提供服务名称非服务显示名称
.参数 启动类型, 整数型, , 启动类型以下选项：2=自动(延迟启动);3=手动;4=禁用



.子程序 取启动类型, 整数型, , 获取指定系统服务启动类型，成功返回启动类型值;1=自动;2=自动(延迟启动);3=手动;4=禁用，失败返回-1。
.参数 服务名称, 文本型, , 



.子程序 取文件路径, 文本型, , 获取指定系统服务可执行文件的路径，失败返回空文本。
.参数 服务名称, 文本型, , 



.子程序 置文件路径, 逻辑型, , 修改一个已有的系统服务可执行文件的路径，有些服务有权限是否允许操作，成功返回真，失败返回假。
.参数 服务名称, 文本型, , 提供服务名称非服务显示名称
.参数 文件路径, 文本型, , 



.子程序 取登录类型, 文本型, , 获取指定服务登录类型,如,本地系统,本地服务或网络服务.
.参数 服务名称, 文本型, , 



.子程序 枚举服务, 整数型, , 枚举本机安装的系统服务，成功返回系统服务数量，失败返回0.
.参数 服务类型, 整数型, , 1、正在运行服务 2、未运行的服务  3、所有的服务
.参数 服务列表, 精易_系统服务列表, 数组, 储存返回值。



.子程序 取服务数, 整数型, , 枚举本机安装的系统服务，成功返回系统服务数量，失败返回0.
.参数 服务状态, 整数型, 可空, 1、正在运行服务 2、未运行的服务  3、所有的服务



.子程序 取指定服务信息, 空白型, , 
.参数 参_服务名称, 文本型, , 
.参数 参_服务状态, 整数型, , 1、正在运行服务 2、未运行的服务  3、所有的服务
.参数 参_服务信息, 精易_系统服务列表Ex, 参考, 



.子程序 枚举服务Ex, 整数型, , 枚举本机安装的系统服务，成功返回系统服务数量，失败返回0.
.参数 服务状态, 整数型, , 1、正在运行服务 2、未运行的服务  3、所有的服务
.参数 服务列表, 精易_系统服务列表Ex, 数组, 储存返回值。



.子程序 重启服务, 逻辑型, , 重新启动系统服务，成功返回真，失败返回假
.参数 参_服务名, 文本型, , 



.类模块 文件拖放, , , 文件拖放

.子程序 拖放对象_注册, 空白型, , 将类命令声明到程序集，局部变量会失败
.参数 窗口句柄, 整数型, , 
.参数 挂接拖放事件, 子程序指针, , 创建一个取回文件名子程序.需要带参数;   参数1:文本型



.子程序 拖放对象_撤销, 空白型, , 


.类模块 注册表操作, , , 

.子程序 枚举子项, 整数型, , 枚举指定项名称下的子项(成功返回子项目数,失败返回-1)
.参数 项名称, 文本型, , 
.参数 子项, 文本型, 可空 数组, 获取的子项数组



.子程序 枚举键名, 整数型, , 枚举指定项名称下的键名(成功返回键名数,失败返回-1)
.参数 项名称, 文本型, , 
.参数 键名, 文本型, 可空 数组, 获取的键名数组
.参数 键值, 字节集, 可空 数组, 对应键名的键值
.参数 类型, 整数型, 可空 数组, 对应键值的类型



.子程序 取键名类型, 文本型, , 失败返回空文本
.参数 项名称, 文本型, , 如：HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\NetBT\Parameters
.参数 键名, 文本型, 可空, 如：3600，留空将取第一个，(默认)



.子程序 是否存在, 逻辑型, , 判断指定注册项名称(键名)是否存在(存在返回真,否则返回假)
.参数 项名称, 文本型, , 欲判断的项名称
.参数 键名, 文本型, 可空, 欲判断的键名.如果为空则只判断项名称是否存在



.子程序 刷新项, 逻辑型, , 将对项和它的子项作出的改动实际写入磁盘
.参数 项名称, 文本型, , 



.子程序 写字节集, 逻辑型, , [REG_NONE]
.参数 项名称, 文本型, , 
.参数 键名, 文本型, , 
.参数 欲写入值, 字节集, , 
.参数 类型, 整数型, 可空, 可空：写入的类型



.子程序 取字节集, 字节集, , [REG_NONE]
.参数 项名称, 文本型, , 
.参数 键名, 文本型, , 
.参数 类型, 整数型, 参考 可空, 可空：取出数据的类型



.子程序 写注册项Ex, 逻辑型, , 用于写入带有斜杠的注册项
.参数 根目录, 整数型, , 
.参数 注册表路径, 文本型, , 
.参数 注册表子项名, 文本型, , 
.参数 欲写入值, 字节集, , 
.参数 写入类型, 整数型, 可空, #REG_



.子程序 写DWORD值, 逻辑型, , [REG_DWORD]成功返回真,失败返回假
.参数 项名称, 文本型, , 如：HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\NetBT\Parameters
.参数 键名, 文本型, , 如：3600
.参数 欲写入值, 整数型, , 如：0



.子程序 取DWORD值, 整数型, , [REG_DWORD]
.参数 项名称, 文本型, , 如：HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\NetBT\Parameters
.参数 键名, 文本型, , 如：3600



.子程序 写二进制值, 逻辑型, , [REG_BINARY]成功返回真,失败返回假
.参数 项名称, 文本型, , 如：HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\NetBT\Parameters
.参数 键名, 文本型, , 如：3600
.参数 欲写入值, 字节集, , 



.子程序 取二进制值, 字节集, , [REG_BINARY]
.参数 项名称, 文本型, , 如：HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\NetBT\Parameters
.参数 键名, 文本型, , 如：3600



.子程序 写字符串值, 逻辑型, , [REG_SZ]成功返回真,失败返回假
.参数 项名称, 文本型, , 如：HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\NetBT\Parameters
.参数 键名, 文本型, , 如：3600
.参数 欲写入值, 文本型, , 



.子程序 取字符串值, 文本型, , [REG_SZ]
.参数 项名称, 文本型, , 如：HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\NetBT\Parameters
.参数 键名, 文本型, , 如：3600



.子程序 写多字符串值, 逻辑型, , [REG_MULTI_SZ]成功返回真,失败返回假
.参数 项名称, 文本型, , 如：HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\NetBT\Parameters
.参数 键名, 文本型, , 如：3600
.参数 欲写入值, 文本型, , 



.子程序 取多字符串值, 文本型, , [REG_MULTI_SZ]
.参数 项名称, 文本型, , 如：HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\NetBT\Parameters
.参数 键名, 文本型, , 如：3600



.子程序 写可扩充字符串值, 逻辑型, , [REG_EXPAND_SZ]成功返回真,失败返回假
.参数 项名称, 文本型, , 如：HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\NetBT\Parameters
.参数 键名, 文本型, , 如：3600
.参数 欲写入值, 文本型, , 



.子程序 取可扩充字符串值, 文本型, , [REG_REG_EXPAND_SZ]
.参数 项名称, 文本型, , 
.参数 键名, 文本型, , 



.子程序 删除项, 逻辑型, , 删除指定项名称以及它的所有子项与键值
.参数 项名称, 文本型, , 欲删除的项名称,尾部不要加"\"



.子程序 删除键名, 逻辑型, , 删除指定项下的某个键名
.参数 项名称, 文本型, , 欲删除键名所在的项名称
.参数 键名, 文本型, , 欲删除的键名



.子程序 取字符串值_CMD, 文本型, , 用CMD读取方式取指定字符串值
.参数 项名称, 文本型, , 如：HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\NetBT\Parameters
.参数 类型, 整数型, 可空, 如：#REG_SZ
.参数 键名, 文本型, , 如：3600



.类模块 外部超级列表框, , , 

.子程序 初始化, 逻辑型, , 调用此类必须初始化此命令，否则无法调用后面的命令
.参数 超级列表框句柄, 整数型, , 
.参数 是否为外部进程的超级列表框, 逻辑型, 可空, 可以被省略。当为真时，可对这个外部进程一超级列表框进行操作。默认为假。
.参数 超级列表框类名, 文本型, 可空, 默认为空  SYSLISTVIEW32 



.子程序 取标题, 文本型, , 取指定表项或子项的标题。
.参数 表项索引, 整数型, , 用于指定列表框中的某一项目，索引值从 0 开始。
.参数 列索引, 整数型, 可空, 可以被省略。用作指定报表型列表框中项目所处的列，索引值从 0 开始，如果当前列表框类型不是报表型列表框，提供 0 值即可。如果本参数被省略，默认值为 0 。
.参数 缓冲尺寸, 整数型, 可空, 可以被省略



.子程序 取图片, 整数型, , 
.参数 表项索引, 整数型, , 用于指定列表框中的某一项目，索引值从 0 开始。
.参数 列索引, 整数型, 可空, 可以被省略。用作指定报表型列表框中项目所处的列，索引值从 0 开始，如果当前列表框类型不是报表型列表框，提供 0 值即可。如果本参数被省略，默认值为 0 。



.子程序 取当前状态图片, 整数型, , 取回指定表项的当前状态图片索引，图片索引指向状态图片组属性中的某一图片，从 0 开始，-1 表示无图片。如果“是否有检查框”属性为真，返回值是当前检查框的选中状态，1表示被选中，0表示未选中。
.参数 表项索引, 整数型, , 用于指定列表框中的某一项目，索引值从 0 开始。



.子程序 取缩进数目, 整数型, , 
.参数 表项索引, 整数型, , 。用于指定列表框中的某一项目，索引值从 0 开始。



.子程序 取表项数, 整数型, , 返回列表框中所有表项的数目


.子程序 取表项数值, 整数型, , 
.参数 表项索引, 整数型, , 用于指定列表框中的某一项目，索引值从 0 开始。



.子程序 置标题, 空白型, , 设置指定表项或子项的标题。
.参数 表项索引, 整数型, , 用于指定列表框中的某一项目，索引值从 0 开始。
.参数 列索引, 整数型, 可空, 可以被省略。用作指定报表型列表框中项目所处的列，索引值从 0 开始，如果当前列表框类型不是报表型列表框，提供 0 值即可。如果本参数被省略，默认值为 0 。
.参数 标题, 文本型, 可空, 可以被省略。本参数指定表项或子项的标题文本。如果被省略，默认值为空文本。



.子程序 置图片, 空白型, , 
.参数 表项索引, 整数型, , 用于指定列表框中的某一项目，索引值从 0 开始。
.参数 列索引, 整数型, 可空, 可以被省略。用作指定报表型列表框中项目所处的列，索引值从 0 开始，如果当前列表框类型不是报表型列表框，提供 0 值即可。如果本参数被省略，默认值为 0 。
.参数 图片索引, 整数型, 可空, 可以被省略。图片索引用于指定“图片组”属性中的某张图片。索引值从 0 开始，-1 表示无图片。如果本参数被省略，默认值为 -1 。



.子程序 置状态图片, 空白型, , 
.参数 表项索引, 整数型, , 用于指定列表框中的某一项目，索引值从 0 开始。
.参数 状态图片索引, 整数型, 可空, 可以被省略。状态图片索引用于指定“状态图片组”属性中的某张图片。索引值从 0 开始，-1 表示无图片。如果本参数被省略，默认值为 -1 。



.子程序 置缩进数目, 空白型, , 设置指定表项的缩进数目。
.参数 表项索引, 整数型, , 用于指定列表框中的某一项目，索引值从 0 开始。
.参数 缩进数目, 整数型, 可空, 可以被省略。“缩进数目”仅在报表型列表框才有效，用作指定显示时在表项首部增加的空白数。如果本参数被省略，默认值为 0 。



.子程序 置表项数值, 空白型, , 设置与指定表项相关联的数值
.参数 表项索引, 整数型, , 用于指定列表框中的某一项目，索引值从 0 开始。
.参数 表项数值, 整数型, 可空, 可以被省略。该数值与指定表项相关联。如果本参数被省略，默认值为 0 。



.子程序 取被选择表项, 变体型, , 返回一个整数数组，內含所有当前被选择表项的位置索引。如果当前没有被选择表项，返回空数组。


.子程序 取被选中表项, 变体型, , 如果“是否有检查框”属性为真，返回当前所有检查框被选中的表项位置索引


.子程序 取已选择表项数, 整数型, , 返回当前已被选择表项的数目


.子程序 是否被选择, 逻辑型, , 判断指定表项是否已经被选择，如已被选择，返回真，否则返回假。
.参数 表项索引, 整数型, , 用于指定列表框中的某一项目，索引值从 0 开始。



.子程序 选择表项, 空白型, , 
.参数 表项索引, 整数型, , 用于指定列表框中的某一项目，索引值从 0 开始。



.子程序 取消表项选择, 空白型, , 取消对指定表项的选择。
.参数 表项索引, 整数型, , 用于指定列表框中的某一项目，索引值从 0 开始。



.子程序 插入表项, 整数型, , 
.参数 插入位置, 整数型, 可空, 可以被省略。指定新表项插入时的位置索引，索引值从 0 开始。如果提供 -1 ，则插入到列表框的尾部。如果本参数被省略，默认值为 -1 。
.参数 标题, 文本型, 可空, 可以被省略。本参数指定表项的标题文本。如果被省略，默认值为空文本。
.参数 图片索引, 整数型, 可空, 可以被省略。图片索引用于指定“图片组”属性中的某张图片。索引值从 0 开始，-1 表示无图片。如果本参数被省略，默认值为 -1 。
.参数 状态图片索引, 整数型, 可空, 可以被省略。状态图片索引用于指定“状态图片组”属性中的某张图片。索引值从 0 开始，-1 表示无图片。如果本参数被省略，默认值为 -1 。
.参数 缩进数目, 整数型, 可空, 可以被省略。“缩进数目”仅在报表型列表框才有效，用作指定显示时在表项首部增加的空白数。如果本参数被省略，默认值为 0 。
.参数 表项数值, 整数型, 可空, 可以被省略。该数值与指定表项相关联。如果本参数被省略，默认值为 0 。



.子程序 高速插入表项, 空白型, , 
.参数 插入位置, 整数型, 可空, 可以被省略。指定新表项插入时的位置索引，索引值从 0 开始。如果提供 -1 ，则插入到列表框的尾部。如果本参数被省略，默认值为 -1 。
.参数 列表框信息, 列表框信息, 数组, 
.参数 排序方式, 整数型, 可空, 可以被省略。指定新新插入数据的排序方式。默认为“#排序方式_不排序”。如要逆向排序，请将常量位取反。如要对指定列排序，请用#排序方式_表项列标题排序+要排序的列索引



.子程序 删除表项, 空白型, , 
.参数 表项索引, 整数型, , 用于指定列表框中的某一项目，索引值从 0 开始。



.子程序 全部删除, 空白型, , 


.子程序 查找表项, 整数型, , 
.参数 标题, 文本型, , 本参数指定欲查找表项的标题文本。
.参数 起始查找位置, 整数型, 可空, 可以被省略。本参数指定查找表项的起始位置。如果本参数被省略，默认值为 0  ，即从首项开始查找。
.参数 是否精确匹配, 逻辑型, 可空, 可以被省略。本参数指定匹配标题文本时是否为精确匹配，如果本参数为假，则只要表项标题首部包含指定文本即认为匹配成功。如果本参数被省略，默认值为真。
.参数 如果查找不到是否从头开始, 逻辑型, 可空, 可以被省略。本参数指定在查找标题文本时，如果从“起始查找位置”查找不到，是否从头开始查找。默认值为假。



.子程序 查找表项数值, 整数型, , 
.参数 起始查找位置, 整数型, 可空, 可以被省略。本参数指定查找表项的起始位置。如果本参数被省略，默认值为 0  ，即从首项开始查找。
.参数 表项数值, 整数型, 可空, 可以被省略。该数值与指定表项相关联。如果本参数被省略，默认值为 0 。
.参数 如果查找不到是否从头开始, 逻辑型, 可空, 可以被省略。本参数指定在查找标题文本时，如果从“起始查找位置”查找不到，是否从头开始查找。默认值为假。



.子程序 保证显示, 空白型, , 
.参数 表项索引, 整数型, , 



.子程序 排列图标, 空白型, , 自动排列大图标或小图标列表框中的图标。


.子程序 取列标题, 文本型, , 返回报表型列表框中指定列的标题。
.参数 列索引, 整数型, , 用作指定报表型列表框中项目所处的列，索引值从 0 开始。



.子程序 取列对齐方式, 整数型, , 取回报表型列表框中指定列的对齐方式。返回值为以下常量之一： 0：0； 1：1； 2：2；失败返回-1。
.参数 列索引, 整数型, , 用作指定报表型列表框中项目所处的列，索引值从 0 开始。



.子程序 取列宽, 整数型, , 返回报表型列表框中指定列的宽度，如指定列不存在，返回 0 。
.参数 列索引, 整数型, , 用作指定报表型列表框中项目所处的列，索引值从 0 开始。



.子程序 取列图片, 整数型, , 返回报表型列表框中指定列的图片索引
.参数 列索引, 整数型, , 用作指定报表型列表框中项目所处的列，索引值从 0 开始。



.子程序 图片是否居右, 逻辑型, , 如果报表型列表框中指定列的图片居右显示，返回真，否则返回假
.参数 列索引, 整数型, , 用作指定报表型列表框中项目所处的列，索引值从 0 开始。



.子程序 置列标题, 逻辑型, , 设置报表型列表框中指定列的标题
.参数 列索引, 整数型, , 用作指定报表型列表框中项目所处的列，索引值从 0 开始。
.参数 标题, 文本型, 可空, 可以被省略。本参数指定报表列的标题文本。如果被省略，默认值为空文本。



.子程序 置列宽, 空白型, , 设置报表型列表框中指定列的宽度
.参数 列索引, 整数型, , 用作指定报表型列表框中项目所处的列，索引值从 0 开始。
.参数 列宽, 整数型, 可空, 可以被省略。本参数指定报表列的宽度，单位为像素。如果参数值提供为 -1 ，则根据列数据最大宽度自动调整列尺寸，如果参数值提供为 -2 ，则根据列标题宽度自动调整列尺寸。如果本参数被省略，默认值为 -1 。



.子程序 置列图片, 空白型, , 设置报表型列表框中指定列的标志图片。
.参数 列索引, 整数型, , 用作指定报表型列表框中项目所处的列，索引值从 0 开始。
.参数 图片索引, 整数型, 可空, 可以被省略。图片索引用于指定“表头图片组”属性中的某张图片。索引值从 0 开始，-1 表示无图片。如果本参数被省略，默认值为 -1 。



.子程序 取列数, 整数型, , 返回报表型列表框中列的总数


.子程序 插入列, 整数型, , 在报表型列表框中指定位置插入新的列，成功返回新列的位置索引，失败返回 -1 。
.参数 插入位置, 整数型, 可空, 可以被省略。指定新列插入时的位置索引，索引值从 0 开始。如果提供 -1 ，则插入到尾部。如果本参数被省略，默认值为 -1 。
.参数 标题, 文本型, 可空, 可以被省略。本参数指定报表列的标题文本。如果被省略，默认值为空文本。
.参数 列宽, 整数型, 可空, 可以被省略。本参数指定报表列的宽度，单位为像素。如果被省略，默认值为 50 。
.参数 对齐方式, 整数型, 可空, 可以被省略。参数可以为以下常量之一： 0：0； 1：1； 2：2。如果本参数被省略，默认值为“0”。
.参数 图片索引, 整数型, 可空, 可以被省略。图片索引用于指定“表头图片组”属性中的某张图片。索引值从 0 开始，-1 表示无图片。如果本参数被省略，默认值为 -1 。
.参数 图片是否居右, 逻辑型, 可空, 可以被省略。指定图片是否显示在右边，如果本参数被省略，默认值为假。



.子程序 删除列, 空白型, , 删除报表型列表框中指定位置处的列。
.参数 列索引, 整数型, , 用作指定报表型列表框中项目所处的列，索引值从 0 开始。



.子程序 进入编辑, 空白型, , 让指定表项进入编辑状态，执行本命令成功的前提是“允许编辑”属性为真。
.参数 表项索引, 整数型, , 用于指定列表框中的某一项目，索引值从 0 开始。



.子程序 读超级列表框项目数据, 空白型, , 取出全部的项目数据
.参数 列表框信息, 列表框信息, 参考 可空 数组, 



.子程序 取文本颜色, 整数型, , 


.子程序 置文本颜色, 空白型, , 
.参数 文本颜色, 整数型, , 



.子程序 刷新显示, 空白型, , 


.子程序 取第一项索引, 整数型, , 取在当前超级列表框中显示的第一条项目的索引。失败返回-1


.子程序 取可显示数量, 整数型, , 取当前在超级列表框的用户区中大约可以显示的项目数量


.子程序 取文本背景颜色, 整数型, , 


.子程序 置文本背景颜色, 空白型, , 
.参数 背景颜色, 整数型, , 



.子程序 取背景颜色, 整数型, , 


.子程序 置背景颜色, 空白型, , 
.参数 背景颜色, 整数型, , 



.子程序 取类型, 整数型, , 


.子程序 置类型, 空白型, , 
.参数 类型, 整数型, , 



.子程序 取背景图片, 文本型, , 返回图片文件名路径


.子程序 置背景图片, 空白型, , 设置背景图片
.参数 图片文件名, 文本型, , 
.参数 是否平铺, 逻辑型, 可空, 可以省略。默认为真。



.子程序 取鼠标指针所在的索引, 整数型, , 如果鼠标指针在超级列表框范围内，取当前其指向的项目索引


.子程序 取项目行距, 整数型, , 


.子程序 取编辑框句柄, 整数型, , 当列表框在进行编辑时，返回这个编辑框的句柄


.子程序 取表项间距, 空白型, , 
.参数 水平间距, 整数型, 参考, 用于返回表项的水平间距
.参数 垂直间距, 整数型, 参考, 用于返回表项的垂直间距
.参数 列表框类型, 逻辑型, 可空, 可以被省略。当为真时取回小图标列表框的项目间距。当为假时取回大图标列表框的项目间距。默认为假。



.子程序 列排序, 空白型, , 当超级列表框的类型是报表列表框时才能使用。使用本方法时，请将超级列表框的“排序方式”置为“0.不排序”
.参数 列索引, 整数型, , 要排序的列索引，从0计起。
.参数 排序方式, 逻辑型, 可空, 可以被省略。当为真时为正向排序，当为假时为逆向排序。默认为真，正向排序。



.子程序 单一选择, 逻辑型, , 
.参数 是否单一选择, 逻辑型, 可空, 可以被省略。当被省略时，只返回当前的单一选择设置状态，而不改变其状态。



.子程序 取现行选中项, 整数型, , 


.子程序 置现行选中项, 空白型, , 
.参数 现行选中项, 整数型, , 



.子程序 导出Excel, 逻辑型, , 把超级列表框内容导出为Excel表格文件，成功返回真，失败返回假。注：只能导出报表列表框。
.参数 保存文件, 文本型, , 保存到目标文件，后缀名一般为“xls”。注：如果文件已存在则会重写改文件，如果不能打开文件则返回假。
.参数 保留表头, 逻辑型, 可空, 是否把超级列表框表头一起导出到表格文件，如果不需要导出表头，请留空此值或者赋值“假”。



.子程序 _置外部操作, 空白型, , 如果是外部控件，就要用这个方法初始化


.子程序 _销毁外部操作, 空白型, , 如果不再需要对外部控件进行初始化，可用这个销毁


.子程序 取表项位置, 整数型, , 取出表项在列表框中的坐标位置
.参数 索引, 整数型, , 
.参数 点, POINT, 参考, 用于装载坐标的变量



.类模块 内存共享, , , 

.子程序 申请, 整数型, , 申请指定大小的内存空间,返回内存地址
.参数 内存大小, 整数型, , 要申请的内存空间大小



.子程序 写入, 整数型, , 如果指定的内存地址不存在,将自动申请并返回新内存地址,否则将返回原来的内存地址
.参数 地址, 整数型, 可空, 指定写入地址,如果为空将自动创建
.参数 数据, 字节集, 参考, 欲写入的字节集数据



.子程序 读取, 字节集, , 读取地址数据！！注意，也可以调用核心库方法 指针到字节集(地址,内存共享.取内存长度(地址)) 来同样取得数据
.参数 地址, 整数型, , 由内存映射返回的地址
.参数 读取位置, 整数型, 可空, 从1开始到结束,如果留空则从首地址开始,超出作用范围将指定0
.参数 长度, 整数型, 可空, 若读取位置+长度超过总数据长度,将自动指定0



.子程序 释放, 逻辑型, , 释放指定的内存
.参数 内存地址, 整数型, , 由内存映射返回的地址



.子程序 取内存长度, 整数型, , 取指定内存地址的长度
.参数 地址, 整数型, , 内存地址



.子程序 全部释放, 空白型, , 释放所有申请的内存


.类模块 ADSL拨号类, , , 

.子程序 _取本机IP, 整数型, , 返回IP的个数，如2:本地IP和外网IP
.参数 IP数组, 文本型, 数组, 用于装载IP的文本数组



.子程序 取外网IP, 文本型, , 获取本机的外网IP


.子程序 重拨, 文本型, , 重拨成功返回外网IP，失败返回空文本
.参数 连接名称, 文本型, 可空, 可空,默认为 宽带连接  已建立的拨号连接的名称
.参数 用户名, 文本型, , 用于拨号的用户名
.参数 密码, 文本型, , 用于拨号的密码



.子程序 拨号, 整数型, , 通过拨号建立网络连接，成功返回连接句柄，失败返回0
.参数 连接名称, 文本型, , 已建立的拨号连接的名称,一般为 宽带连接
.参数 用户名, 文本型, , 用于拨号的用户名
.参数 密码, 文本型, , 用于拨号的密码



.子程序 断开, 逻辑型, , 断开当前拨号网络连接


.子程序 重拨_cmd, 空白型, , 宽带重拨，cmd方式
.参数 宽带名称, 文本型, 可空, 可空。默认为“宽带连接”
.参数 用户名称, 文本型, , 
.参数 用户密码, 文本型, , 



.子程序 拨号_cmd, 空白型, , CMD方式拨号
.参数 宽带名称, 文本型, 可空, 可空。默认为“宽带连接”
.参数 用户名称, 文本型, , 
.参数 用户密码, 文本型, , 



.子程序 断开_cmd, 逻辑型, , 断开宽带连接，cmd方式。
.参数 连接名称, 文本型, 可空, 可空,默认为“宽带连接”。已建立的拨号连接的名称



.子程序 取连接名称, 文本型, , 利用索引取出电脑中拨号的连接名称，成功返回连接名称，失败返回空文本
.参数 连接索引, 整数型, , 欲取名称的连接索引 索引从1开始 最大到10 
.参数 所有名称数组, 文本型, 参考 可空 数组, 存放所有连接名称的文本数组



.子程序 取连接数量, 整数型, , 取系统中已经建立的连接数量


.子程序 取连接状态, 逻辑型, , 判断指定的连接是否已连接，如果已连接返回真，否则返回假;
.参数 连接名称, 文本型, , 欲判断的连接名称



.子程序 连接是否存在, 逻辑型, , 如果指定的连接名称存在返回真，否则返回假;
.参数 连接名称, 文本型, , 欲判断的连接名称



.子程序 断开所有连接, 空白型, , 


.子程序 创建新拨号连接, 逻辑型, , 建立一个ADS拨号连接，成功反回真，失败返回假;
.参数 连接名称, 文本型, , 拨号连接的名称,可自定义,如"我的ADSL连接"
.参数 用户名, 文本型, 可空, 用于拨号的用户名
.参数 密码, 文本型, 可空, 用于拨号的密码
.参数 拨号类型, 整数型, 可空, 可空,默认为1  1=PPPoE虚拟拨号  2=电话拨号



.子程序 设置拨号连接, 逻辑型, , 设置已经存在的连接的用户名或密码
.参数 连接名称, 文本型, , 已建立的拨号连接的名称
.参数 用户名, 文本型, , 用于拨号的用户名,留空将不写入连接中
.参数 密码, 文本型, 可空, 用于拨号的密码



.子程序 删除拨号连接, 空白型, , 
.参数 连接名称, 文本型, , 



.子程序 取宽带用户名密码, 逻辑型, , 成功返回真，失败返回假  注：只有ADSL拨号上网的才能取
.参数 连接名称, 文本型, 可空, 请提供一个文本变量,用于存放 连接名称
.参数 宽带用户名, 文本型, 可空, 请提供一个文本变量,用于存放 宽带用户名
.参数 宽带密码, 文本型, 可空, 请提供一个文本变量,用于存放 宽带密码



.类模块 正则表达式类, , , 

.子程序 创建, 逻辑型, , 根据指定的正则表达式文本创建一个正则表达式对象。本对象中的原有内容将被释放
.参数 正则表达式文本, 文本型, , 比如“易语言4\.0(模块|支持库)?”
.参数 被搜索的文本, 文本型, , 
.参数 是否区分大小写, 逻辑型, 可空, 可以留空,默认为假,不区分大小写; 真为区分大小写;本参数指定这个正则表达式在创建成功后进行匹配、搜索、替换时，是否区分大小写;
.参数 是否匹配多行, 逻辑型, 可空, 可以留空,默认为真,允许匹配多行; 如果本成员值为真，字符“^”不仅匹配目标文本的开头，而且匹配目标文本中换行符（字符(10)，字符(13)或 #换行符）的后面；字符“$”不仅匹配目标文本的结尾，而且匹配目标文本中换行符的前面。否则字符“^”仅仅匹配目标文本的开头，“$”也仅仅匹配目标文本的结尾。
.参数 是否全局匹配, 逻辑型, 可空, 可以留空，默认为真，全局匹配
.参数 自动替换引号, 逻辑型, 可空, 可空。默认为不替换。说明：正则表达式文本为【formhash" value="7b4aa6c5】，这里面的引号处理起来很麻烦，直接把此参数设置为真，把"换成 #引号 再传进来就可以了，如：【formhash#引号 value=#引号7b4aa6c5】



.子程序 查看, 空白型, ,  


.子程序 取正则文本, 文本型, , 返回以文本形式表示的正则表达式。如果该对象尚未创建，则返回空文本。本命令为高级对象成员命令


.子程序 替换, 文本型, , 替换在正则表达式查找中找到的文本
.参数 用作替换的文本, 文本型, 可空, 用作替换的文本



.子程序 取匹配数量, 整数型, , 取出该正则匹配到的数量


.子程序 取匹配文本, 文本型, , 取出该正则匹配到的文本
.参数 匹配索引, 整数型, , 索引值从1开始
.参数 起始位置, 整数型, 参考 可空, 可以被省略，提供参数数据时只能提供变量。该命令调用成功后，本参数存放取得的子文本在整个被搜索文本中的起始位置



.子程序 取子匹配文本, 文本型, , 取出该正则的子表达式匹配到的文本
.参数 匹配索引, 整数型, , 索引值从1开始
.参数 子表达式索引, 整数型, , 欲取其值的子表达式,该参数对应与正则表达式中的一个子表达式以圆括号"( )"为标记,索引从1开始
.参数 起始位置, 整数型, 参考 可空, 可以被省略，提供参数数据时只能提供变量。该命令调用成功后，本参数存放取得的子文本在整个被搜索文本中的起始位置



.子程序 取子匹配数量, 整数型, , 取出该正则的子表达式匹配到的数量


.类模块 类_XMLHTTP, , , 

.子程序 打开, 逻辑型, , 打开HTTP连接
.参数 模式, 文本型, , 模式为POST GET PUT PROPFIND之一
.参数 地址, 文本型, , 地址
.参数 异步方式, 逻辑型, 可空, 是否为异步方式
.参数 用户名, 文本型, 可空, 用户名
.参数 密码, 文本型, 可空, 密码



.子程序 指定请求头数据, 空白型, , 单独指定请求的http头
.参数 头名称, 文本型, , 头名称
.参数 值, 文本型, , 值



.子程序 取响应头数据, 文本型, , 从响应信息中获取指定的http头
.参数 头标志, 文本型, , 头标志



.子程序 取所有头数据, 文本型, , 获取响应的所有http头


.子程序 发送请求, 空白型, , 发送请求
.参数 发送数据, 文本型, 可空, 发送的数据



.子程序 取消当前请求, 空白型, , 取消当前请求


.子程序 取状态码, 整数型, , 返回当前请求的http状态码


.子程序 取状态文本, 文本型, , 返回当前请求的状态文本


.子程序 取responseXML, 对象, , 将响应信息格式化为 Xml 文档对象并返回


.子程序 取responseText, 文本型, , 将响应信息作为字符串返回


.子程序 取响应数据, 变体型, , 返回服务器响应数据


.子程序 取responseStream, 变体型, , 以Ado Stream对象的形式返回响应信息


.子程序 取readyState, 整数型, , 返回请求的当前状态


.子程序 置onreadystatechange, 空白型, , 指定当readyState属性改变时的子程序指针
.参数 参数值, 子程序指针, , 



.类模块 类_图片组操作类, , , 

.子程序 销毁图片组, 整数型, , 成功返回非零,失败返回0


.子程序 创建图片组, 字节集, , 创建一个空的图片组，成功返回所创建图片组的数据，失败返回空字节集
.参数 参_宽度, 整数型, 可空, 欲创建图片组的宽度,默认为32
.参数 参_高度, 整数型, 可空, 欲创建图片组的高度,默认为32
.参数 参_位深, 整数型, 可空, 默认为32
.参数 图片组背景颜色, 整数型, 可空, 默认为白色



.子程序 删除图标, 逻辑型, , 删除图片组中指定位置的图标,成功返回真,否则返回假
.参数 参_索引位置, 整数型, , 要删除的图标位置,索引从0开始



.子程序 清空, 逻辑型, , 成功返回真,否则返回假


.子程序 取图片组尺寸, 逻辑型, , 取得图片组的图标尺寸,成功返回真,否则返回假
.参数 参_宽度, 整数型, 参考, 此变量用于存放图片组图标宽度
.参数 参_高度, 整数型, 参考, 此变量用于存放图片组图标高度



.子程序 取图片组图标数, 整数型, , 取出图片组的图标数


.子程序 置图片组图标尺寸, 逻辑型, , 设置图片组的图标大小,成功返回真,否则返回假
.参数 参_宽度, 整数型, , 要设置的图标组图标宽度
.参数 参_高度, 整数型, , 要设置的图标组图标高度



.子程序 置图片组图标数, 逻辑型, , 成功返回真,否则返回假
.参数 图标数量, 整数型, , 要设置的图片组图标数量



.子程序 取图片组背景颜色, 整数型, , 返回图片组的背景颜色


.子程序 置图片组背景颜色, 逻辑型, , 成功返回真,否则返回假
.参数 背景颜色值, 整数型, , 要设置的图片组背景颜色值



.子程序 取图片组句柄, 整数型, , 返回创建成功后的图片组句柄


.子程序 置图片组句柄, 空白型, , 设置要操作的图片组句柄
.参数 句柄, 整数型, , 要设置要操作的图片组句柄



.子程序 替换图标, 逻辑型, , 根据图标句柄替换指定索引的图标,成功返回真,失败返回假
.参数 图标句柄, 整数型, , 欲替换成的ico图标的句柄,可用命令 载入图标_ 返回的句柄
.参数 替换位置索引, 整数型, , 欲替换图片组的索引位置,0为第一位置,如果为空表示插入到尾部



.子程序 替换位图, 整数型, , 成功返回非0失败返回0
.参数 位图句柄, 整数型, , 欲替换成的位图的句柄,可用命令 载入位图_ 返回的句柄
.参数 替换位置索引, 整数型, , 欲替换图片组的索引位置,0为第一位置



.子程序 导出图片组, 字节集, , 取出为易使用的图片组字节集 


.子程序 导入图片组, 逻辑型, , 将易图片组读入为类图片组
.参数 图片组字节集, 字节集, , 要读入的图片组数据



.子程序 取图标句柄_从文件, 整数型, , 载入指定图标,成功返回图标句柄,失败返回0
.参数 图标文件路径, 文本型, , 欲载入的图标文件全路径



.子程序 取图片句柄_从文件, 整数型, , 载入指定位图,成功返回位图句柄,失败返回0
.参数 位图文件路径, 文本型, , 欲载入的位图文件全路径,只能为BMP格式位图文件路径



.子程序 取图片句柄_从字节集, 整数型, , 载入指定图片,或者图标.成功返回位图句柄,失败返回0
.参数 图片字节集, 字节集, , 欲载入的bmp,jpg等图片资源或者ico图标字节集



.子程序 加入图标_从字节集, 逻辑型, , 
.参数 图片字节集, 字节集, , 要加入的bmp,jpg等图片资源或者ico图标字节集



.子程序 加入位图_从文件, 整数型, , 成功返回添加位图后的图片索引,失败返回 -1
.参数 位图文件路径, 文本型, , 要添加的bmp位图文件路径,只能为bmp格式图片,如果这个位图尺寸大于了创建图片组的尺寸,将自动被分割成多个图片,自动添加到图片组中



.子程序 加入位图_从句柄, 整数型, , 成功返回添加位图后的图片索引,失败返回 -1
.参数 位图句柄, 整数型, , 可用命令 载入位图_从字节集_ ,载入位图_从文件_ 返回的句柄,欲添加的bmp位图图片句柄,只能为bmp格式图片,如果这个位图尺寸大于了创建图片组的尺寸,将自动被分割成多个图片,自动添加到图片组中



.子程序 加入图标_从文件, 整数型, , 成功返回添加图标后的图片索引,失败返回 -1
.参数 图标文件路径, 文本型, , 欲添加的ico图标文件路径



.子程序 加入图标_从句柄, 整数型, , 成功返回添加图标后的图片索引,失败返回 -1
.参数 图标句柄, 整数型, , 欲添加的ico图标的句柄,可用命令 取图标句柄_从文件 返回的句柄



.类模块 字节流, , , 

.子程序 创建字节流, 整数型, , 创建一个字节集流,并返回字节流对象指针
.参数 字节集, 字节集, 可空, 



.子程序 释放字节流, 空白型, , 释放字节集流,使用后释放掉内存空间


.子程序 取字节流指针, 整数型, , 返回字节流对象指针


.子程序 取字节流尺寸, 整数型, , 返回字节流的字节集尺寸


.子程序 取出字节集, 字节集, , 取出字节流中的字节集数据


.类模块 汇编类, , , 注：本来源于网络，只是整合到精易模块，方便大家使用

.子程序 取库程序地址, 整数型, , 取子程序地址，成功返回子程序地址，失败返回0。
.参数 库文件名, 文本型, , 库文件名称
.参数 方法名称, 文本型, , 欲调用的方法的名称



.子程序 到子程序指针, 子程序指针, , 将整数型指针转换成易自己的子程序指针类型。
.参数 整数指针, 整数型, , 



.子程序 转为十六进制, 文本型, , 字节集转到十六进制文本。
.参数 字节集, 字节集, , 用于转换的字节集



.子程序 置入汇编代码, 空白型, , 置入汇编代码
.参数 代码内容, 字节集, 可空, 
.参数 追加模式, 逻辑型, 可空, 可为空，默认为追加模式。



.子程序 取出汇编代码, 字节集, , 取出汇编代码：重要说明：如未执行->运行汇编代码 时，请不进行清空汇编代码
.参数 是否清空, 逻辑型, 可空, 取出时是否进行清空



.子程序 运行汇编代码, 整数型, , 执行->运行汇编代码 时，将清空汇编代码
.参数 参数个数, 整数型, 可空, 
.参数 参数数组, 整数型, 可空 数组, 



.子程序 转到十六进制, 文本型, , 


.子程序 ADD_EAX_EDX, 空白型, , 


.子程序 MOV_EAX_PTR, 空白型, , 
.参数 常数, 整数型, , 



.子程序 PUSH_参常数, 空白型, , 
.参数 常数, 整数型, , 



.子程序 POP_ECX, 空白型, , 


.子程序 POP_EBP, 空白型, , 


.子程序 JMP_EAX, 空白型, , 


.子程序 CALL_EAX, 空白型, , 


.子程序 RET_参数数, 空白型, , 
.参数 参数数, 整数型, , 



.子程序 MOV_EDX_EAX, 空白型, , 


.子程序 MOV_EBP_ESP, 空白型, , 


.子程序 MOV_EAX_PTR_EBP加字节, 空白型, , 
.参数 字节, 整数型, , 



.子程序 ADD_EAX_常数, 空白型, , 加法指令
.参数 常数, 整数型, , 



.子程序 SUB_EAX_常数, 空白型, , 减法指令
.参数 常数, 整数型, , 



.子程序 IMUL_EAX_常数, 空白型, , 乘法指令
.参数 常数, 整数型, , 



.子程序 IDIV_ECX, 空白型, , 


.子程序 CMP_PTR_常数, 空白型, , 
.参数 地址, 整数型, , 
.参数 常数, 整数型, , 



.子程序 SHL_EAX_常数, 空白型, , 
.参数 常数, 整数型, , 



.子程序 SHR_EAX_常数, 空白型, , 右移
.参数 常数, 整数型, , 



.子程序 PUSHAD, 空白型, , 对应指令PUSHAD


.子程序 PUSH_EAX, 空白型, , 对应指令PUSH EAX


.子程序 POP_EAX, 空白型, , 对应指令POP EAX


.子程序 POPAD, 空白型, , 对应指令POPAD


.子程序 PUSH_EBX, 空白型, , 对应指令PUSH_EBX


.子程序 PUSH_ECX, 空白型, , 对应指令PUSH_ECX


.子程序 PUSH_EDX, 空白型, , 对应指令PUSH_EDX


.子程序 PUSH_ESI, 空白型, , 对应指令PUSH_ESI


.子程序 PUSH_EDI, 空白型, , 对应指令PUSH_EDI


.子程序 PUSH_EBP, 空白型, , 对应指令PUSH_EBP


.子程序 PUSH_ESP, 空白型, , 对应指令PUSH_ESP


.子程序 PUSH_常数, 空白型, , 对应指令PUSH_常数


.子程序 MOV_EAX_常数, 空白型, , MOV_EAX_常数
.参数 参数, 整数型, , 



.子程序 MOV_EBX_常数, 空白型, , MOV_EBX_常数
.参数 参数, 整数型, , 



.子程序 MOV_ECX_常数, 空白型, , MOV_ECX_常数
.参数 参数, 整数型, , 



.子程序 MOV_EDX_常数, 空白型, , MOV_EDX_常数
.参数 参数, 整数型, , 



.子程序 MOV_ESI_常数, 空白型, , MOV_ESI_常数
.参数 参数, 整数型, , 



.子程序 MOV_EDI_常数, 空白型, , MOV_EDI_常数
.参数 参数, 整数型, , 



.子程序 MOV_EBP_常数, 空白型, , MOV_EBP_常数
.参数 参数, 整数型, , 



.子程序 MOV_ESP_常数, 空白型, , MOV_ESP_常数
.参数 参数, 整数型, , 



.子程序 MOV_EAX_PRT, 空白型, , 对应指令MOV EAX []
.参数 参数, 整数型, , 



.子程序 MOV_EBX_PRT, 空白型, , 对应指令MOV EBX []
.参数 参数, 整数型, , 



.子程序 MOV_ECX_PRT, 空白型, , 对应指令MOV ECX []
.参数 参数, 整数型, , 



.子程序 MOV_EDX_PRT, 空白型, , 对应指令MOV EDX []
.参数 参数, 整数型, , 



.子程序 MOV_ESI_PRT, 空白型, , 对应指令MOV ESI,[]
.参数 参数, 整数型, , 



.子程序 MOV_EDI_PRT, 空白型, , 对应指令MOV EDI,[]
.参数 参数, 整数型, , 



.子程序 MOV_EBP_PRT, 空白型, , 对应指令MOV EBP,[]
.参数 参数, 整数型, , 



.子程序 MOV_ESP_PRT, 空白型, , 对应指令MOV ESP,[]
.参数 参数, 整数型, , 



.子程序 MOV_PRT_EAX, 空白型, , 对应指令MOV [],EAX
.参数 参数, 整数型, , 



.子程序 MOV_PRT_EBX, 空白型, , 对应指令MOV [],EBX
.参数 参数, 整数型, , 



.子程序 MOV_PRT_ECX, 空白型, , 对应指令MOV [],ECX
.参数 参数, 整数型, , 



.子程序 MOV_PRT_EDX, 空白型, , 对应指令MOV [],EDX
.参数 参数, 整数型, , 



.子程序 MOV_PRT_ESI, 空白型, , 对应指令MOV [],ESI
.参数 参数, 整数型, , 



.子程序 MOV_PRT_EDI, 空白型, , 对应指令MOV [],EDI
.参数 参数, 整数型, , 



.子程序 MOV_PRT_EBP, 空白型, , 对应指令MOV [],EBP
.参数 参数, 整数型, , 



.子程序 MOV_PRT_ESP, 空白型, , 对应指令MOV [],ESP
.参数 参数, 整数型, , 



.子程序 JMP, 空白型, , 对应指令JMP
.参数 参数, 整数型, , 



.子程序 CALL_EBX, 空白型, , CALL_EBX


.子程序 CALL, 空白型, , CALL 地址
.参数 偏移地址, 整数型, , 



.子程序 RET, 空白型, , RET


.子程序 ADD_EBX_EAX, 空白型, , 


.子程序 ADD_EBX_PTR, 空白型, , 
.参数 地址, 整数型, , 



.子程序 ADD_EBX_字节, 空白型, , 
.参数 字节, 整数型, , 



.子程序 ADD_ECX_常数, 空白型, , 
.参数 常数, 整数型, , 



.子程序 ADD_EDX_字节, 空白型, , 
.参数 字节, 整数型, , 



.子程序 ADD_ESI_常数, 空白型, , 加法指令
.参数 常数, 整数型, , 



.子程序 ADD_ESP_字节, 空白型, , 
.参数 字节, 整数型, , 



.子程序 AND_EAX_整数, 空白型, , 位与运算
.参数 数值, 整数型, , 



.子程序 CALL_PTR, 空白型, , 
.参数 地址, 整数型, , 



.子程序 CMP_EAX_EDX, 空白型, , 


.子程序 CMP_EAX_PTR, 空白型, , 
.参数 地址, 整数型, , 



.子程序 CMP_EAX_常数, 空白型, , 
.参数 常数, 整数型, , 



.子程序 DEC_EAX, 空白型, , 递减1指令


.子程序 DEC_EBX, 空白型, , 


.子程序 DEC_ECX, 空白型, , 


.子程序 DEC_EDX, 空白型, , 


.子程序 IDIV_EBX, 空白型, , 除法指令


.子程序 IMUL_EAX_EDX, 空白型, , 


.子程序 IN_AL_DX, 空白型, , 


.子程序 IN_AL_端口号, 空白型, , 
.参数 端口号, 整数型, , 



.子程序 IN_AX_DX, 空白型, , 


.子程序 IN_AX_端口号, 空白型, , 
.参数 端口号, 整数型, , 



.子程序 INC_EAX, 空白型, , 


.子程序 INC_ECX, 空白型, , 


.子程序 INC_EDI, 空白型, , 


.子程序 INC_ESI, 空白型, , 


.子程序 INC_PTR, 空白型, , 递增1指令
.参数 地址, 整数型, , 



.子程序 INC_PTR_EAX, 空白型, , 


.子程序 INC_PTR_EDX, 空白型, , 


.子程序 LEA_EAX_PTR_EAX加字节, 空白型, , 
.参数 字节, 整数型, , 



.子程序 LEA_ECX_PTR_EAX加整数, 空白型, , 
.参数 数值, 整数型, , 



.子程序 LEA_ECX_PTR_ESI加字节, 空白型, , 
.参数 字节, 整数型, , 



.子程序 LEA_ECX_PTR_ESP加字节, 空白型, , 
.参数 字节, 整数型, , 



.子程序 LEAVE, 空白型, , 


.子程序 MOV_EAX_EBX, 空白型, , 


.子程序 MOV_EAX_EDX, 空白型, , 


.子程序 MOV_EAX_ESI, 空白型, , 


.子程序 MOV_EAX_PTR_DS整数, 空白型, , 等于MOV_EAX_PTR
.参数 地址, 整数型, , 



.子程序 MOV_EAX_PTR_EAX, 空白型, , 


.子程序 MOV_EAX_PTR_EAX加整数, 空白型, , 
.参数 数值, 整数型, , 



.子程序 MOV_EAX_PTR_EAX加字节, 空白型, , 
.参数 字节, 整数型, , 



.子程序 MOV_EAX_PTR_EBX, 空白型, , 


.子程序 MOV_EAX_PTR_EDX, 空白型, , 


.子程序 MOV_EAX_PTR_EDX加字节, 空白型, , 
.参数 字节, 整数型, , 



.子程序 MOV_EAX_PTR_ESP加字节, 空白型, , 
.参数 字节, 整数型, , 



.子程序 MOV_EBX_EAX, 空白型, , 


.子程序 MOV_EBX_EDX, 空白型, , 


.子程序 MOV_EBX_PTR_EAX加字节, 空白型, , 
.参数 字节, 整数型, , 



.子程序 MOV_ECX_EAX, 空白型, , 


.子程序 MOV_ECX_EDI, 空白型, , 


.子程序 MOV_ECX_ESI, 空白型, , 


.子程序 MOV_ECX_PTR, 空白型, , 
.参数 地址, 整数型, , 



.子程序 MOV_ECX_PTR_EAX加字节, 空白型, , 
.参数 字节, 整数型, , 



.子程序 MOV_ECX_PTR_EBX加整数, 空白型, , 
.参数 数值, 整数型, , 



.子程序 MOV_ECX_PTR_ECX加字节, 空白型, , 
.参数 字节, 整数型, , 



.子程序 MOV_ECX_PTR_EDX加字节, 空白型, , 
.参数 字节, 整数型, , 



.子程序 MOV_EDI_EAX, 空白型, , 


.子程序 MOV_EDX_PTR_ECX加字节, 空白型, , 
.参数 字节, 整数型, , 



.子程序 MOV_EDX_PTR_EDI加整数, 空白型, , 
.参数 数值, 整数型, , 



.子程序 MOV_EDX_PTR_EDI加字节, 空白型, , 
.参数 字节, 整数型, , 



.子程序 MOV_ESI_EAX, 空白型, , 


.子程序 MOV_ESI_EBX, 空白型, , 


.子程序 MOV_ESI_PTR, 空白型, , 
.参数 地址, 整数型, , 



.子程序 MOV_ESI_PTR_EBP加字节, 空白型, , 
.参数 字节, 整数型, , 



.子程序 MOV_ESP_EBP, 空白型, , 


.子程序 MOV_PTR_EAX, 空白型, , 
.参数 地址, 整数型, , 



.子程序 MOV_PTR_EBX_EAX, 空白型, , 


.子程序 MOV_PTR_ECX加字节_EAX, 空白型, , 
.参数 字节, 整数型, , 



.子程序 MOV_PTR_EDX_EAX, 空白型, , 


.子程序 MOV_PTR_常数, 空白型, , 
.参数 地址, 整数型, , 
.参数 常数, 整数型, , 



.子程序 NOP, 空白型, , 空指令


.子程序 NOT_EAX, 空白型, , 取反指令


.子程序 OUT_DX_AL, 空白型, , 


.子程序 OUT_端口号_AX, 空白型, , 
.参数 端口号, 整数型, , 



.子程序 POP_EBX, 空白型, , 


.子程序 POP_EDX, 空白型, , 


.子程序 POP_ESI, 空白型, , 


.子程序 PUSH_PTR, 空白型, , 
.参数 地址, 整数型, , 



.子程序 SHL_EBX_常数, 空白型, , 
.参数 常数, 整数型, , 



.子程序 SHR_EBX_常数, 空白型, , 
.参数 常数, 整数型, , 



.子程序 SUB_EAX_PTR, 空白型, , 
.参数 地址, 整数型, , 



.子程序 SUB_EBX_EAX, 空白型, , 


.子程序 SUB_EDX_字节, 空白型, , 
.参数 字节, 整数型, , 



.子程序 TEST_EAX_EAX, 空白型, , 


.子程序 TEST_EAX_常数, 空白型, , 
.参数 常数, 整数型, , 



.子程序 XOR_EAX_EBX, 空白型, , 异或运算


.子程序 XOR_EDI_EDI, 空白型, , 


.类模块 输入法类, , , 感谢坛友【xuweixxf21】提供

.子程序 安装, 整数型, , 安装指定输入法(成功返回输入法句柄,失败返回0)
.参数 输入法文件, 文本型, , 输入法文件的完整路径  没有注入文件的可以来这里下载：http://115.com/file/dizk13dt
.参数 输入法名称, 文本型, 可空, 输入法的名称,默认为“精易输入法”



.子程序 卸载, 逻辑型, , 卸载已经安装的输入法(成功返回真,失败返回假)
.参数 输入法句柄, 整数型, , 欲卸载的输入法的句柄



.子程序 取序号, 整数型, , 取输入法序号
.参数 输入法句柄, 整数型, , 



.子程序 取全部输入法句柄, 整数型, , 取全部输入法句柄，返回取得的数量。
.参数 输入法句柄, 整数型, 数组, 



.子程序 注入, 整数型, , 通过输入法注入文件(成功返回输入法句柄,失败返回0)
.参数 欲注入的文件, 文本型, , 欲注入文件的完整路径
.参数 输入法注入文件, 文本型, , 没有注入文件的可以来这里下载：http://pan.baidu.com/s/1eRDCRVO
.参数 输入法名称, 文本型, 可空, 输入法的名称,默认为“精易输入法”



.子程序 停止注入, 逻辑型, , 停止注入(成功返回真,失败返回假)


.子程序 激活, 空白型, , 激活指定输入法(无返回值)
.参数 窗口句柄, 整数型, , 在指定的窗口激活输入法
.参数 输入法句柄, 整数型, , 欲激活的输入法的句柄



.子程序 取名称, 文本型, , 成功返回输入法名称
.参数 序号, 整数型, , 



.子程序 取句柄, 整数型, , 成功返回句柄
.参数 序号, 整数型, , 



.子程序 取输入法个数, 整数型, , 


.子程序 显示属性, 逻辑型, , 显示输入法属性窗口,成功返回真，失败返回假
.参数 输入法句柄, 整数型, , 



.类模块 类_APIHOOK, , , 

.子程序 安装, 逻辑型, , 
.参数 动态链接库名, 文本型, , 要拦截的【函数名】所在【动态链接库】的路径，如：user32.dll
.参数 API命令名, 文本型, , 要拦截的函数名，如：FindWindowA
.参数 现子程序指针, 子程序指针, , 回调子程序



.子程序 继续, 逻辑型, , 继续拦截指定的函数名，成功返回真，失败返回假。
.参数 动态链接库, 文本型, , 要拦截的【函数名】所在【动态链接库】的路径，如：user32.dll
.参数 函数名, 文本型, , 要继续HOOK的函数名 如：FindWindowA



.子程序 是否已安装, 逻辑型, , 判断此HOOK函数是否已安装，真=已安装，假=未安装。
.参数 动态链接库, 文本型, , 要拦截的【函数名】所在【动态链接库】的路径，如：user32.dll
.参数 函数名, 文本型, , 要暂停HOOK的函数名 如：FindWindowA



.子程序 暂停, 逻辑型, , 暂停拦截指定的函数名，成功返回真，失败返回假。
.参数 动态链接库, 文本型, , 要拦截的【函数名】所在【动态链接库】的路径，如：user32.dll
.参数 函数名, 文本型, , 要暂停HOOK的函数名 如：FindWindowA



.子程序 取地址, 整数型, , 取指定函数名原始数据地址，回调原指针时使用。成功返回地址，失败返回-1。
.参数 动态链接库, 文本型, , 要拦截的【函数名】所在【动态链接库】的路径，如：user32.dll
.参数 函数名, 文本型, , 要取出地址的函数名 如：FindWindowA



.子程序 卸载, 逻辑型, , 卸载指定的函数名的APIHOOK，成功返回真，失败返回假。
.参数 动态链接库, 文本型, , 要拦截的【函数名】所在【动态链接库】的路径，如：user32.dll
.参数 函数名, 文本型, , 要卸载HOOK的函数名 如：FindWindowA



.子程序 卸载全部, 空白型, , 卸载全部的HOOK，程序关闭时，本命令会被自动调用


.类模块 类_脚本组件, , , 

.子程序 执行, 逻辑型, , 执行指定的代码文本。返回真为执行正常，返回假为出错，错误信息可以从“错误信息”属性中取得。
.参数 脚本代码, 文本型, , 



.子程序 计算表达式, 文本型, , 计算表达式并返回结果。
.参数 表达式, 文本型, , 



.子程序 清除, 空白型, , 


.子程序 取错误, 文本型, , 返回错误信息


.子程序 取脚本对象, 对象, , 


.子程序 运行, 文本型, , 在添加的代码中运行指定的过程，如有返回值返回相应文本，否则返回空文本。
.参数 过程或函数名, 文本型, , 
.参数 参数1, 文本型, 可空, 
.参数 参数2, 文本型, 可空, 
.参数 参数3, 文本型, 可空, 
.参数 参数4, 文本型, 可空, 
.参数 参数5, 文本型, 可空, 
.参数 参数6, 文本型, 可空, 



.子程序 属性_语言, 文本型, , 设置或返回正在使用的脚本语言名称。
.参数 新语言属性, 整数型, 可空, 默认为为 JScript   0. JScript   1. VBScript



.子程序 属性_超时, 整数型, , 设置或返回时间（毫秒），此时间后用户可选择中止脚本代码的执行或允许代码继续执行。
.参数 新超时属性值, 整数型, 可空, 默认为-1，执行无超时



.类模块 类_内存, , , 

.子程序 置属性, 整数型, , 
.参数 进程句柄, 整数型, , 目标进程句柄,用 进程_打开() 命令取得
.参数 内存地址, 整数型, , 
.参数 内存属性, 整数型, , 2 = 只读; 4 = 可读写



.子程序 取属性, 逻辑型, , 取内存属性信息;成功返回真,失败返回假;
.参数 进程句柄, 整数型, , 目标进程句柄,用 进程_打开() 命令取得
.参数 内存地址, 整数型, , 要取内存属性的内存地址;
.参数 内存属性, 精易_内存属性, 参考, 内存属性.当前属性 0=未分配,不可访问=1,2=可读,读写=4,可写与拷贝=8,可运行=16,可运行与可读=32,可运行可读写=64,可运行读写拷贝=128,guard=256,非物理内存=512



.子程序 搜索, 整数型, , 某些情况，需提升权限(返回结果数目,失败返回0)
.参数 进程ID, 整数型, , 进程ID
.参数 搜索内容, 字节集, , 欲搜索的内容  其他类型-需自行转换为字节集类型
.参数 结果数组, 整数型, 参考 数组, 用来保存搜索的结果



.子程序 读小数, 小数型, , 失败返回0。
.参数 进程ID, 整数型, , 
.参数 内存地址, 整数型, , 



.子程序 写小数, 逻辑型, , 
.参数 进程ID, 整数型, , 进程ID
.参数 内存地址, 整数型, , 内存地址
.参数 要写入的值, 小数型, , 写入数据



.子程序 读文本, 文本型, , 读取文本型数据(返回文本 失败返回空文本)
.参数 进程ID, 整数型, , 
.参数 内存地址, 整数型, , 
.参数 长度, 整数型, 可空, 默认为20 欲读取的长度字节



.子程序 读文本1, 文本型, , 读取文本型数据(返回文本 失败返回空文本)
.参数 进程句柄, 整数型, , 进程句柄
.参数 内存地址, 整数型, , 
.参数 长度, 整数型, 可空, 默认为20 欲读取的长度字节



.子程序 写文本, 逻辑型, , 写入文本数据(成功返回真,失败返回假)
.参数 进程ID, 整数型, , 进程ID
.参数 内存地址, 整数型, , 内存地址
.参数 要写入的数据, 文本型, , 写入数据



.子程序 读整数, 整数型, , 读取整数型数据(返回整数内容 失败返回0) 
.参数 进程ID, 整数型, , 
.参数 内存地址, 整数型, , 



.子程序 读整数1, 整数型, , 读取整数型数据(返回整数内容 失败返回0) 
.参数 进程句柄, 整数型, , 进程句柄
.参数 内存地址, 整数型, , 



.子程序 读短整数, 短整数型, , 读取短整数型数据(返回整数内容 失败返回0)
.参数 进程ID, 整数型, , 
.参数 内存地址, 整数型, , 



.子程序 读短整数1, 短整数型, , 读取短整数型数据(返回整数内容 失败返回0)
.参数 进程句柄, 整数型, , 进程句柄
.参数 内存地址, 整数型, , 



.子程序 读长整数, 长整数型, , 失败返回0
.参数 进程ID, 整数型, , 
.参数 内存地址, 整数型, , 



.子程序 读长整数1, 长整数型, , 失败返回0
.参数 进程句柄, 整数型, , 进程句柄
.参数 内存地址, 整数型, , 



.子程序 写整数, 逻辑型, , 写入四字节数据(成功返回真,失败返回假) 
.参数 进程ID, 整数型, , 进程ID
.参数 内存地址, 整数型, , 内存地址
.参数 要写入的值, 整数型, , 写入数据
.参数 写入类型, 整数型, 可空, 默认为1  0=短整数型 1=整数型 2=长整数型



.子程序 读字节, 字节型, , 读取字节型数据(返回整数内容 失败返回0) 
.参数 进程ID, 整数型, , 
.参数 内存地址, 整数型, , 



.子程序 写字节, 逻辑型, , 写入1字节数据(成功返回真,失败返回假) 
.参数 进程ID, 整数型, , 进程ID
.参数 内存地址, 整数型, , 内存地址
.参数 要写入的数据, 字节型, , 写入数据



.子程序 读字节集, 字节集, , 读取字节集数据(返回字节集 失败返回空) 
.参数 进程ID, 整数型, , 进程ID
.参数 内存地址, 整数型, , 内存地址
.参数 长度, 整数型, 可空, 可空。留空将智能读取长度



.子程序 写字节集, 逻辑型, , 写入字节集数据(成功返回真,失败返回假)
.参数 进程ID, 整数型, , 进程ID
.参数 内存地址, 整数型, , 内存地址
.参数 要写入的数据, 字节集, , 写入数据



.子程序 读日期时间, 日期时间型, , 从内存中读取日期时间型数据,失败将返回100年1月1日
.参数 进程ID, 整数型, , 进程ID
.参数 地址, 整数型, , 内存地址



.子程序 读子程序指针, 子程序指针, , 从内存中读取子程序指针,失败返回空指针
.参数 进程ID, 整数型, , 进程ID
.参数 地址, 整数型, , 内存地址



.子程序 读双精度小数, 双精度小数型, , 从内存中读取双精度小数型数据,失败返回0
.参数 进程ID, 整数型, , 进程ID
.参数 地址, 整数型, , 内存地址



.子程序 写代码, 逻辑型, , 写内存整数型,写内存字节集。[坛友：“啄啄”提供]
.参数 进程ID, 整数型, , 要操作的进程ID
.参数 地址表达式, 文本型, , 比如“0A1574D+1D45+547=999”



.子程序 读代码_整数, 整数型, , 读内存整数型。[坛友：“啄啄”提供]
.参数 进程ID, 整数型, , 要操作的进程ID
.参数 地址表达式, 文本型, , 比如“0A1574D+1D45+547”



.子程序 读代码_字节集, 字节集, , 读内存字节集。[坛友：“啄啄”提供]
.参数 进程ID, 整数型, , 要操作的进程ID
.参数 地址表达式, 文本型, , 比如“0A1574D+1D45+547”



.子程序 读字节集_64, 字节集, , 成功返回字节集数据，如果失败返回空字节集。不同类型的内存值可用 取字节集数据(字节集，#整数型) 取得对应的内存值。
.参数 PID, 整数型, , 进程PID
.参数 表达式地址, 文本型, , 如：141FF33E8+170+7EC
.参数 读入长度, 长整数型, , 4，一般内存地址都是4个字节为一个地址{xxx,xxx,xxx,xxx}



.子程序 写字节集_64, 整数型, , 写内存字节集，失败返回-1，成功非-1
.参数 PID, 整数型, , 进程PID
.参数 表达式地址, 文本型, , 如：141FF33E8+170+7EC
.参数 写入长度, 长整数型, , 4，一般内存地址都是4个字节为一个地址{xxx,xxx,xxx,xxx}
.参数 写入数据, 字节集, , 用法：如果写入整数型数据→到字节集(123) 文本型数据→到字节集（“123”）。



.类模块 类_识图, , , 

.子程序 制作范围, 精易_矩形, , 生成一个矩形的范围,并返回
.参数 左边, 整数型, 可空, 查找范围的左边
.参数 顶边, 整数型, 可空, 查找范围的顶边
.参数 宽度, 整数型, 可空, 查找范围的宽度
.参数 高度, 整数型, 可空, 查找范围的高度



.子程序 找图_从句柄, 精易_坐标, , 在屏幕或指定窗口上找图，成功返回找到的位置坐标，失败坐标返回-1。，BUG命令谨慎使用
.参数 窗口句柄, 整数型, 可空, 可空。默认在屏幕中查找。
.参数 目标图片, 字节集, , 要查找的图片数据   bmp图片
.参数 寻找范围, 精易_矩形, 可空, 可空。可用 制作范围() 制作返回。留空为查找整个屏幕或窗口。
.参数 是否在后台, 逻辑型, 可空, 可空。默认为假，在当前屏幕中查找，真为后台窗口中查找。



.子程序 找图_从字节集, 精易_坐标, , 在位图数据中找图片(返回找到的图片中心坐标,找不到返回-1坐标)，BUG命令谨慎使用
.参数 范围图片, 字节集, , 默认为上次范围图片
.参数 目标图片, 字节集, , 默认为上次目标图片



.子程序 找字_初始化, 空白型, , 在使用 找字() 命令前,必须先初始化本命令
.参数 要查找的文字, 文本型, , 
.参数 文字的颜色, 整数型, , 
.参数 文字的字体, 字体, 可空, 可空。默认：9号宋体



.子程序 找字, 精易_坐标, , 在屏幕或指定窗口上找字。使用此命令前，必须先使用 找字_初始化() 命令。成功返回找到的位置坐标，失败坐标返回-1。
.参数 窗口句柄, 整数型, 可空, 可空。默认在屏幕中查找。
.参数 寻找范围, 精易_矩形, 可空, 可空。可用 制作范围() 制作返回。留空为查找整个屏幕或窗口。
.参数 误差值, 整数型, 可空, 可空。默认为0， 值：0-255。值越大，速度越慢。
.参数 吻合值, 整数型, 可空, 可空。默认为完全吻合，值：0-100。建议设置在90以上。
.参数 是否在后台, 逻辑型, 可空, 可空。默认为假，在当前屏幕中查找，真为后台窗口中查找。



.子程序 找字_从字节集, 精易_坐标, , 在指定的图片位图上寻找指定的文字。使用此命令前，必须先使用 找字_初始化() 命令。成功返回找到的位置坐标，失败坐标返回-1。
.参数 位图数据, 字节集, , 欲被查找的图片
.参数 误差值, 整数型, 可空, 可空。默认为0， 值：0-255。值越大，速度越慢。
.参数 吻合值, 整数型, 可空, 可空。默认为完全吻合，值：0-100。建议设置在90以上。



.子程序 找字_批量, 整数型, , 在指定的图片位图上找出所有指定文字的坐标。使用此命令前，必须先使用 找字_初始化() 命令。成功返回坐标数组。
.参数 坐标数组, 精易_坐标, 可空 数组, 请提供一个"精易_坐标"类型的变量数组，用于接收找到的坐标数组。
.参数 位图数据, 字节集, , 欲被查找的图片
.参数 误差值, 整数型, 可空, 可空。默认为0， 值：0-255。值越大，速度越慢。
.参数 前景吻合度, 整数型, 可空, 可空。默认为完全吻合，值：0-100。建议设置在90以上。
.参数 背景吻合度, 整数型, 可空, 可空。默认为完全吻合，值：0-100。建议设置在90以上。



.子程序 取色, 整数型, , 在屏幕或指定窗口上取出某点的颜色值，成功返回10进制颜色值。
.参数 窗口句柄, 整数型, 可空, 可空。默认在屏幕中查找。
.参数 水平位置, 整数型, , 目标横坐标
.参数 垂直位置, 整数型, , 目标纵坐标
.参数 是否在后台, 逻辑型, 可空, 可空。默认为假，在当前屏幕中查找，真为后台窗口中查找。



.子程序 找色, 精易_坐标, , 在屏幕或指定窗口上找指定的颜色，成功返回此颜色的坐标，失败坐标返回为-1
.参数 窗口句柄, 整数型, 可空, 可空。默认在屏幕中查找。
.参数 要查找的颜色值, 整数型, , 要查找的颜色值
.参数 寻找范围, 精易_矩形, 可空, 可空。可用 制作范围() 制作返回。留空为查找整个屏幕或窗口。
.参数 误差值, 整数型, 可空, 可空。默认为0， 值：0-255。值越大，速度越慢。
.参数 是否在后台, 逻辑型, 可空, 可空。默认为假，在当前屏幕中查找，真为后台窗口中查找。



.类模块 类_位图操作, , , 此类由坛友提供

.子程序 从数据创建, 逻辑型, , 从位图字节集载入位图数据创建位图(成功返回真,失败返回假,本类原有位图将自动被释放)
.参数 位图文件数据, 字节集, , 



.子程序 从文件创建, 逻辑型, , 从bmp文件载入位图数据创建位图(成功返回真,失败返回假,本类原有位图将自动被释放)
.参数 文件名, 文本型, , 位图文件路径



.子程序 从位图句柄创建, 逻辑型, , 通过已有的位图句柄创建新的位图存于本类中(成功返回真,失败返回假,本类原有位图将自动被释放)
.参数 已知的位图句柄, 整数型, , 已经获得的位图句柄,该句柄需另外删除!
.参数 位深度, 整数型, 可空, 位深度:  1, 4, 8, 16, 24, 32  默认为原来的位深度



.子程序 从图标句柄创建, 逻辑型, , 通过文件图标句柄创建图标位图(成功返回真,失败返回假,本类原有位图将自动被释放)
.参数 图标句柄, 整数型, , 文件图标句柄
.参数 图标宽度, 整数型, 可空, 默认为32
.参数 图标高度, 整数型, 可空, 默认为32
.参数 位深度, 整数型, 可空, 位深度:  1, 4, 8, 16, 24, 32  默认为32位



.子程序 从屏幕创建, 逻辑型, , 从屏幕创建位图,抓取屏幕画面(成功返回真,失败返回假,本类原有位图将自动被释放)
.参数 左边, 整数型, 可空, 抓取的屏幕区域左边  默认为0
.参数 顶边, 整数型, 可空, 抓取的屏幕区域顶边  默认为0
.参数 宽度, 整数型, 可空, 创建位图的宽度  默认为屏幕宽度-左边
.参数 高度, 整数型, 可空, 创建位图的高度  默认为屏幕高度-顶边
.参数 位深度, 整数型, 可空, 位深度:  1, 4, 8, 16, 24, 32  默认为当前屏幕色深



.子程序 从窗口创建, 逻辑型, , 从窗口创建位图,获取窗口客户区画面(成功返回真,失败返回假,本类原有位图将自动被释放)
.参数 窗口句柄, 整数型, , 欲获取窗口位图的窗口句柄,必须保证窗口可视性,且不能是最小化窗口
.参数 左边, 整数型, 可空, 抓取的窗口客户区域左边  默认为0
.参数 顶边, 整数型, 可空, 抓取的窗口客户区域顶边  默认为0
.参数 宽度, 整数型, 可空, 创建位图的宽度  默认为窗口客户区域的宽度-左边
.参数 高度, 整数型, 可空, 创建位图的高度  默认为窗口客户区域的高度-顶边
.参数 位深度, 整数型, 可空, 位深度:  1, 4, 8, 16, 24, 32  默认为24位



.子程序 从场景创建, 逻辑型, , 从DC场景创建位图,复制DC上的内容到DIB获取场景中画面(成功返回真,失败返回假,本类原有位图将自动被释放)
.参数 DC场景句柄, 整数型, , 已经的DC场景
.参数 区域, 精易_矩形, , 欲获取场景的区域范围
.参数 位深度, 整数型, , 位深度:  1, 4, 8, 16, 24, 32



.子程序 从剪辑板创建, 逻辑型, , 取得剪辑板中位图(成功返回真,剪辑板中没有位图或失败返回假,本类原有位图将自动被释放)
.参数 位深度, 整数型, 可空, 位深度:  1, 4, 8, 16, 24, 32  默认为系统色深



.子程序 创建空白位图, 逻辑型, , 创建一幅指定大小与位深度的空白位图(成功返回真,失败返回假,本类原有位图将自动被释放)
.参数 宽度, 整数型, , 
.参数 高度, 整数型, , 
.参数 位深度, 整数型, , 位深度:  1, 4, 8, 16, 24, 32



.子程序 更新位图, 空白型, , 强制立即更新位图中所作的操作(通常不使用)


.子程序 转换位深度, 逻辑型, , 转换当前类中位图的位深度(成功返回真,失败返回假)
.参数 新的位深度, 整数型, , 位深度:  1, 4, 8, 16, 24, 32



.子程序 复制到, 逻辑型, , 将当前类中位图复制到目标位图类中(成功返回真,失败返回假)
.参数 目标位图, 类_位图操作, 参考, 复制到的目标位图
.参数 左边, 整数型, 可空, 复制源位图区域的左边 默认为0
.参数 顶边, 整数型, 可空, 复制源位图区域的顶边 默认为0
.参数 宽度, 整数型, 可空, 复制源位图的宽度 默认为源位图最大有效宽度
.参数 高度, 整数型, 可空, 复制源位图的高度 默认为源位图最大有效高度
.参数 目标左边, 整数型, 可空, 复制到目标位图的横坐标 默认为0
.参数 目标顶边, 整数型, 可空, 复制到目标位图的纵坐标 默认为0



.子程序 取位图句柄, 整数型, , 取得当前类中位图的位图句柄(返回位图句柄,本类中没有位图返回0)


.子程序 取场景句柄, 整数型, , 取得当前类中位图所在DC场景句柄(返回场景句柄,本类中没有位图返回0)


.子程序 取宽度, 整数型, , (数据方式)取位图宽度,失败返回0


.子程序 取高度, 整数型, , (数据方式)取位图高度,失败返回0


.子程序 取位深度, 整数型, , (数据方式)取位图颜色位数,失败返回0


.子程序 取宽度2, 整数型, , (函数方式)取位图宽度,失败返回0


.子程序 取高度2, 整数型, , (函数方式)取位图高度,失败返回0


.子程序 取位深度2, 整数型, , (函数方式)取位图颜色位数,失败返回0


.子程序 取指针, 整数型, , 取位图数据BITMAPINFO指针,失败返回0


.子程序 取颜色点阵地址, 整数型, , 取颜色点阵地址,失败返回0


.子程序 取颜色点阵大小, 整数型, , 取颜色点阵大小,失败返回0


.子程序 取颜色表指针, 整数型, , 取颜色表指针,失败返回0,大于256色的位图不使用颜色表


.子程序 取颜色表大小, 整数型, , 取颜色表大小,失败返回0


.子程序 取行字节数, 整数型, , 取得位图颜色数据一行的字节数


.子程序 取出位图数据, 字节集, , 返回位图文件数据(写到文件后就是.BMP图片)


.子程序 取出颜色数据, 字节集, , 不含文件头的颜色部分的数据


.子程序 取某点颜色, 整数型, , 取得位图中某点颜色值(成功返回十进制颜色值,失败返回-1)
.参数 横坐标, 整数型, , 
.参数 纵坐标, 整数型, , 



.子程序 置某点颜色, 逻辑型, , 设置位图中某点颜色值(成功返回真,失败返回假)
.参数 横坐标, 整数型, , 
.参数 纵坐标, 整数型, , 
.参数 颜色值, 整数型, , 十进制RGB颜色值



.子程序 置剪辑板位图, 逻辑型, , 将指定位图存放到当前Windows系统剪辑板中,剪辑板中的原有内容被覆盖(成功返回真,失败返回假)


.子程序 置窗口位图, 逻辑型, , 将位图画入指定窗口中(成功返回真,失败返回假)
.参数 窗口句柄, 整数型, , 



.类模块 类_位图处理, , , 作: 为你芯冻

.子程序 取位图颜色, 整数型, , 
.参数 位图, 字节集, , 
.参数 横坐标, 整数型, 可空, 范围为 0~图像宽度 - 1；留空为0。表示图像最左侧。
.参数 纵坐标, 整数型, 可空, 范围为 0~图像高度 - 1；留空为0。表示图像最顶边。



.子程序 置位图颜色, 字节集, , 
.参数 位图, 字节集, , 
.参数 横坐标, 整数型, 可空, 范围为 0~图像宽度 - 1；留空为0。表示图像最左侧。
.参数 纵坐标, 整数型, 可空, 范围为 0~图像高度 - 1；留空为0。表示图像最顶边。
.参数 颜色值, 整数型, , 



.子程序 取位图颜色表, 整数型, , 
.参数 位图, 字节集, , 
.参数 颜色表, 整数型, 参考 数组, 



.子程序 颜色表构建位图, 字节集, , 如果颜色表是24位颜色表的话要构建8位位图 必须先把24位颜色表改成8位颜色表
.参数 颜色表, 整数型, 数组, 输进一个二维数组,分别表示宽和高,数组值为颜色值
.参数 位数, 整数型, 可空, 默认为24



.子程序 位图去杂点, 字节集, , 
.参数 位图, 字节集, , 



.子程序 位图缩放, 字节集, , 
.参数 位图, 字节集, , 
.参数 缩放后宽, 整数型, , 
.参数 缩放后高, 整数型, , 



.子程序 位图转换位数, 字节集, , 
.参数 位图, 字节集, , 
.参数 位数, 整数型, , 



.子程序 位图二值化, 字节集, , 
.参数 位图, 字节集, , 
.参数 阀值, 整数型, , 



.子程序 位图反色, 字节集, , 
.参数 位图, 字节集, , 



.子程序 取位图轮廓图, 字节集, , 
.参数 位图, 字节集, , 



.子程序 位图细化, 字节集, , 
.参数 位图, 字节集, , 



.子程序 位图分割1, 整数型, , 
.参数 位图, 字节集, , 
.参数 范围数组, 精易_矩形, 参考 可空 数组, 



.子程序 位图分割2, 整数型, , 
.参数 位图, 字节集, , 
.参数 点阵数组, 点阵, 参考 可空 数组, 



.子程序 取位图有效范围, 精易_矩形, , 
.参数 位图, 字节集, , 



.类模块 类_ODBC数据库, , , 此类为易友 校长小猪猪 提供。

.子程序 取数据库句柄, 整数型, , 


.子程序 置数据库句柄, 空白型, , 
.参数 参数_数据库句柄, 整数型, , 



.子程序 连接, 逻辑型, , 
.参数 参数_连接字符串, 文本型, , 



.子程序 连接SQLServer, 逻辑型, , 
.参数 参数_服务器名, 文本型, , 
.参数 参数_数据库, 文本型, , 
.参数 参数_用户名, 文本型, 可空, 为空默认以Windows账户登录
.参数 参数_密码, 文本型, 可空, 为空默认以Windows账户登录



.子程序 连接Access, 逻辑型, , 连接mdb或accdb数据库
.参数 参数_文件名, 文本型, , 本参数提供Access数据库文件的完整路径名。
.参数 参数_密码, 文本型, 可空, 本参数提供Access数据库的访问密码。可以为空，若为空，表示Access数据库没有密码。
.参数 参数_Accdb, 逻辑型, 可空, 数据库类型。默认为假=mdb，真=accdb。



.子程序 关闭, 逻辑型, , 


.子程序 执行SQL, 逻辑型, , 
.参数 参数_SQL语句, 文本型, , 
.参数 参数_影响行, 整数型, 参考 可空, 



.子程序 执行, 逻辑型, , 
.参数 参数_SQL语句, 文本型, , 语句中的第几个“?”，表示参数几
.参数 参数_影响行, 整数型, 参考 可空, 
.参数 参数一, 字节集, 可空, 
.参数 参数二, 字节集, 可空, 
.参数 参数三, 字节集, 可空, 
.参数 参数四, 字节集, 可空, 
.参数 参数五, 字节集, 可空, 



.子程序 查询, 整数型, , 返回记录集句柄。此时记录集位置在首记录前
.参数 参数_SQL语句, 文本型, , 
.参数 参数_光标类型, 整数型, 可空, “光标类型_”开头常量。默认为“光标类型_键集”



.子程序 置SQL语句, 整数型, , 准备一条SQL语句，此时并没有执行。返回记录集句柄
.参数 参数_SQL语句, 文本型, , 
.参数 参数_光标类型, 整数型, 可空, “光标类型_”开头常量。默认为“光标类型_向前”



.子程序 执行记录集, 逻辑型, , 执行由“置SQL语句”返回的记录集。
.参数 参数_记录集句柄, 整数型, , 



.子程序 绑定参数, 逻辑型, , 给记录集绑定参数。
.参数 参数_记录集句柄, 整数型, , 
.参数 参数_参数索引, 整数型, , 表示第几个参数，索引从1开始
.参数 参数_字节集, 字节集, , 



.子程序 释放记录集, 逻辑型, , 
.参数 参数_记录集句柄, 整数型, , 



.子程序 到下一条, 逻辑型, , 如果到最后一行，返回假
.参数 参数_记录集句柄, 整数型, , 



.子程序 到上一条, 逻辑型, , 
.参数 参数_记录集句柄, 整数型, , 



.子程序 到首记录, 逻辑型, , 
.参数 参数_记录集句柄, 整数型, , 



.子程序 到尾记录, 逻辑型, , 
.参数 参数_记录集句柄, 整数型, , 



.子程序 移到, 逻辑型, , 
.参数 参数_记录集句柄, 整数型, , 
.参数 参数_行号, 整数型, , 



.子程序 读字段文本, 文本型, , 用字段名读
.参数 参数_记录集句柄, 整数型, , 
.参数 参数_字段名, 文本型, , 



.子程序 读字段字节集, 字节集, , 用字段名读
.参数 参数_记录集句柄, 整数型, , 
.参数 参数_字段名, 文本型, , 



.子程序 读字段整数, 整数型, , 用字段名读
.参数 参数_记录集句柄, 整数型, , 
.参数 参数_字段名, 文本型, , 



.子程序 读字段单精度, 小数型, , 用字段名读
.参数 参数_记录集句柄, 整数型, , 
.参数 参数_字段名, 文本型, , 



.子程序 读字段双精度, 双精度小数型, , 用字段名读
.参数 参数_记录集句柄, 整数型, , 
.参数 参数_字段名, 文本型, , 



.子程序 读文本, 文本型, , 
.参数 参数_记录集句柄, 整数型, , 
.参数 参数_列号, 整数型, , 索引从0开始



.子程序 读字节集, 字节集, , 
.参数 参数_记录集句柄, 整数型, , 
.参数 参数_列号, 整数型, , 索引从0开始



.子程序 读整数, 整数型, , 
.参数 参数_记录集句柄, 整数型, , 
.参数 参数_列号, 整数型, , 索引从0开始



.子程序 读单精度, 小数型, , 
.参数 参数_记录集句柄, 整数型, , 
.参数 参数_列号, 整数型, , 索引从0开始



.子程序 读双精度, 双精度小数型, , 
.参数 参数_记录集句柄, 整数型, , 
.参数 参数_列号, 整数型, , 索引从0开始



.子程序 取字段名, 文本型, , 
.参数 参数_记录集句柄, 整数型, , 
.参数 参数_列号, 整数型, , 列号从0开始



.子程序 取字段数, 整数型, , 
.参数 参数_记录集句柄, 整数型, , 



.子程序 取字段类型, 整数型, , 返回“SQL_”开头常量
.参数 参数_记录集句柄, 整数型, , 
.参数 参数_列号, 整数型, , 列号从0开始



.子程序 取字段定义长度, 整数型, , 
.参数 参数_记录集句柄, 整数型, , 
.参数 参数_列号, 整数型, , 列号从0开始



.子程序 字段是否可空, 逻辑型, , 
.参数 参数_记录集句柄, 整数型, , 
.参数 参数_字段序号, 整数型, , 列号从0开始



.子程序 取记录数, 整数型, , 
.参数 参数_表名, 文本型, , 
.参数 参数_条件, 文本型, 可空, 



.子程序 开始事务, 逻辑型, , 


.子程序 回滚事务, 逻辑型, , 


.子程序 提交事务, 逻辑型, , 


.子程序 设超时时间, 逻辑型, , 
.参数 参数_要设置的时间, 整数型, , 



.子程序 取超时时间, 整数型, , 


.子程序 取最后错误, 整数型, , 返回错误号。
.参数 参数_错误状态, 文本型, 参考 可空, 
.参数 参数_错误描述, 文本型, 参考 可空, 



.子程序 枚举SQL服务器, 整数型, , 枚举局域网内中SQL服务器，成功返回服务器名称数量，失败返回0
.参数 参_服务列表, 文本型, 数组, 变量储存返回值



.子程序 枚举SQL数据库, 整数型, , 枚举指定SQL服务器的数据库，成功返回数据列表数量，失败返回0
.参数 参_服务器, 文本型, , 
.参数 参_登录用户名, 文本型, , 
.参数 参_登录密码, 文本型, , 
.参数 参_数据库列表, 文本型, 数组, 变量储存返回值



.类模块 类_钩子, , , 

.子程序 安装钩子_键盘, 整数型, , 成功安装返回钩子句柄，失败返回0
.参数 窗口句柄, 整数型, , 
.参数 钩子回调函数, 子程序指针, 可空, 参数一[按键类型],256=按下，257=放开,258=单击,参数二[键代码]
.参数 是否全局, 逻辑型, 可空, 可空，默认为全局。注意，为假 局部时 无单击消息



.子程序 卸载, 逻辑型, , 可以卸载所有使用“钩子_安装xx”命令安装的钩子
.参数 钩子句柄, 整数型, 可空, 通过“钩子_安装xx”返回的钩子句柄



.子程序 安装钩子_鼠标, 整数型, , 成功安装返回钩子句柄，失败返回0
.参数 窗口句柄, 整数型, , 
.参数 钩子回调函数, 子程序指针, 可空, 参数一[键代码],1=左键 2=右键 3=中键 4=滚轮 5=侧键上 6=侧键下,参数二[按键类型] 1=按下 2=弹起 3=双击 4=滚轮往上 5=滚轮往下
.参数 是否全局, 逻辑型, 可空, 可空，默认为全局。为 假 局部时无滚轮上下消息



.类模块 类_线程池, , , 更加灵活的线程池

.子程序 启动, 逻辑型, , 成功返回真，失败返回假。
.参数 线程数, 整数型, , 处理客户请求的最大线程池的数目，最小为1。
.参数 处理函数, 子程序指针, , 处理函数，该函数必须有一个整数形的参数。
.参数 超时返回, 整数型, 可空, 单位为：毫秒。默认为0一直等待。



.子程序 加入工作, 逻辑型, , 成功返回真，失败返回假。
.参数 任务参数, 整数型, , 



.子程序 关闭, 逻辑型, , 成功返回真，失败返回假。
.参数 等待时间, 整数型, 可空, 可空。默认为“5000”毫秒。等待线程池销毁的时间，单位毫秒。如果为-1则无限等待。
.参数 执行函数, 整数型, 可空, 可空。成功关闭后，执行此函数。
.参数 传入参数, 整数型, 可空, 可空。第2个参数为空时，此参数无效。



.子程序 取状态, 逻辑型, , 取一个线程池的状态


.类模块 类_FTP, , , 

.子程序 是否已连接, 逻辑型, , 判断FTP是否已连接服务器；


.子程序 连接FTP服务器, 逻辑型, , 连接FTP服务器；
.参数 FTP服务器地址, 文本型, , 
.参数 用户名, 文本型, 可空, 
.参数 密码, 文本型, 可空, 
.参数 端口号, 整数型, 可空, 
.参数 是否被动模式, 逻辑型, 可空, 



.子程序 断开FTP服务器, 逻辑型, , 断开FTP服务器；


.子程序 目录创建, 逻辑型, , 在FTP上创建目录；
.参数 欲创建的目录名, 文本型, , 欲创建的目录名；



.子程序 目录删除, 逻辑型, , 删除FTP上指定的目录；
.参数 欲删除的目录名, 文本型, , 欲删除的目录名；



.子程序 目录下载, 逻辑型, , 下载FTP上指定的目录；
.参数 欲下载的FTP目录, 文本型, , 欲下载的FTP目录名；
.参数 本地目录, 文本型, , 注意，本地目录必须存在；
.参数 是否使用ASCII码方式, 逻辑型, 可空, 
.参数 错误信息, 文本型, 参考 数组, 返回下载



.子程序 目录上传, 逻辑型, , 上传指定目录到FTP上；
.参数 欲上传的本地目录, 文本型, , 
.参数 FTP目录路径, 文本型, , 目录要存在。
.参数 是否使用ASCII码方式, 逻辑型, 可空, 



.子程序 目录列表, 整数型, , 枚举FTP指定目录里的所有文件；返回找到的文件个数；
.参数 欲列出的文件类型, 文本型, 可空, 可空；留空取所有文件；或是指定文件类型，如："*.txt"；
.参数 欲列出的文件属性, 整数型, 可空, 欲列出的文件属性:1、#只读文件； 2、#隐藏文件； 4、#系统文件； 16、#子目录； 32、#存档文件。通过将这些常量值加起来可以一次设置多个文件属性。如果省略本参数，默认为搜寻所有文件。
.参数 存放文件名的数组, 文本型, 参考 可空 数组, 用于存放文件名的数组；
.参数 存放文件属性数组, 整数型, 参考 可空 数组, 用于存放文件属性数组；
.参数 存放文件尺寸数组, 长整数型, 参考 可空 数组, 用于存放文件尺寸数组；
.参数 存放文件时间数组, 日期时间型, 参考 可空 数组, 用于存放文件时间数组；



.子程序 置现行目录, 逻辑型, , 置现行目录；
.参数 FTP目录路径, 文本型, , FTP目录路径；



.子程序 取现行目录, 文本型, , 取现行目录；


.子程序 文件删除, 逻辑型, , 删除FTP上指定的文件；
.参数 欲删除的FTP文件名, 文本型, , 欲删除的FTP文件名；



.子程序 文件更名, 逻辑型, , 更改FTP上指定文件的名字；
.参数 欲改名的FTP文件名, 文本型, , 欲改名的FTP文件；
.参数 新文件名称, 文本型, , 新文件名称；



.子程序 文件下载, 逻辑型, , 下载FTP上指定的文件；
.参数 欲下载的FTP文件, 文本型, , ‘/1.txt 注意这里需要使用/
.参数 本地文件名_绝对路径, 文本型, , 要保存到本地的路径，带文件名
.参数 是否使用ASCII码方式, 逻辑型, 可空, 



.子程序 文件上传, 逻辑型, , 上传指定文件到FTP上；
.参数 欲上传的本地文件, 文本型, , 如：C:\012.txt
.参数 FTP文件路径, 文本型, , 如：/www/012.txt   请注意/，别用成\了。
.参数 文件上传方式, 整数型, 可空, 可空。默认为2  1=ASCII方式 2=二进制方式



.子程序 文件取大小, 长整数型, , 取出FTP上指定文件的大小；
.参数 FTP文件路径, 文本型, , 



.子程序 目录取大小, 长整数型, , 取出FTP上指定目录的大小；
.参数 FTP目录路径, 文本型, , 



.子程序 文件取属性, 整数型, , 取出FTP上指定文件的属性；
.参数 FTP文件路径, 文本型, , 
.参数 区分大小写, 逻辑型, 可空, 默认为假！不区分大小写。



.子程序 目录取属性, 整数型, , 取出FTP上指定目录的属性；
.参数 FTP目录路径, 文本型, , 
.参数 区分大小写, 逻辑型, 可空, 默认为假！不区分大小写。



.子程序 文件取时间, 日期时间型, , 返回文件最后修改时间。失败返回100年1月1日
.参数 FTP文件路径, 文本型, , 
.参数 区分大小写, 逻辑型, 可空, 默认为假！不区分大小写。



.子程序 目录取时间, 日期时间型, , 返回目录最后修改时间。
.参数 FTP目录路径, 文本型, , 
.参数 区分大小写, 逻辑型, 可空, 默认为假！不区分大小写。



.子程序 文件是否存在, 逻辑型, , 判断FTP指定的文件是否存在；存在返回真，不存在返回假；
.参数 FTP文件路径, 文本型, , 
.参数 区分大小写, 逻辑型, 可空, 默认为假！不区分大小写。



.子程序 目录是否存在, 逻辑型, , 判断FTP指定的目录是否存在；存在返回真，不存在返回假；
.参数 FTP目录路径, 文本型, , 
.参数 区分大小写, 逻辑型, 可空, 默认为假！不区分大小写。



.子程序 进度下载, 逻辑型, , 
.参数 网络文件, 文本型, , 
.参数 本地文件, 文本型, , 
.参数 下载回调, 子程序指针, 可空, 3个参数；1＝已下载，长整数型指针。2=速度，整数型。3＝百分比，整数型。



.类模块 类_json, , , 

.子程序 解析, 逻辑型, , 如果返回假，请检查Json文本是否为标准格式，如果确定，请检查 Windows 里 System 和 SysWOW64 是否需要权限
.参数 JSON文本, 文本型, , 必须是标准的JSON格式
.参数 为对象, 逻辑型, 可空, 



.子程序 清除, 逻辑型, , 


.子程序 取数据文本, 文本型, , 


.子程序 置属性, 逻辑型, , 
.参数 属性名, 文本型, 可空, ['属性名是INT或运算符']
.参数 值, 文本型, 可空, 
.参数 为对象, 逻辑型, 可空, 属性解析为json对象或数组



.子程序 置属性对象, 逻辑型, , 属性解析为json对象或数组
.参数 属性名, 文本型, 可空, ['属性名是INT或运算符']
.参数 值, 文本型, 可空, 



.子程序 属性是否存在, 逻辑型, , 
.参数 属性名, 文本型, 可空, 



.子程序 取类型, 整数型, , -1、未知；0、未定义；1、布尔值；2、数值；4、对象；5、数组；6、字符串
.参数 属性名, 文本型, 可空, ['属性名是INT或运算符']



.子程序 取通用属性, 文本型, , 
.参数 属性名, 文本型, 可空, ['属性名是INT或运算符']
.参数 为对象, 逻辑型, 可空, 属性解析为json对象或数组



.子程序 取所有属性名, 整数型, , 属性名指向JSON类型必须为对象
.参数 属性名数组, 文本型, 参考 可空 数组, 
.参数 属性名, 文本型, 可空, ['属性名是INT或运算符']



.子程序 成员数, 整数型, , 属性名指向JSON类型必须为数组
.参数 属性名, 文本型, 可空, ['属性名是INT或运算符']



.子程序 取属性, 类_json, , 
.参数 属性名, 文本型, 可空, ['属性名是INT或运算符']



.子程序 加成员, 逻辑型, , 
.参数 值, 文本型, 可空, 
.参数 属性名, 文本型, 可空, ['属性名是INT或运算符']
.参数 为对象, 逻辑型, 可空, 属性解析为json对象或数组
.参数 开头添加, 逻辑型, 可空, 留空默认为末尾添加



.子程序 取成员, 类_json, , 
.参数 成员索引, 整数型, 可空, 成员索引从0开始
.参数 属性名, 文本型, 可空, ['属性名是INT或运算符']



.子程序 取成员文本, 文本型, , 
.参数 成员索引, 整数型, 可空, 成员索引从0开始
.参数 属性名, 文本型, 可空, ['属性名是INT或运算符']
.参数 为对象, 逻辑型, 可空, 属性解析为json对象或数组



.子程序 置成员, 逻辑型, , 
.参数 成员索引, 整数型, 可空, 成员索引从0开始
.参数 属性名, 文本型, 可空, ['属性名是INT或运算符']
.参数 值, 文本型, 可空, 
.参数 为对象, 逻辑型, 可空, 属性解析为json对象或数组



.子程序 删成员, 逻辑型, , 
.参数 成员索引, 整数型, 可空, 成员索引从0开始
.参数 属性名, 文本型, 可空, ['属性名是INT或运算符']



.子程序 删属性, 逻辑型, , 
.参数 属性名, 文本型, 可空, ['属性名是INT或运算符']



.子程序 置属性数值, 逻辑型, , 
.参数 属性名, 文本型, 可空, ['属性名是INT或运算符']
.参数 值, 双精度小数型, 可空, 



.子程序 取属性数值, 双精度小数型, , 
.参数 属性名, 文本型, 可空, ['属性名是INT或运算符']



.子程序 取属性对象, 文本型, , 
.参数 属性名, 文本型, 可空, ['属性名是INT或运算符']



.子程序 取回对象, 对象, , 


.子程序 取所有属性值, 整数型, , 取指定路径下所有属性的值
.参数 属性值数组, 文本型, 参考 可空 数组, 
.参数 属性名, 文本型, 可空, 属性名指向JSON类型必须为对象
.参数 向下递归, 逻辑型, 可空, 



.类模块 类_内存配置项, , , 

.子程序 写配置项, 逻辑型, , 将配置项写入内存
.参数 节名称, 文本型, , 
.参数 配置项名称, 文本型, , 
.参数 欲写入值, 文本型, , 



.子程序 读配置项, 文本型, , 返回 节名称->配置项名称->值
.参数 节名称, 文本型, , 
.参数 配置项名称, 文本型, , 
.参数 默认文本, 文本型, 可空, 注明：如果指定配置项不存在，将返回此默认文本。如果指定配置项不存在且本参数被省略，将返回空文本。



.子程序 读配置项_整数, 整数型, , 返回 节名称->配置项名称->值
.参数 节名称, 文本型, , 
.参数 配置项名称, 文本型, , 
.参数 默认数值, 整数型, 可空, 注明：如果指定配置项不存在，将返回此默认数值。如果指定配置项不存在且本参数被省略，将返回0。



.子程序 删除配置项, 逻辑型, , 返回删除是否i成功
.参数 节名称, 文本型, , 
.参数 配置项名称, 文本型, 可空, 留空则删除'节名称'的所有'配置项'



.子程序 清空, 空白型, , 所有数据将丢失


.子程序 取所有配置项, 整数型, , 返回'配置项名'的数量
.参数 节名称, 文本型, 可空, 留空取所有的配置项数目
.参数 配置项_参考_数组, 配置项数据, 参考 可空 数组, 留空为不取



.子程序 取配置项名, 整数型, , 返回'配置项名'的数量
.参数 节名称, 文本型, , 留空取所有的配置项数目
.参数 配置项名称_参考_数组, 文本型, 参考 数组, 



.子程序 取配置节名, 整数型, , 返回'节名称'的数量
.参数 节名称_参考_数组, 文本型, 参考 可空 数组, 接收节名称数组



.子程序 加载配置项_从文件, 逻辑型, , 将一配置文件内容加载到内存配置中，但不管内存配置项如何变动不会对该配置文件进行任何修改。
.参数 配置文件名路径, 文本型, , 例 c:\config.ini
.参数 自动保存, 逻辑型, 可空, 类销毁时,是否自动保存配置到文件(配置文件名)



.子程序 加载配置项_从内存, 逻辑型, , 将一符合配置文件格式的内存数据加载到内存配置中。
.参数 文本数据, 字节集, , 



.子程序 取配置数据, 字节集, , 配置项的文件信息,用于下次加载


.子程序 写到文件, 逻辑型, , 将当前内存配置内容写出到文件
.参数 配置文件名, 文本型, 可空, 例： c:\config.ini,留空,则使用加载配置项_从文件()时提供的 '配置文件名路径'



.类模块 注册表操作Ex, , , 注册表操作,包括注册表的读,写.支持64位

.子程序 关闭键Ex, 整数型, , 关闭一个已经打开的键句柄,关闭之后需要重新调用打开键Ex才能进行其他操作,如果已经关闭则返回-1


.子程序 打开键Ex, 整数型, , 如果键不存在,则失败.成功键的句柄,失败返回-1,通过取最后错误查看错误码;注意,使用该命令时,如果键已打开,则自动关闭键后在执行本操作
.参数 键根目录, 整数型, , #HKEY_*开头的常量
.参数 全路径注册项名, 文本型, , 完整的键路径,不包括"HKEY_*" 例如:SOFTWARE\Test



.子程序 创建并打开键Ex, 整数型, , 如果键不存在,则创建一个键之后打开,如果键存在则直接打开;返回键的句柄,失败返回-1,通过取最后错误查看错误码;
.参数 键根目录, 整数型, , #HKEY_*开头的常量
.参数 全路径注册项名, 文本型, , 完整的键路径,不包括"HKEY_*" 例如:SOFTWARE\Test



.子程序 枚举子项Ex, 整数型, , 枚举指定项名称下的子项(成功返回子项目数,失败返回-1);
.参数 键根目录, 整数型, , #HKEY_*开头的常量
.参数 全路径注册项名, 文本型, , 完整的键路径,不包括"HKEY_*" 例如:SOFTWARE\Test
.参数 子项, 文本型, 参考 可空 数组, 获取的子项数组



.子程序 方法_取最后错误代码Ex, 整数型, , 取出这个值后,可以根据GetlastError获取错误信息


.子程序 枚举键信息Ex, 整数型, , 枚举指定项名称下的键信息(成功返回键名数,失败返回-1),需要先调用打开键Ex或打开键Ex2
.参数 键根目录, 整数型, , #HKEY_*开头的常量
.参数 全路径注册项名, 文本型, , 完整的键路径,不包括"HKEY_*" 例如:SOFTWARE\Test
.参数 注册表键信息, 注册表_键, 参考 数组, 作为返回值返回



.子程序 键是否存在Ex, 逻辑型, , 判断键是否存在,亦可可以直接使用"打开键Ex"进行判断
.参数 键根目录, 整数型, , #HKEY_*开头的常量
.参数 全路径注册项名, 文本型, , 完整的键路径,不包括"HKEY_*" 例如:SOFTWARE\Test



.子程序 读取键值Ex, 整数型, , 成功返回0,失败返回错误码.需要先调用打开键Ex或打开键Ex2
.参数 键根目录, 整数型, , #HKEY_*开头的常量
.参数 全路径注册项名, 文本型, , 完整的键路径,不包括"HKEY_*" 例如:SOFTWARE\Test
.参数 键名称, 文本型, , 键的名称
.参数 项目信息_out, 注册表_键, 参考, 用于返回的



.子程序 写入键值Ex_文本, 整数型, , 成功返回0,失败返回错误码；注意，该函数只能写入文本型的值
.参数 键根目录, 整数型, , #HKEY_*开头的常量
.参数 全路径注册项名, 文本型, , 完整的键路径,不包括"HKEY_*" 例如:SOFTWARE\Test
.参数 键名称, 文本型, , 键的名称
.参数 欲写入值, 字节集, , 使用 到字节集()
.参数 写入类型, 整数型, , 只适用于：REG_SZ;REG_EXPAND_SZ;REG_MULTI_SZ;#REG_BINARY
.参数 是否自动创建, 逻辑型, 可空, 如果不存在的话，是否创建该键



.子程序 写入键值Ex_数值, 整数型, , 
.参数 键根目录, 整数型, , #HKEY_*开头的常量
.参数 全路径注册项名, 文本型, , 完整的键路径,不包括"HKEY_*" 例如:SOFTWARE\Test
.参数 键名称, 文本型, , 键的名称
.参数 欲写入值, 长整数型, , 注意。理论上：DWORD最大值为：4294967295  QWORD最大值为：18446744073709551615，但是QWORD最大值超过了整数型的最大长度，请谨慎使用
.参数 写入类型, 整数型, , 只适用于：#REG_DWORD;#REG_DWORD_BIG_ENDIAN;
.参数 是否自动创建, 逻辑型, 可空, 如果不存在的话，是否创建该键



.子程序 写QWORD_64值, 逻辑型, , 写入64位长整数值,成功返回真,失败返回假.源码由@pp25729391提供。
.参数 键根目录, 整数型, , #HKEY_*开头的常量
.参数 全路径注册项名, 文本型, , 完整的键路径,不包括"HKEY_*" 例如:SOFTWARE\Test
.参数 键名称, 文本型, , 键的名称
.参数 值_十六进制文本, 文本型, , 



.子程序 删除键值Ex, 整数型, , 删除一个键值.
.参数 键根目录, 整数型, , #HKEY_*开头的常量
.参数 全路径注册项名, 文本型, , 完整的键路径,不包括"HKEY_*" 例如:SOFTWARE\Test
.参数 键名, 文本型, , 



.子程序 删除注册表项, 整数型, , 删除整个项,项下面所有的键值将会被自动删除.
.参数 键根目录, 整数型, , #HKEY_*开头的常量
.参数 全路径注册项名, 文本型, , 完整的键路径,不包括"HKEY_*" 例如:SOFTWARE\Test



.子程序 格式化键值类型, 文本型, , 说明键值
.参数 键值, 整数型, , REG_*



.类模块 类_配置项, , , 本类由萧阳天编写；MSDN资料:http://msdn.microsoft.com/en-us/library/windows/desktop/ms724875(v=vs.85).aspx

.子程序 写入节, 逻辑型, , 
.参数 配置文件, 文本型, , 
.参数 节名称, 文本型, , 
.参数 写入内容, 字节集, , 



.子程序 读取节, 字节集, , 
.参数 配置文件, 文本型, , 
.参数 节名称, 文本型, , 



.子程序 枚举节, 整数型, , 返回配置文件中所有已有节名的数量。
.参数 配置文件, 文本型, , 
.参数 节数组, 文本型, 数组, 变量储存返回值。



.子程序 取节数, 整数型, , 
.参数 配置文件, 文本型, , 



.子程序 删除节, 逻辑型, , 注意，此命令将会删除指定节上所有项目，一但删除将无法挽回。成功返回真，失败返回假。
.参数 配置文件, 文本型, , 
.参数 节名称, 文本型, , 



.子程序 读项文本, 文本型, , 读取指定配置文件中指定项目的文本内容。本命令为初级命令。
.参数 配置文件名, 文本型, , 指定配置文件的名称，通常以.ini作为文件名后缀。
.参数 节名称, 文本型, , 包含欲读入配置项所处节的名称。
.参数 配置项名称, 文本型, , 参数值指定欲读入配置项在其节中的名称。
.参数 默认文本, 文本型, 可空, 可以被省略。如果指定配置项不存在，将返回此默认文本。如果指定配置项不存在且本参数被省略，将返回空文本。



.子程序 写项文本, 逻辑型, , 将指定文本内容写入指定配置项中或者删除指定的配置项或节，如果指定配置文件不存在，将会自动创建。成功返回真，失败返回假。本命令为初级命令。
.参数 配置文件名, 文本型, , 指定配置文件的名称，通常以.ini作为文件名后缀。
.参数 节名称, 文本型, , 包含欲写入配置项所处节的名称。
.参数 配置项名称, 文本型, 可空, 可以被省略。参数值指定欲写入配置项在其节中的名称。如果参数值被省略，则删除指定节及其下的所有配置项。
.参数 欲写入值, 文本型, 可空, 可以被省略。参数值指定欲写入到指定配置项中的文本。如果参数值被省略，则删除所指定配置项。



.子程序 删除项, 逻辑型, , 注意，此命令将会删除指定节上指定配置项，一但删除将无法挽回。成功返回真，失败返回假。
.参数 配置文件, 文本型, , 
.参数 节名称, 文本型, , 
.参数 配置项名称, 文本型, , 



.子程序 枚举项, 整数型, , 
.参数 配置文件, 文本型, , 
.参数 节名称, 文本型, , 
.参数 名称, 文本型, 数组, 变量储存返回值。
.参数 值, 文本型, 数组, 



.子程序 取项数, 整数型, , 
.参数 配置文件, 文本型, , 
.参数 节名称, 文本型, , 



.子程序 读项数值, 整数型, , 读取指定配置文件中指定项目的文本内容。本命令为初级命令。
.参数 配置文件名, 文本型, , 指定配置文件的名称，通常以.ini作为文件名后缀。
.参数 节名称, 文本型, , 包含欲读入配置项所处节的名称。
.参数 配置项名称, 文本型, , 参数值指定欲读入配置项在其节中的名称。
.参数 默认数值, 整数型, 可空, 可以被省略。如果指定配置项不存在，将返回此默认文本。如果指定配置项不存在且本参数被省略，将返回空文本。



.子程序 写项结构, 逻辑型, , 把指定数据结构以字节集方式存入配置项，成功返回真，失败返回假。
.参数 配置文件名, 文本型, , 
.参数 节名称, 文本型, , 
.参数 配置项名称, 文本型, , 
.参数 数据结构, 字节集, , 



.子程序 读项结构, 字节集, , 取回｛写项结构()｝写入的结构数据，失败返回Null。
.参数 配置文件名, 文本型, , 
.参数 节名称, 文本型, , 
.参数 配置项名称, 文本型, , 
.参数 数据结构大小, 整数型, , 



.子程序 写系统节, 逻辑型, , 注意：设置系统配置项可能造成系统不稳定，请谨慎。向系统Win.ini中写入配置项，成功返回真，失败返回假。
.参数 节名称, 文本型, , 
.参数 内容, 字节集, , 



.子程序 读系统节, 字节集, , 
.参数 节名称, 文本型, , 



.子程序 枚举系统项, 整数型, , 枚举系统win.ini中的配置项及值，失败返回Null。
.参数 节名称, 文本型, , 
.参数 项名称, 文本型, 数组, 变量储存返回值。
.参数 值, 文本型, 可空 数组, 变量储存返回值。



.子程序 取系统项数, 整数型, , 
.参数 节名称, 文本型, , 



.子程序 读系统项文本, 文本型, , 从系统Win.ini中读取指定配置项文本，失败失败Null。本命令为初级命令。
.参数 节名称, 文本型, , 包含欲读入配置项所处节的名称。
.参数 配置项名称, 文本型, , 参数值指定欲读入配置项在其节中的名称。
.参数 默认文本, 文本型, 可空, 可以被省略。如果指定配置项不存在，将返回此默认文本。如果指定配置项不存在且本参数被省略，将返回空文本。



.子程序 写系统项文本, 逻辑型, , 注意：设置系统配置项可能造成系统不稳定，请谨慎。向系统Win.ini配置项中写入文本值，成功返回真，失败返回假。
.参数 节名称, 文本型, , 包含欲读入配置项所处节的名称。
.参数 配置项名称, 文本型, , 参数值指定欲读入配置项在其节中的名称。
.参数 欲写入值, 文本型, , 



.子程序 读系统项数值, 整数型, , 从系统Win.ini中读取指定配置项数值，失败失败Null。本命令为初级命令。
.参数 节名称, 文本型, , 包含欲读入配置项所处节的名称。
.参数 配置项名称, 文本型, , 参数值指定欲读入配置项在其节中的名称。
.参数 默认数值, 整数型, 可空, 可以被省略。如果指定配置项不存在，将返回此默认文本。如果指定配置项不存在且本参数被省略，将返回空文本。



.类模块 类_CPU信息, , , 

.子程序 取地址宽度, 整数型, , 失败返回-1。
.参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。



.子程序 取架构, 整数型, , 失败返回-1。返回值：0=x86；1=MiPs；2=Alpha；3=PowerPC；5=ARM；6=Itanium-based systems；9=x64
.参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。



.子程序 取状态, 整数型, , 失败返回-1。返回值；0=未知；1=启用；2=用户通过CPU禁用BIOS设置；3=CPU禁用BIOS(POST错误)；4=CPU空闲。
.参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。



.子程序 取当前时钟速度, 整数型, , 失败返回-1。
.参数 CPU索引, 整数型, 可空, 



.子程序 取当前电压, 整数型, , 失败返回-1。
.参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。



.子程序 取数据宽度, 整数型, , 失败返回-1。
.参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。



.子程序 取描述, 文本型, , 
.参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。



.子程序 取设备编号, 文本型, , 
.参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。



.子程序 取二级缓存, 整数型, , 
.参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。



.子程序 取三级缓存, 整数型, , 
.参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。



.子程序 取占用率, 整数型, , 
.参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。



.子程序 取制造商, 文本型, , 
.参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。



.子程序 最大时钟速度, 整数型, , 
.参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。



.子程序 取名称, 文本型, , 
.参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。



.子程序 取型号, 文本型, , 
.参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。



.子程序 取核心数, 整数型, , 
.参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。



.子程序 取线程数, 整数型, , 
.参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。



.子程序 取序列号, 文本型, , 
.参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。



.子程序 取处理器类型, 整数型, , 失败返回-1。返回值；1=其它；2=未知；3=中央处理器；4=数学处理器；5=DSP处理器；6=视频处理器
.参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。



.子程序 取修订号, 整数型, , 
.参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。



.类模块 类_系统信息, , , http://msdn.microsoft.com/en-us/library/aa394239(v=vs.85).aspx

.子程序 取建立号码, 整数型, , 


.子程序 取引导设备, 文本型, , 


.子程序 取内部版本类型, 文本型, , 


.子程序 取标题, 文本型, , 


.子程序 取代码集, 文本型, , 


.子程序 取国家代码, 文本型, , 


.子程序 取最后服务包, 文本型, , 


.子程序 取域名称, 文本型, , 


.子程序 取当前时区, 整数型, , 


.子程序 数据执行保护_是否有效, 逻辑型, , 不支持2003系统。


.子程序 数据执行保护_支持32位程序, 逻辑型, , 不支持2003系统。


.子程序 数据执行保护_设备正常, 逻辑型, , 不支持2003系统。


.子程序 数据执行保护_支持方式, 整数型, , 不支持2003系统。


.子程序 是否支持调试, 逻辑型, , 


.子程序 取描述, 文本型, , 


.子程序 是否分布式系统, 逻辑型, , 


.子程序 取加密位数, 整数型, , 


.子程序 前台程序加速, 整数型, , 0表示无，1最小，2最大(默认)


.子程序 取剩余物理内存, 长整数型, , 


.子程序 取可用页面文件, 长整数型, , 


.子程序 取操作系统名称, 文本型, , 


.子程序 取可用虚拟内存, 长整数型, , 


.子程序 取安装日期, 日期时间型, , 


.子程序 取最后关机时间, 日期时间型, , 


.子程序 取现行时间, 日期时间型, , 


.子程序 取语言环境, 文本型, , 


.子程序 取制造商, 文本型, , 


.子程序 取最大进程数, 整数型, , 


.子程序 取最大进程内存, 长整数型, , 


.子程序 取多国语言包, 整数型, , 
.参数 返回语言包, 文本型, 数组, 变量储存返回值。



.子程序 取进程数, 整数型, , 


.子程序 取用户会话数, 整数型, , 


.子程序 取系统SKU, 整数型, , 不支持，Windows Server 2003:返回值；0=未定；1=终极版；2=家庭基础版；3=家庭高级版；4=企业版；5=家庭基本版N版;6=商业版;7=标准服务器版;8=数据中心服务器版;9=小型企业服务器版;10=企业服务器版;11=入门版;12=数据中心服务器核心版;13=标准的服务器核心版;14=企业服务器核心版;15=企业服务器版itanium系统;16=企业版N版;17=Web服务器版;18=集群服务器版;19=家庭服务器版;20=存储Express服务器版;21=存储标准服务器版;22=存储工作组服务器版;23=存储企业服务器版;24=服务器为小型企业版;25=Small Business Server Premium Edition;29=Web Server, Server Core;39=Datacenter Edition without Hyper-V, Server Core;40=Standard Edition without Hyper-V, Server Core;41=Enterprise Edition without Hyper-V, Server Core;42=Hyper-V服务器。


.子程序 取国家, 文本型, , 


.子程序 取系统位数, 文本型, , 不支持，Windows Server 2003:


.子程序 取系统语言, 整数型, , 如2052表示，中文(简体)-中华人民共和国


.子程序 取系统套件, 整数型, , 


.子程序 取系统类型, 整数型, , 0=未知；1=其它；2=宏命令；3=ATTUNIX；4=DGUX；5=DECNT；


.子程序 是否为NT系统, 逻辑型, , 


.子程序 取其它类型描述, 文本型, , 


.子程序 PAE是否启用, 逻辑型, , 


.子程序 取附加产品ID, 文本型, , 


.子程序 取附加版本号, 整数型, , 


.子程序 是否便携式系统, 逻辑型, , 


.子程序 是否主系统, 逻辑型, , 


.子程序 是否为服务器, 逻辑型, , 


.子程序 取注册用户名, 文本型, , 


.子程序 取序列号, 文本型, , 


.子程序 取服务包主版本号, 整数型, , 


.子程序 取服务包次版本号, 整数型, , 


.子程序 取存储的分页大小, 长整数型, , 


.子程序 取状态, 文本型, , 


.子程序 取嵌套掩码, 整数型, , 


.子程序 取系统设备, 文本型, , 


.子程序 取系统目录, 文本型, , 


.子程序 取系统盘, 文本型, , 


.子程序 取总交换空间, 长整数型, , 


.子程序 取总虚拟内存, 长整数型, , 


.子程序 取总物理内存, 长整数型, , 


.子程序 取版本, 文本型, , 


.子程序 取系统安装目录, 文本型, , 


.子程序 是否为域控制器, 逻辑型, , 


.子程序 是否为工作站, 逻辑型, , 


.子程序 取当前用户, 文本型, , 


.子程序 取时区, 文本型, , 


.子程序 取货币符号, 文本型, , 


.子程序 取日期格式, 文本型, , 


.子程序 取时间格式, 文本型, , 


.类模块 类_通用对话框, , , 

.子程序 打开文件, 文本型, , 与支持库通用对话框功能一样，成功返回一个通用对话框文件名，失败返回空。
.参数 易样式, 逻辑型, 可空, 是否使用易语言样式。可为空，默认不使用。
.参数 标题, 文本型, 可空, 仅适用于打开文件和保存文件对话框。
.参数 文件名, 文本型, 可空, 从本属性中读取的文件名包括驱动器符和全路径目录，同时本属性也用作初始对话框中的文件名编辑框。
.参数 过滤器, 文本型, 可空, 文本型。过滤器文本由单个或多个成对的文本串组成，每对文本串的第一个描述显示形式，如：“文本文件（*.txt）”；第二个指定实际的过滤匹配符，如：“*.txt”，所有各文本串之间用“|”号隔开。
.参数 初始目录, 文本型, 可空, 指定当打开对话框时所自动跳转到的目录。
.参数 默认文件后缀, 文本型, 可空, 指定当用户没有输入文件的后缀名称时所自动使用的文件后缀名称。
.参数 创建时提示, 逻辑型, 可空, 当类型为打开文件对话框时，如果用户指定了一个不存在的文件名称，是否提示用户即将创建它。
.参数 文件必须存在, 逻辑型, 可空, 当类型为打开文件对话框时，是否允许用户指定一个不存在的文件。
.参数 目录必须存在, 逻辑型, 可空, 是否允许用户指定一个不存在的目录。
.参数 不改变目录, 逻辑型, 可空, 在对话框关闭后是否自动返回到进入对话框时的文件目录。



.子程序 保存文件, 文本型, , 与支持库通用对话框功能一样，成功返回一个通用对话框文件名，失败返回空。
.参数 易样式, 逻辑型, 可空, 是否使用易语言样式。可为空，默认不使用。
.参数 标题, 文本型, 可空, 仅适用于打开文件和保存文件对话框。
.参数 文件名, 文本型, 可空, 从本属性中读取的文件名包括驱动器符和全路径目录，同时本属性也用作初始对话框中的文件名编辑框。
.参数 过滤器, 文本型, 可空, 格式：“MP3文件(*.mp3)|*.mp3|媒体文件(*.mpg)|*.mpg”
.参数 初始目录, 文本型, 可空, 指定当打开对话框时所自动跳转到的目录。
.参数 默认文件后缀, 文本型, 可空, 指定当用户没有输入文件的后缀名称时所自动使用的文件后缀名称。
.参数 文件覆盖提示, 逻辑型, 可空, 当类型为保存文件对话框时，如果用户指定了一个已经存在的文件，是否询问用户确定覆盖此文件。
.参数 目录必须存在, 逻辑型, 可空, 是否允许用户指定一个不存在的目录。
.参数 不改变目录, 逻辑型, 可空, 在对话框关闭后是否自动返回到进入对话框时的文件目录。



.子程序 多选文件, 文本型, , 显示一个文件打开对话框，允许用户选择或输入多个所需要打开的已存在文件，返回用户所选择或输入后的结果文本型。
.参数 易样式, 逻辑型, 可空, 是否使用易语言样式。可为空，默认不使用。
.参数 标题, 文本型, 可空, 可以被省略。指定文件打开对话框的标题，如果被省略，则默认为“请输入欲打开的文件：”。
.参数 过滤器, 文本型, 可空, 可以被省略。过滤器文本由单个或多个成对的文本串组成，每对文本串的第一个描述显示形式，如：“文本文件（*.txt）”；
.参数 初始目录, 文本型, 可空, 可以被省略。指定当打开对话框时所自动跳转到的目录，如果被省略，则默认为当前目录。



.子程序 选择字体, 字体, , 打开选择字体对话框，成功返回字体相关信息，调用格式如； 编辑框.字体=选择字体()
.参数 字体名称, 文本型, 可空, 
.参数 字体大小, 整数型, 可空, 
.参数 字体颜色, 整数型, 可空, 
.参数 加粗, 逻辑型, 可空, 
.参数 倾斜, 逻辑型, 可空, 
.参数 删除线, 逻辑型, 可空, 
.参数 下划线, 逻辑型, 可空, 



.类模块 类_任务栏, , , http://msdn.microsoft.com/en-us/library/windows/desktop/bb774652(v=vs.85).aspx

.子程序 显示图标, 逻辑型, , 
.参数 窗口句柄, 整数型, , 



.子程序 隐藏图标, 逻辑型, , 
.参数 窗口句柄, 整数型, , 



.子程序 激活图标, 逻辑型, , 激活任务栏指定图标，并非激活窗口。
.参数 窗口句柄, 整数型, , 



.子程序 取消激活, 逻辑型, , 取消指定激活指定图标。
.参数 窗口句柄, 整数型, , 



.子程序 注册热键, 空白型, , 
.参数 功能键, 整数型, , 1=Alt键；2=Ctrl键；4=Shift键；8=Win键，组合则相加。
.参数 主热键, 整数型, , 键代码，可以使用易语言中的键代码常量。
.参数 执行事件, 子程序指针, , 



.子程序 取消热键, 逻辑型, , 


.子程序 取句柄, 整数型, , 


.子程序 隐藏, 逻辑型, , 


.子程序 显示, 逻辑型, , 


.子程序 取高度, 整数型, , 


.子程序 监视全屏, 空白型, , 
.参数 窗口句柄, 整数型, , 第三方窗口无效，易中用 取窗口句柄()
.参数 处理程序, 子程序指针, , 参数1；事件类型【整数型】输出值：1全屏；0退出全屏



.子程序 是否隐藏, 逻辑型, , 判断任务栏是否隐藏状态。


.子程序 自动隐藏, 逻辑型, , 设置任务栏自动隐藏，成功返回真，失败返回假。
.参数 启用, 逻辑型, , 



.子程序 取矩形, 整数型, , 成功返回1，失败返回错误代码。
.参数 矩形, 精易_矩形, , 变量储存返回值。



.子程序 取位置, 整数型, , 返回任务栏位置，返回值：0=左部；1=顶部；2=右部；3=底部


.子程序 全部最小化, 逻辑型, , 


.子程序 撤销全部最小化, 逻辑型, , 


.子程序 层叠窗口, 逻辑型, , 


.子程序 堆叠显示窗口, 逻辑型, , 


.子程序 并排显示窗口, 逻辑型, , 


.子程序 显示桌面, 逻辑型, , 


.子程序 属性, 逻辑型, , 


.子程序 切换窗口, 逻辑型, , 最底平台Vista，类似于按下键盘alt+Tab


.子程序 锁定, 逻辑型, , 锁定任务栏禁止更改任务大小与移动。重启explorer或重启后生效。
.参数 开启, 逻辑型, , 



.类模块 类_环境存取, , , 

.子程序 读环境变量, 文本型, , 返回文本，它关连于一个操作系统环境变量。成功时返回所取得的值，失败则返回空文本。
.参数 用户环境变量, 逻辑型, 可空, 真为当前用户环境变量，假为系统环境变量。
.参数 环境变量名称, 文本型, , 



.子程序 写环境变量, 逻辑型, , 修改或建立指定的操作系统环境变量。成功返回真，失败返回假。
.参数 用户环境变量, 逻辑型, 可空, 真为当前用户环境变量，假为系统环境变量。
.参数 环境变量名称, 文本型, , 
.参数 欲写入内容, 文本型, , 



.子程序 删除环境变量, 逻辑型, , 删除系统环境变量，成功返回真，失败返回假。
.参数 用户环境变量, 逻辑型, 可空, 真为当前用户环境变量，假为系统环境变量。
.参数 环境变量名称, 文本型, , 



.子程序 取环境变量数, 整数型, , 返回当前用户环境变量数量，失败返回-1。
.参数 用户环境变量, 逻辑型, 可空, 真为当前用户环境变量，假为系统环境变量。



.子程序 枚举环境变量, 整数型, , 成功返回环境系统或当前用户环境变量数量失败返回-1。
.参数 用户环境变量, 逻辑型, 可空, 真为当前用户环境变量，假为系统环境变量。
.参数 环境变量列表, 文本型, 数组, 变量储存返回值。



.子程序 取命令行, 整数型, , 本命令可以取出在启动易程序时附加在其可执行文件名后面的所有以空格分隔的命令行文本段
.参数 命令行数组, 文本型, 数组, 存放被取回命令行文本的数组变量,本变量数组内被顺序填入在启动易程序时附加在其可执行文件名后面的以空格分隔的命令行文本段



.子程序 取运行目录, 文本型, , 取当前被执行的易程序文件所处的目录。


.子程序 取执行文件名, 文本型, , 取当前被执行的易程序文件的名称。
.参数 是否带路径, 逻辑型, 可空, 



.子程序 取CMD路径, 文本型, , 


.类模块 类_时钟, , , http://msdn.microsoft.com/en-us/library/windows/desktop/ms682485(v=vs.85).aspx

.子程序 创建, 逻辑型, , 
.参数 子程序, 子程序指针, , 周期执行事件。周期事件格式：无返回值，参数1：整数型(参数)，参数2逻辑型
.参数 时钟周期, 整数型, 可空, 默认为1000毫秒，即1秒。
.参数 时钟参数, 整数型, 可空, 传递给时钟周期事件的参数，该参数是周期事件的第一个参数



.子程序 销毁, 逻辑型, , 


.子程序 置周期, 逻辑型, , 
.参数 时钟周期, 整数型, , 



.子程序 取周期, 整数型, , 


.类模块 类_托盘, , , 

.子程序 创建, 逻辑型, , 创建一个托盘图标，成功返回真，失败返回假。
.参数 窗口句柄, 整数型, , 不能设为第三方窗口
.参数 图标数据, 字节集, 可空, 可为空，默认为自身图标。
.参数 提示信息, 文本型, 可空, 本参数指定当鼠标移动到图标上后显示的提示信息。如果省略本参数，默认为空文本。



.子程序 销毁, 逻辑型, , 


.子程序 置提示信息, 逻辑型, , 
.参数 提示信息, 文本型, , 限定128字符以内，超出默认被截断



.子程序 气泡提示, 逻辑型, , 
.参数 提示标题, 文本型, , 限定64字符以内，超出默认被截断
.参数 提示内容, 文本型, , 限定256字符以内，超出默认被截断
.参数 提示图标, 整数型, 可空, 0.托盘图标_无图标,1.托盘图标_信息图标,2.托盘图标_警告图标,3.托盘图标_错误图标
.参数 显示时间, 整数型, 可空, 设置气泡提示的时间，单位：毫秒 可空 默认3秒



.子程序 置图标数据, 逻辑型, , 
.参数 图标数据, 字节集, , 



.子程序 挂接事件, 空白型, , 当托盘图标创建成功后可建立挂接事件。
.参数 执行事件, 子程序指针, 可空, 当用户用鼠标单击或双击本“托盘图标”后调用的子程序，该子程序应该有一个参数，传递事件类型，请参考“托盘事件_”开头的常量



.子程序 刷新托盘, 空白型, , 刷新系统托盘(清除死掉的图标)
.参数 隐藏区域, 逻辑型, 可空, 针对Win7以上系统有托盘隐藏区域，为真则刷新隐藏区域



.子程序 取图标ID, 整数型, , 根据图标索引取图标的ID
.参数 图标索引, 整数型, , 索引从0开始。0 为图标一，1 为图标二，如此类推。



.子程序 取图标数, 整数型, , 取托盘图标总数


.子程序 删除图标, 逻辑型, , 删除托盘上的一个图标
.参数 图标索引, 整数型, , 索引从0开始。0 为图标一，1 为图标二，如此类推。



.子程序 隐藏图标, 逻辑型, , 隐藏托盘图标
.参数 图标索引, 整数型, , 索引从0开始。0 为图标一，1 为图标二，如此类推。



.子程序 显示图标, 逻辑型, , 显示托盘图标
.参数 图标索引, 整数型, , 索引从0开始。0 为图标一，1 为图标二，如此类推。



.子程序 禁用图标, 逻辑型, , 禁用指定图标
.参数 图标索引, 整数型, , 



.子程序 启用图标, 逻辑型, , 启用指定图标
.参数 图标索引, 整数型, , 



.子程序 取图标标题, 文本型, , 取回指定图标的标题文本
.参数 图标索引, 整数型, , 索引从0开始。0 为图标一，1 为图标二，如此类推。



.类模块 类_磁盘信息, , , MSDN:https://msdn.microsoft.com/en-us/library/aa394132(v=vs.85).aspx

.子程序 枚举硬盘, 整数型, , 
.参数 磁盘名称, 文本型, 可空 数组, 变量储存返回值。



.子程序 取描述, 文本型, , 
.参数 硬盘名称, 文本型, , 由 枚举硬盘 命令返回。



.子程序 取固件版本, 文本型, , 这个属性不支持Server 2003系统。
.参数 硬盘名称, 文本型, , 由 枚举硬盘 命令返回。



.子程序 取索引, 整数型, , 
.参数 硬盘名称, 文本型, , 由 枚举硬盘 命令返回。



.子程序 取接口类型, 文本型, , 
.参数 硬盘名称, 文本型, , 由 枚举硬盘 命令返回。



.子程序 取制造商, 文本型, , 
.参数 硬盘名称, 文本型, , 由 枚举硬盘 命令返回。



.子程序 是否加载媒体, 逻辑型, , 
.参数 硬盘名称, 文本型, , 由 枚举硬盘 命令返回。



.子程序 取媒体类型, 文本型, , 
.参数 硬盘名称, 文本型, , 由 枚举硬盘 命令返回。



.子程序 取型号, 文本型, , 
.参数 硬盘名称, 文本型, , 由 枚举硬盘 命令返回。



.子程序 取分区数, 整数型, , 
.参数 硬盘名称, 文本型, , 由 枚举硬盘 命令返回。



.子程序 取PNP设备ID, 文本型, , Windows逻辑设备的即插即用设备标识符。
.参数 硬盘名称, 文本型, , 由 枚举硬盘 命令返回。



.子程序 取SCSI总线, 文本型, , 
.参数 硬盘名称, 文本型, , 由 枚举硬盘 命令返回。



.子程序 取SCSI逻辑单元, 文本型, , 
.参数 硬盘名称, 文本型, , 由 枚举硬盘 命令返回。



.子程序 取SCSI端口, 文本型, , 
.参数 硬盘名称, 文本型, , 由 枚举硬盘 命令返回。



.子程序 取SCSI目标ID, 文本型, , 
.参数 硬盘名称, 文本型, , 由 枚举硬盘 命令返回。



.子程序 取磁道扇区, 整数型, , 
.参数 硬盘名称, 文本型, , 由 枚举硬盘 命令返回。



.子程序 取序列号, 文本型, , 这个属性不支持Server 2003系统。
.参数 硬盘名称, 文本型, , 由 枚举硬盘 命令返回。



.子程序 取特征字, 整数型, , 
.参数 硬盘名称, 文本型, , 由 枚举硬盘 命令返回。



.子程序 取总大小, 长整数型, , 
.参数 硬盘名称, 文本型, , 由 枚举硬盘 命令返回。



.子程序 取总的柱面数, 长整数型, , 
.参数 硬盘名称, 文本型, , 由 枚举硬盘 命令返回。



.子程序 取柱面磁道, 整数型, , 
.参数 硬盘名称, 文本型, , 由 枚举硬盘 命令返回。



.子程序 取总的扇区数, 长整数型, , 
.参数 硬盘名称, 文本型, , 由 枚举硬盘 命令返回。



.子程序 取总的磁道数, 长整数型, , 
.参数 硬盘名称, 文本型, , 由 枚举硬盘 命令返回。



.子程序 取扇区字节, 整数型, , 
.参数 硬盘名称, 文本型, , 由 枚举硬盘 命令返回。



.类模块 类_邮槽服务端, , , http://msdn.microsoft.com/en-us/library/windows/desktop/aa365147(v=vs.85).aspx

.子程序 创建, 逻辑型, , 创建成功返回真，否则返回假。
.参数 邮槽名称, 文本型, , 



.子程序 关闭, 逻辑型, , 关闭邮槽服务器。


.子程序 读数据, 逻辑型, , 只能在服务器端从邮槽中取出数据。读取成功返回真，否则返回假。
.参数 数据, 字节集, 参考, 提供参数数据时只能提供变量。从向邮槽中读出的数据。



.类模块 类_邮槽客户端, , , 

.子程序 创建, 逻辑型, , 邮槽客户机只能向邮槽中写入数据，不能从中读出数据。创建成功返回真，否则返回假。
.参数 服务器名称, 文本型, , 欲连接的邮槽服务器名称，也可以是局域网的域名，这时表示客户机要连接这个局域网域内的所有计算机上名称为参数2的邮槽。该参数也可以是“.”，表示连接本机上的名称为参数2的邮槽。该参数也可以是“*”，表示连接系统主域内的所有计算机上的名称为参数2的邮槽。
.参数 邮槽名称, 文本型, , 欲连接服务器上邮槽的名称。



.子程序 关闭, 逻辑型, , 关闭已经创建的邮槽客户机。


.子程序 写数据, 逻辑型, , 只能在客户机端向邮槽中写入数据。注意写入的数据长度有限制，最大的长度为424字节，如果通讯数据的长度太大，最好选用“命名管道”。写入成功返回真，否则返回假。
.参数 数据, 字节集, , 欲向邮槽中写入的数据，数据长度必须小于424字节，否则出错。



.类模块 类_日志输出, , , 

.子程序 文件路径, 文本型, , 获取与设置日志输出文件目录，请在【输出文件】日志前设置目录。
.参数 参_目录, 文本型, 可空, 默认会在程序运行目录下生成(Log+年月)格式的目录
.参数 参_文件名, 文本型, 可空, 



.子程序 输出文件, 逻辑型, , 输出内容到文件到
.参数 参_内容, 文本型, , 
.参数 参_级别, 整数型, 可空, 默认为【信息】，或如下级别值：0=信息，1=警告，2=错误，3=调试
.参数 参_信息框, 逻辑型, 可空, 默认不提示



.子程序 输出控制台, 逻辑型, , 输入日志内容到控制台
.参数 参_内容, 文本型, , 
.参数 参_级别, 整数型, 可空, 默认为【信息】，或如下级别值：0=信息，1=警告，2=错误，3=调试
.参数 参_标题, 文本型, 可空, 控制台标题，默认 程序日志
.参数 参_写到文件, 逻辑型, 可空, 默认不出日志文件



.子程序 输出易调试, 空白型, , 只在调试模式下有效
.参数 参_内容, 文本型, , 
.参数 参_级别, 整数型, 可空, 默认为【信息】，或如下级别值：0=信息，1=警告，2=错误，3=调试
.参数 参_写到文件, 逻辑型, 可空, 默认不出日志文件



.子程序 输出调试器, 空白型, , 输出到 调试器，编译模式下有效，可用DbgView 查看
.参数 参_内容, 文本型, , 
.参数 参_级别, 整数型, 可空, 默认为【信息】，或如下级别值：0=信息，1=警告，2=错误，3=调试
.参数 参_写到文件, 逻辑型, 可空, 默认不出日志文件



.子程序 输出编辑框, 空白型, , 输出日志内容到编辑框
.参数 参_编辑框句柄, 整数型, , 
.参数 参_内容, 文本型, , 
.参数 参_级别, 整数型, 可空, 默认为【信息】，或如下级别值：0=信息，1=警告，2=错误，3=调试
.参数 参_写到文件, 逻辑型, 可空, 默认不出日志文件



.类模块 类_Accessible, , , 感谢会员【酷宝贝】提供Accessible接口

.子程序 创建自窗口句柄, 逻辑型, , 从指定窗口句柄处获取自绘对象
.参数 参数_窗口句柄, 整数型, , 目标自绘窗口句柄



.子程序 创建自屏幕坐标, 逻辑型, , 从桌面坐标处获取自绘窗口对象
.参数 参数_X, 整数型, , 桌面X坐标
.参数 参数_Y, 整数型, , 桌面Y坐标



.子程序 创建自对象, 空白型, , 内部使用，从指定对象获取自绘窗口对象
.参数 参数_对象, 对象, , 



.子程序 创建自ID, 空白型, , 内部使用，用从指定ID获取自绘窗口对象
.参数 参数_ID, 整数型, , 
.参数 参数_父对象, 对象, , 



.子程序 到变体型, 变体型, , 


.子程序 是否空, 逻辑型, , 


.子程序 取ID, 整数型, , 


.子程序 取父元素, 逻辑型, , accParent
.参数 参数_父元素, 类_Accessible, 参考, 



.子程序 取子元素总数, 整数型, , accChildCount


.子程序 取子元素, 逻辑型, , accChild
.参数 参数_索引, 整数型, , 索引从1开始
.参数 参数_子元素, 类_Accessible, 参考, 



.子程序 枚举子元素, 整数型, , 从指定节点对象枚举下级全部子元素
.参数 参数_子元素组, 类_Accessible, 参考 数组, 



.子程序 取名称, 文本型, , accName


.子程序 置名称, 逻辑型, , accName
.参数 参数_名称, 文本型, , 



.子程序 取值, 文本型, , accValue


.子程序 赋值, 逻辑型, , accValue
.参数 参数_值, 文本型, , 



.子程序 取描述, 文本型, , accDescription


.子程序 取角色, 整数型, , accRole 返回 #ROLE_SYSTEM_ 常量之一


.子程序 取角色文本, 文本型, , accRole 


.子程序 取状态, 整数型, , accState 返回 #STATE_SYSTEM_ 常量组合


.子程序 取状态文本, 文本型, , GetStateText 


.子程序 取帮助, 文本型, , accHelp


.子程序 取帮助主题, 整数型, , accHelpTopic


.子程序 取快捷键, 文本型, , accKeyboardShortcut


.子程序 取默认动作, 文本型, , accDefaultAction


.子程序 取焦点元素, 逻辑型, , accFocus
.参数 参数_焦点元素, 类_Accessible, 参考, 



.子程序 取选择元素, 逻辑型, , accSelection
.参数 参数_选择元素, 类_Accessible, 参考, 



.子程序 选择元素, 空白型, , accSelect
.参数 参数_标志, 整数型, , #SELFLAG_ 常量组合
.参数 参数_被选择元素, 类_Accessible, 可空, 如果为空则表示自身被选择



.子程序 取位置, 空白型, , accLocation
.参数 参数_左边, 整数型, 参考, 
.参数 参数_顶边, 整数型, 参考, 
.参数 参数_宽度, 整数型, 参考, 
.参数 参数_高度, 整数型, 参考, 



.子程序 导航, 逻辑型, , accNavigate
.参数 参数_标志, 整数型, , #NAVDIR_ 常量之一
.参数 参数_开始元素, 类_Accessible, 可空, 
.参数 参数_返回元素, 类_Accessible, 参考, 



.子程序 命中测试, 逻辑型, , accHitTest
.参数 参数_左边, 整数型, , 
.参数 参数_顶边, 整数型, , 
.参数 参数_元素, 类_Accessible, 参考, 



.子程序 执行默认动作, 空白型, , accDoDefaultAction


.子程序 取窗口句柄, 整数型, , 


.子程序 获取对象, 空白型, , 
.参数 参_对象m_parent, 对象, 参考, 
.参数 参_对象m_self, 对象, 参考, 



.类模块 类_POST数据类, , , 

.子程序 添加, 空白型, , 添加指定键名与键值
.参数 key, 文本型, , 
.参数 value, 文本型, , 当前值会进行utf-8的编码
.参数 转码, 逻辑型, 可空, 可空，是否对[值]进行进行utf-8编码，默认为 假=不转码，真=转码



.子程序 添加_批量, 空白型, , 批量加入[带转码]
.参数 文本, 文本型, , 如：a=123&b=456
.参数 转码, 逻辑型, 可空, 可空，是否对[值]进行进行utf-8编码，默认为 假=不转码，真=转码



.子程序 取值, 文本型, , 取指定键名的值
.参数 key, 文本型, , 



.子程序 置值, 空白型, , 置指定键名的键值
.参数 key, 文本型, , 
.参数 value, 文本型, , 



.子程序 获取Post数据, 文本型, , 将添加的数据以数据包格式返回  键名=键值&键名=键值
.参数 是否URL编码, 逻辑型, 可空, 默认为假=不编码，真=URL编码



.子程序 获取协议头数据, 文本型, , 将添加的数据以协议头格式返回  键名:键值
.参数 是否URL编码, 逻辑型, 可空, 默认为假=不编码，真=URL编码



.子程序 获取Key数组, 空白型, , 
.参数 arr, 文本型, 参考 数组, 



.子程序 获取Value数组, 空白型, , 
.参数 arr, 文本型, 参考 数组, 



.子程序 清空, 空白型, , 


.子程序 删除, 空白型, , 删除键值队  删除一个
.参数 key, 文本型, , 



.子程序 获取JSON文本, 文本型, , 将添加的数据以JSON格式返回    ｛键名:键值｝


.类模块 类_POST数据类_字节集, , , 

.子程序 清空, 空白型, , 


.子程序 添加, 空白型, , 
.参数 key, 文本型, , 
.参数 value, 字节集, , 
.参数 types, 文本型, 可空, 如： Content-Type: audio/mp3，请填写【audio/mp3】
.参数 filename, 文本型, 可空, 如： Content-Type: audio/mp3，请填写【audio/mp3】



.子程序 取值, 字节集, , 
.参数 key, 文本型, , 



.子程序 置值, 空白型, , 
.参数 key, 文本型, , 
.参数 value, 字节集, , 



.子程序 获取Post数据, 字节集, , 
.参数 boundary, 文本型, , 
.参数 分割符数量, 整数型, 可空, 默认为2，如：--WebKitFormBoundaryPPRO2xsdBWf1T1h4



.子程序 获取Key数组, 空白型, , 
.参数 arr, 文本型, 参考 数组, 



.子程序 获取Value数组, 空白型, , 
.参数 arr, 字节集, 参考 数组, 



.类模块 类_队列, , , 【先进先出】

.子程序 置缓冲区大小, 空白型, , 置缓冲区大小 缓冲区大小建议是压入数据长度的倍数。（缓冲区大小不影响队列的容量）
.参数 缓冲区大小, 整数型, 可空, 单位：KB，缓冲区大小 默认1M



.子程序 压入字节集, 逻辑型, , 压入字节集 。成功返回真，失败返回假。
.参数 bin, 字节集, , 要压入的数据



.子程序 弹出字节集, 逻辑型, , 弹出字节集 。成功返回真，失败返回假。
.参数 bin, 字节集, 参考, 用来接收弹出数据的变量



.子程序 压入文本, 逻辑型, , 压入文本 。成功返回真，失败返回假。
.参数 str, 文本型, , 要压入的数据



.子程序 弹出文本, 逻辑型, , 弹出文本 。成功返回真，失败返回假。
.参数 str, 文本型, 参考, 用来接收弹出数据的变量



.子程序 压入整数, 逻辑型, , 压入整数 。成功返回真，失败返回假。
.参数 int, 整数型, , 要压入的数据



.子程序 弹出整数, 逻辑型, , 弹出整数 。成功返回真，失败返回假。
.参数 int, 整数型, 参考, 用来接收弹出数据的变量



.子程序 取数量, 整数型, , 


.类模块 类_快速文本, , , 文本的快速累加

.子程序 添加, 空白型, , 
.参数 文本内容, 文本型, , 



.子程序 取文本, 文本型, , 


.子程序 取文件号, 整数型, , 


.子程序 插入, 逻辑型, , 在指定字符后(含中文)插入文本内容
.参数 参_插入位置, 整数型, 可空, 字符数,中文也算一个字符,可空,默认最前
.参数 参_文本内容, 文本型, , 要插入的文本内容



.子程序 取文本内容, 文本型, , 取出文本内容
.参数 参_起始位置, 整数型, 可空, 可空.默认从第一个字符开始
.参数 参_字符数, 整数型, 可空, 可空,默认取全部



.子程序 清空内容, 空白型, , 清空文本内容


.子程序 删除文本, 逻辑型, , 删除指定位置内容
.参数 参_起始位置, 整数型, , 起始位置
.参数 参_字符数, 整数型, , 删除个数,汉字算一个



.子程序 替换文本内容, 逻辑型, , 替换指定位置文本
.参数 参_替换位置, 整数型, , 起始位置
.参数 参_替换长度, 整数型, , 替换长度
.参数 参_替换文本, 文本型, 可空, 替换文本,可空



.子程序 取长度, 整数型, , 取字符数,汉字算一个


.子程序 寻找文本内容, 整数型, , 寻找文本
.参数 参_寻找文本内容, 文本型, , 欲寻找文本
.参数 参_起始寻找位置, 整数型, 可空, 起始位置,可空,默认从最头开始



.子程序 替换子文本内容, 逻辑型, , 子文本替换
.参数 参_被替换文本, 文本型, , 被替换内容
.参数 参_替换为文本, 文本型, 可空, 替换为内容,可空.默认删除
.参数 参_起始替换位置, 整数型, 可空, 起始位置,可空,默认从最前开始
.参数 参_最大替换次数, 整数型, 可空, 最大替换次数.可空.默认替换所有



.子程序 汇编_取字数, 整数型, , 取文本中英文字数
.参数 参_内容, 字节集, , 



.子程序 置文本, 逻辑型, , 置文本
.参数 参_文本, 文本型, , 文本内容



.子程序 从文件读入, 逻辑型, , 读文件内容到内存
.参数 参_文件名, 文本型, , 要读入的文件名



.子程序 写出到文件, 逻辑型, , 写内存内容到文件
.参数 参_文件名, 文本型, , 要写出的文件名



.子程序 删全部空格, 逻辑型, , 删除所有中英文空格


.子程序 删首尾空格, 逻辑型, , 


.子程序 删首空格, 逻辑型, , 


.子程序 删尾空格, 逻辑型, , 


.子程序 到小写字母, 逻辑型, , 
.参数 参_起始位置, 整数型, 可空, 
.参数 参_转换字母数, 整数型, 可空, 



.子程序 到大写字母, 逻辑型, , 
.参数 参_起始位置, 整数型, 可空, 
.参数 参_转换字母数, 整数型, 可空, 



.类模块 类_配置项ex, , , 本类由【果子】编写，简约读写配置项

.子程序 初始化, 空白型, , 可重复初始化，重复初始化将直接覆盖前面的参数值
.参数 配置文件路径, 文本型, 可空, 可空，默认为“程序根目录\Data\Config.ini”
.参数 加密密码, 文本型, 可空, 可空，为空=不加密
.参数 节名前缀, 文本型, 可空, 可空



.子程序 写, 逻辑型, , 
.参数 节名称, 文本型, 可空, 可空，默认为System，包含欲写入配置项所处节的名称。
.参数 配置项名称, 文本型, 可空, 可以被省略。参数值指定欲写入配置项在其节中的名称。如果参数值被省略，则删除指定节及其下的所有配置项。
.参数 欲写入值, 文本型, 可空, 可以被省略。参数值指定欲写入到指定配置项中的文本。如果参数值被省略，则删除所指定配置项。
.参数 加密, 逻辑型, 可空, 用系统自动的密码进行加密。



.子程序 读, 文本型, , 
.参数 节名称, 文本型, 可空, 可空，默认为System，包含欲写入配置项所处节的名称。
.参数 配置项名称, 文本型, , 参数值指定欲读入配置项在其节中的名称。
.参数 默认文本, 文本型, 可空, 可以被省略。如果指定配置项不存在，将返回此默认文本。如果指定配置项不存在且本参数被省略，将返回空文本。
.参数 解密, 逻辑型, 可空, 如果你在写的时候加密了，这里同样也要解决，用系统自动的密码进行解密。



.子程序 置_默认节名称, 空白型, , 默认节名称，当节名称留空时，以此节名称为主
.参数 默认节名称, 文本型, , 当节名称留空时，以此节名称为主



.子程序 置_节名前缀, 空白型, , 
.参数 节名前缀, 文本型, , 



.子程序 批量保存, 逻辑型, , 【编辑框，选择框，单选框，组合框】保存指定窗口上指定组件的内容，与"批量读取()"命令一起用的。【特别注意：组件的[标识]将作为保存配置的项名称，标识为空将不保存】
.参数 父窗口, 窗口, , 直接填写顶级窗口就行了，如:_启动窗口。
.参数 组件类型, 文本型, , 如：“编辑框、组合框、单选框”等等，多个组件请使用半角逗号分隔开。



.子程序 批量读取, 逻辑型, , 读取指定窗口上指定组件的配置内容，与"批量保存()"命令一起用的。【特别注意：组件的[标识]将作为读取配置的项名称，标识为空将不读取】
.参数 父窗口, 窗口, , 直接填写顶级窗口就行了，如:_启动窗口。
.参数 组件类型, 文本型, , 如：“编辑框、组合框、单选框”等等，多个组件请使用半角逗号分隔开。
.参数 例外组件, 文本型, 可空, 请输入不需要读取的组件标识名，如：User,Pass  多个请使用半角逗号分隔开



.子程序 窗口位置_保存, 空白型, , 
.参数 窗口, 窗口, , 
.参数 是否保存窗口大小, 逻辑型, 可空, 可空，默认为假，不保存



.子程序 窗口位置_读取, 空白型, , 
.参数 窗口, 窗口, , 
.参数 是否读取窗口大小, 逻辑型, 可空, 可空，默认为假，不保存



.类模块 类_Cookie, , , Cookie操作类   感谢【@bj2757 】提供源码

.子程序 加入Cookie, 空白型, , 加入单个cookie
.参数 cookie, Cookie, , 需要加入的cookie



.子程序 加入Cookie2, 空白型, , 加入单个cookie
.参数 健, 文本型, , Cookie的名字
.参数 值, 文本型, , Cookie的值



.子程序 加入Cookie文本, 逻辑型, , 自动解析cookie文本并加入当前cookie对象
.参数 cookie字串, 文本型, , 需要加入的文本字串



.子程序 加入Cookie数组, 空白型, , 
.参数 Cookie_数组, Cookie, 数组, 



.子程序 Cookie解析, 空白型, , 根据cookie文本解析cookie并加入返回数组中
.参数 Cookie文本, 文本型, , 需要解析的cookie文本字符串
.参数 Cookie集合, Cookie, 参考 数组, 返回cookie集合
.参数 删收尾引号, 逻辑型, 可空, 默认为真



.子程序 删除Cookie, 逻辑型, , 根据cookie的键删除cookie
.参数 cookieKey, 文本型, , 需要删除cookie的健



.子程序 删除全部, 空白型, , 删除当前对象中所有的cookie


.子程序 取Cookie文本, 文本型, , 返回当前集合中所有的cookie组成的字符串


.子程序 取全部Cookie, 逻辑型, , 如果当前对象没有Cookie则返回假
.参数 Cookie数组, Cookie, 参考 数组, 返回的cookie所存放的数组



.子程序 取Cookie值, 文本型, , 根据键取值 成功返回对应的值 失败返回空
.参数 CookieKey, 文本型, , cookie健



.子程序 取Cookie组, 文本型, , 返回一组cookie
.参数 CookieKey, 文本型, , cookie健



.子程序 取Cookie组对象, Cookie, , 返回一组cookie对象
.参数 CookieKey, 文本型, , cookie健，也就是cookie名称



.子程序 Cookie是否存在, 逻辑型, , 根据key判断cookie中是否存在
.参数 cookieKey, 文本型, , 需要判断的cookie的key



.子程序 Cookie是否存在数组中, 逻辑型, , 根据key判断指定的cookie数组中是否存在
.参数 CookieKey, 文本型, , 需要判断的cookie的key
.参数 Cookie数组, Cookie, 数组, Cookie数组



.子程序 Cookie是否存在文本中, 逻辑型, , 根据key判断指定的cookie字符串文本中是否存在
.参数 CookieKey, 文本型, , 需要判断的cookie的key
.参数 Cookie文本, 文本型, , Cookie文本



.类模块 类_模块枚举, , , 

.子程序 是否位64位进程, 逻辑型, , 


.子程序 枚举64位进程模块, 逻辑型, , 返回假可调用  取最后错误 来获取错误信息
.参数 进程ID, 整数型, , 
.参数 模块, 模块信息, 参考 数组, 



.子程序 枚举32位进程模块, 逻辑型, , 返回假可调用  取最后错误 来获取错误信息
.参数 进程ID, 整数型, , 
.参数 模块, 模块信息, 参考 数组, 



.子程序 枚举进程模块, 空白型, , 自动判断64或32
.参数 进程ID, 整数型, , 
.参数 模块, 模块信息, 参考 数组, 



.子程序 取最后错误, 文本型, , 


.子程序 取文件名, 文本型, , 
.参数 文件路径, 文本型, , 



.子程序 模块名取句柄, 文本型, , 返回十六进制文本
.参数 进程ID, 整数型, , 
.参数 模块名, 文本型, , 



.类模块 类_HTML实体, , , 源码收录自【https://bbs.125.la/forum.php?mod=viewthread&tid=14088175】

.子程序 解码_ANSI, 空白型, , 反转义 ANSI 文本
.参数 ANSI, 文本型, , 



.子程序 解码_UTF8, 空白型, , 反转义 UTF8 文本，内码最终选择了 UTF8，大部分网页的编码也都是 UTF8，而且可以囊括目前世界上所有的字符
.参数 UTF8, 字节集, , 



.子程序 取值_UTF8, 字节集, , 返回反转义的结果，带尾部\0的 UTF8 文本


.子程序 取值_UNICODE, 字节集, , 返回反转义的结果，带尾部\0\0的 UNICODE 文本


.子程序 取值_ANSI, 文本型, , 返回反转义的结果，ANSI 文本 !!! 用到了 HTML Entity 的很多都是无法用 ANSI 表达的字符，很可能乱码


.类模块 HashMap_StrInt, , , 源码收录自【https://bbs.125.la/forum.php?mod=viewthread&tid=14088175】

.子程序 初始化, 空白型, , 


.子程序 初始设置, 逻辑型, , 默认初始容量为16,扩容因数为0.75
.参数 初始容量大小, 整数型, 可空, 留空表示不改变,注意 改变初始容量大小会清除已有数据
.参数 扩容因数, 双精度小数型, 可空, 留空表示不改变,注意 必须小于1且大于0



.子程序 加入, 逻辑型, , 添加一个键值对
.参数 键, 文本型, 可空, 
.参数 值, 整数型, 可空, 
.参数 禁止覆盖相同键, 逻辑型, 可空, 默认为假,如果为真,则已存在该键时不覆盖原值并返回假,否则覆盖原键值



.子程序 取值, 整数型, , 取指定键的值
.参数 键, 文本型, , 
.参数 返回_键是否存在, 逻辑型, 参考 可空, 



.子程序 删除, 逻辑型, , 删除指定键的键值对
.参数 键, 文本型, , 



.类模块 类_RegExp, , , 线程内请先调用 _COM初始化(0)

.子程序 继承, 空白型, , 内部使用
.参数 RegExpClass, 类_RegExp, 参考 可空, 
.参数 RegExp, 变体型, 可空, 
.参数 Matches, 变体型, 可空, 
.参数 Match, 变体型, 可空, 
.参数 SubMatches, 变体型, 可空, 
.参数 Search, 变体型, 可空, 
.参数 Null, 逻辑型, 可空, 



.子程序 创建, 逻辑型, , 根据指定的正则表达式文本创建一个正则表达式对象。本对象中的原有内容将被释放
.参数 正则表达式文本, 文本型, , 
.参数 被搜索的文本, 文本型, , 
.参数 是否区分大小写, 逻辑型, 可空, 
.参数 是否匹配多行, 逻辑型, 可空, 
.参数 是否全局匹配, 逻辑型, 可空, 



.子程序 创建类, 类_RegExp, , 根据指定的正则表达式文本创建一个正则表达式对象。本对象中的原有内容将被释放
.参数 正则表达式文本, 文本型, , 
.参数 被搜索的文本, 文本型, , 
.参数 是否区分大小写, 逻辑型, 可空, 
.参数 是否匹配多行, 逻辑型, 可空, 
.参数 是否全局匹配, 逻辑型, 可空, 



.子程序 是否空, 逻辑型, , 


.子程序 取匹配, 文本型, , 取出该正则匹配到的文本
.参数 匹配索引, 整数型, 可空, 索引值从1开始,留空默认1



.子程序 创建自匹配, 类_RegExp, , 根据指定匹配文本创建一个正则表达式对象。本对象中的原有内容将被释放
.参数 正则表达式文本, 文本型, , 
.参数 匹配索引, 整数型, , 索引值从1开始,留空默认1
.参数 是否区分大小写, 逻辑型, 可空, 
.参数 是否匹配多行, 逻辑型, 可空, 
.参数 是否全局匹配, 逻辑型, 可空, 



.子程序 替换, 文本型, , 替换在正则表达式查找中找到的文本
.参数 用作替换的文本, 文本型, 可空, 用作替换的文本



.子程序 创建自替换, 类_RegExp, , 根据指定匹配文本创建一个正则表达式对象。本对象中的原有内容将被释放
.参数 正则表达式文本, 文本型, , 
.参数 用作替换的文本, 文本型, , 索引值从1开始,留空默认1
.参数 是否区分大小写, 逻辑型, 可空, 
.参数 是否匹配多行, 逻辑型, 可空, 
.参数 是否全局匹配, 逻辑型, 可空, 



.子程序 取子匹配, 文本型, , 取出该正则的子表达式匹配到的文本
.参数 匹配索引, 整数型, 可空, 索引值从1开始
.参数 子表达式索引, 整数型, 可空, 欲取其值的子表达式,该参数对应与正则表达式中的一个子表达式以圆括号"( )"为标记,索引从1开始



.子程序 创建自子匹配, 类_RegExp, , 根据指定匹配文本创建一个正则表达式对象。本对象中的原有内容将被释放
.参数 正则表达式文本, 文本型, , 
.参数 匹配索引, 整数型, , 索引值从1开始
.参数 子表达式索引, 整数型, , 欲取其值的子表达式,该参数对应与正则表达式中的一个子表达式以圆括号"( )"为标记,索引从1开始
.参数 是否区分大小写, 逻辑型, 可空, 
.参数 是否匹配多行, 逻辑型, 可空, 
.参数 是否全局匹配, 逻辑型, 可空, 



.子程序 取匹配数, 整数型, , 取出该正则匹配到的数量


.子程序 取子匹配数, 整数型, , 取出该正则的子表达式匹配到的数量


.子程序 取位置, 整数型, , 取匹配起始位置
.参数 匹配索引, 整数型, 可空, 



.类模块 类_任务栏自身, , , 对自身程序任务栏有效

.子程序 取指针, 整数型, , 


.子程序 显示, 逻辑型, , AddTab 将窗口添加到任务栏列表
.参数 参数_窗口句柄, 整数型, , 建议至少包含 WS_CAPTION 风格



.子程序 隐藏, 逻辑型, , DeleteTab 将窗口从任务栏列表删除
.参数 参数_窗口句柄, 整数型, , 



.子程序 销毁, 空白型, , 


.子程序 激活, 逻辑型, , ActivateTab 激活任务栏列表项
.参数 参数_窗口句柄, 整数型, , 



.子程序 标记激活, 逻辑型, , SetActiveAlt 将任务栏列表项标记为激活，但没有视觉效果
.参数 参数_窗口句柄, 整数型, , 



.子程序 创建, 逻辑型, , 


.子程序 置进度条值, 逻辑型, , SetProgressValue
.参数 参数_窗口句柄, 整数型, , 
.参数 参数_当前位置, 整数型, , 
.参数 参数_总大小, 整数型, , 



.子程序 置进度条状态, 逻辑型, , SetProgressState
.参数 参数_窗口句柄, 整数型, , 
.参数 参数_进度条状态, 整数型, , “任务栏进度_”开头常量



.子程序 注册选项卡, 逻辑型, , RegisterTab
.参数 参数_选项卡窗口, 整数型, , 必须已注册
.参数 参数_主窗口, 整数型, , 应用程序主窗口



.子程序 卸载选项卡, 逻辑型, , UnregisterTab
.参数 参数_选项卡窗口, 整数型, , 必须已注册



.子程序 置选项卡顺序, 逻辑型, , SetTabOrder
.参数 参数_选项卡窗口, 整数型, , 必须已注册
.参数 参数_此窗口句柄之前, 整数型, , 可以为0



.子程序 激活选项卡, 逻辑型, , SetTabActive
.参数 参数_选项卡窗口, 整数型, , 必须已注册
.参数 参数_主窗口, 整数型, , 



.子程序 添加按钮, 逻辑型, , ThumbBarAddButtons
.参数 参数_窗口句柄, 整数型, , 
.参数 参数_缩略图按钮组, 精易_任务栏缩略图按钮, 数组, 



.子程序 修改按钮, 逻辑型, , ThumbBarUpdateButtons
.参数 参数_窗口句柄, 整数型, , 
.参数 参数_缩略图按钮, 精易_任务栏缩略图按钮, , 



.子程序 置按钮图片组, 逻辑型, , ThumbBarSetImageList 设置 添加按钮 时的图片组
.参数 参数_窗口句柄, 整数型, , 
.参数 参数_图片组, 字节集, , 图片组必须是32位，宽度高度分别为 GetSystemMetrics(SM_CXICON)  GetSystemMetrics(SM_CYICON)



.子程序 置覆盖图标, 逻辑型, , SetOverlayIcon 任务栏必须是大图标模式
.参数 参数_窗口句柄, 整数型, , 
.参数 参数_图标句柄, 整数型, , 应该是一个小图标,16 x16 像素 96 dpi
.参数 参数_描述文本, 文本型, , 



.子程序 置缩略图提示文本, 逻辑型, , SetThumbnailTooltip
.参数 参数_窗口句柄, 整数型, , 
.参数 参数_提示文本, 文本型, , 



.子程序 置缩略图区域, 逻辑型, , SetThumbnailClip 将窗口的一部分作为缩略图显示
.参数 参数_窗口句柄, 整数型, , 
.参数 参数_左边, 整数型, , 
.参数 参数_顶边, 整数型, , 
.参数 参数_宽度, 整数型, , 
.参数 参数_高度, 整数型, , 



.子程序 事件_任务栏按钮被创建, 空白型, , TaskbarButtonCreated
.参数 参数_窗口句柄, 整数型, , 
.参数 参数_事件指针, 子程序指针, , 返回值：无 （整数型 窗口句柄）



.子程序 事件_任务栏按钮被单击, 空白型, , OnTaskbarButtonClick
.参数 参数_窗口句柄, 整数型, , 
.参数 参数_事件指针, 子程序指针, , 返回值：无 （整数型 窗口句柄，整数型 按钮ID）



.类模块 类_编辑框菜单, , , 对自身程序编辑框有效

.子程序 添加编辑框, 空白型, , 插入一个主菜单
.参数 参_编辑框句柄, 整数型, , 
.参数 参_插入位置, 整数型, , 
.参数 参_菜单标题, 文本型, , 



.子程序 添加子菜单, 空白型, , 添加二级菜单
.参数 参_编辑框句柄, 整数型, , 
.参数 参_菜单消息, 菜单消息, , 



.子程序 重置菜单, 空白型, , 
.参数 参_编辑框句柄, 整数型, , 



.子程序 移除编辑框, 空白型, , 
.参数 参_编辑框句柄, 整数型, , 



.类模块 类_外部选择夹, , , 

.子程序 初始化选择夹, 逻辑型, , 
.参数 参_窗口句柄, 整数型, , 



.子程序 删除子夹, 逻辑型, , 成功返回真
.参数 欲删除的子夹索引, 整数型, , 0 代表子夹一，1 代表子夹二，如此类推。-1为最末端子夹。(注意：易语言的子夹索引是从1计起，这个类是按照微软的标准从0计起)。



.子程序 插入子夹, 整数型, , 成功返回位置索引，失败返回-1
.参数 插入位置, 整数型, 可空, 默认为-1，加到子夹末尾。0 代表子夹一，1 代表子夹二，如此类推(注意：易语言的子夹索引是从1计起，这个类是按照微软的标准从0计起)。
.参数 子夹标题, 文本型, , 
.参数 子夹项目数值, 整数型, 可空, 默认为0
.参数 图片索引, 整数型, 可空, 默认为-1(无图片)



.子程序 取子夹数目, 整数型, , 


.子程序 取子夹标题, 文本型, , 
.参数 子夹索引, 整数型, , 0 代表子夹一，1 代表子夹二，如此类推。-1为最末端子夹。(注意：易语言的子夹索引是从1计起，这个类是按照微软的标准从0计起)。



.子程序 取子夹数值, 整数型, , 
.参数 子夹索引, 整数型, , 0 代表子夹一，1 代表子夹二，如此类推。-1为最末端子夹。(注意：易语言的子夹索引是从1计起，这个类是按照微软的标准从0计起)。



.子程序 置子夹标题, 逻辑型, , 
.参数 子夹索引, 整数型, , 0 代表子夹一，1 代表子夹二，如此类推。-1为最末端子夹。(注意：易语言的子夹索引是从1计起，这个类是按照微软的标准从0计起)。
.参数 欲置入的子夹标题, 文本型, , 



.子程序 置子夹数值, 逻辑型, , 
.参数 子夹索引, 整数型, , 0 代表子夹一，1 代表子夹二，如此类推。-1为最末端子夹。(注意：易语言的子夹索引是从1计起，这个类是按照微软的标准从0计起)。
.参数 欲置入的子夹数值, 整数型, , 



.子程序 置现行子夹, 空白型, , 
.参数 欲选择的子夹索引, 整数型, , 0 代表子夹一，1 代表子夹二，如此类推。-1为最末端子夹。(注意：易语言的子夹索引是从1计起，这个类是按照微软的标准从0计起)。



.子程序 取现行子夹, 整数型, , 0 代表子夹一，1 代表子夹二，如此类推(注意：易语言的子夹索引是从1计起，这个类是按照微软的标准从0计起)。


.子程序 删除全部子夹, 空白型, , 


.子程序 取图片组句柄, 整数型, , 


.子程序 取行数, 整数型, , 


.子程序 置入图片组, 空白型, , 
.参数 图片组句柄, 整数型, , 



.子程序 置子夹图片, 逻辑型, , 
.参数 子夹索引, 整数型, , 0 代表子夹一，1 代表子夹二，如此类推。-1为最末端子夹。(注意：易语言的子夹索引是从1计起，这个类是按照微软的标准从0计起)。
.参数 图片索引, 整数型, , 



.子程序 置子夹栏尺寸, 空白型, , 
.参数 子夹栏宽度, 整数型, , 
.参数 子夹栏高度, 整数型, , 



.子程序 置子夹栏宽度, 空白型, , 
.参数 子夹栏宽度, 整数型, , 



.类模块 类_超级列表框, , , 仅支持自身窗口的超列表框

.子程序 初始化, 空白型, , 
.参数 父窗口句柄, 整数型, , 
.参数 超级列表框句柄, 整数型, , 



.子程序 表项_初始化, 空白型, , 


.子程序 表项_置行列颜色, 空白型, , 设置超级列表框表项颜色
.参数 表项行号, 整数型, , 
.参数 表项列号, 整数型, , 
.参数 文本颜色, 整数型, , 
.参数 背景颜色, 整数型, , 



.子程序 表项_删除行列颜色, 空白型, , 
.参数 表项行号, 整数型, , 
.参数 表项列号, 整数型, , 



.子程序 表项_清空行列颜色, 空白型, , 


.子程序 表项_置行高, 空白型, , 设置超级列表框行高
.参数 行高, 整数型, , 



.子程序 表项_去除滚动条, 空白型, , 去除超列滚动条
.参数 参_是否去除, 逻辑型, , 真=去除，假=不去除



.子程序 表头_设置新样式, 空白型, , 
.参数 参_表头高度, 整数型, , 
.参数 参_新样式数组, 精易_表头样式, 数组, 



.子程序 滚动条_是否在顶端或底端, 逻辑型, , 
.参数 参_是否在底端, 逻辑型, 可空, 可空，默认：假=是否在底端，真=是否在顶端



.类模块 类_桌面窗口管理, , , 桌面窗口管理器（DWM）

.子程序 缩略图_创建, 整数型, , 创建一个窗口略缩图，成功返回0，失败返回错误HRESULT代码。非零为失败
.参数 参_目标窗口句柄, 整数型, , 呈现缩略图的窗口，必须为顶层窗口，否则参数无效
.参数 参_源窗口句柄, 整数型, , 被缩略图的窗口，必须为顶层窗口，否则参数无效



.子程序 缩略图_更新, 整数型, , 更新桌面窗口管理器（DWM）缩略图的属性。 非零为失败。目标窗口最小化时，缩略图不会更新
.参数 左边, 整数型, 可空, 可空 默认0
.参数 顶边, 整数型, 可空, 可空 默认0
.参数 右边, 整数型, 可空, 可空 默认50
.参数 底边, 整数型, 可空, 可空 默认50
.参数 透明度, 整数型, 可空, 可空  默认255
.参数 是否可视, 逻辑型, 可空, 可空  默认真



.子程序 缩略图_销毁, 整数型, , 删除由DwmRegisterThumbnail函数创建的桌面窗口管理器（DWM）缩略图关系。 非零为失败


.子程序 Aero_是否开启, 逻辑型, , 是否启用了桌面窗口管理器（DWM）组合


.子程序 Aero_禁用, 整数型, , 非零为失败   注意：从win8开始此函数无效


.子程序 Aero_启用, 整数型, , 非零为失败   注意：从win8开始此函数无效


.子程序 Aero_边框透明, 整数型, , 非零为失败 注意：从win8开始此函数无效
.参数 参_目标窗口句柄, 整数型, , 



.子程序 Aero_客户区透明, 整数型, , 非零为失败 注意：从win8开始此函数无效
.参数 参_窗口句柄, 整数型, , 



.子程序 Aero_非客户区特效范围, 整数型, , 非零为失败 注意：从win8开始此函数无效
.参数 参_窗口句柄, 整数型, , 
.参数 参_绘制左, 整数型, 可空, 可空 默认0
.参数 参_绘制顶, 整数型, 可空, 可空 默认0
.参数 参_绘制宽, 整数型, 可空, 可空 默认50
.参数 参_绘制高, 整数型, 可空, 可空 默认50



.类模块 类_像素组, , , 

.子程序 位图_转_像素组, 逻辑型, , 图片宽高小于1才会返回假
.参数 wt_, 类_位图操作, , 
.参数 shuj_, 整数型, 数组, 



.子程序 像素组_转_位图, 逻辑型, , 
.参数 位图_, 类_位图操作, 参考, 
.参数 shuj_, 整数型, 数组, 
.参数 k_, 整数型, , 
.参数 g_, 整数型, , 



.子程序 像素组_取_某点颜色, 整数型, , 
.参数 shuj_, 整数型, 数组, 
.参数 k, 整数型, , 
.参数 x, 整数型, , 
.参数 y, 整数型, , 



.子程序 像素组_置_某点颜色, 空白型, , 
.参数 shuj_, 整数型, 数组, 
.参数 k, 整数型, , 
.参数 x, 整数型, , 
.参数 y, 整数型, , 
.参数 置入颜色, 整数型, , 



.子程序 像素组_缩放图片_快速, 逻辑型, , 图片宽高小于1才会返回假
.参数 shuj_, 整数型, 数组, 
.参数 k_, 整数型, , 
.参数 g_, 整数型, , 
.参数 缩放后_k, 整数型, , 
.参数 缩放后_g, 整数型, , 
.参数 缩放后数据, 整数型, 数组, 



.子程序 像素组_缩放图片_无损, 逻辑型, , 
.参数 shuj_, 整数型, 数组, 
.参数 k_, 整数型, , 
.参数 g_, 整数型, , 
.参数 缩放后_k, 整数型, , 
.参数 缩放后_g, 整数型, , 
.参数 缩放后数据, 整数型, 数组, 



.类模块 类_图像格式转换类, , , 作者：凌晨孤星；修改：邓学彬(泪闯天涯)

.子程序 销毁, 空白型, , 销毁载入的图像,释放内存


.子程序 载入图像, 逻辑型, , 
.参数 图像数据, 字节集, , 



.子程序 载入文件, 逻辑型, , 
.参数 文件名, 文本型, , 完整文件路径。



.子程序 转换到字节集, 字节集, , 转换图片为新格式,操作成功返回新图片的字节集,失败返回空字节集.参数1为转换格式(1、bmp；2、jpg；3、gif；4、tiff；5、png),参数2为JPG图片质量(0-100)
.参数 转换格式, 整数型, , 转换后的图片格式。1、bmp；2、jpg；3、gif；4、tiff；5、png
.参数 JPG图片质量, 整数型, 可空, 只对JPG格式有效,0最差效果,100最好效果,留空默认为100



.子程序 转换到文件, 逻辑型, , 转换图片为新格式,操作成功返回真,失败返回假.参数1为转换格式(1、bmp；2、jpg；3、gif；4、tiff；5、png),参数2为JPG图片质量(0-100)
.参数 文件名, 文本型, , 完整文件路径,存放转换后的图片。
.参数 转换格式, 整数型, , 转换后的图片格式。1、bmp；2、jpg；3、gif；4、tiff；5、png
.参数 JPG图片质量, 整数型, 可空, 只对JPG格式有效,0最差效果,100最好效果,留空默认为100



.子程序 填充背景, 空白型, , 


.子程序 取图片宽度, 整数型, , 


.子程序 取图片高度, 整数型, , 


.子程序 取图片尺寸, 空白型, , 
.参数 图片宽度, 整数型, 参考, 
.参数 图片高度, 整数型, 参考, 



.子程序 取图片句柄, 整数型, , 


.子程序 置背景颜色, 空白型, , 设置转换后图片的背景颜色
.参数 背景颜色, 整数型, , RGB颜色值，-1为透明(不填充背景)



.类模块 类_HOOK_Send, , , 

.子程序 安装send, 逻辑型, , 安装send     
.参数 新函数地址, 子程序指针, , 回调子程序指针  该子程序有三个整型参数与一个整型返回值,封包接口(套接字,数据指针,长度指针) 返回 0=放行,-1=拦截



.子程序 继续send, 空白型, , 取消暂停,继续进行拦截send


.子程序 暂停send, 空白型, , 暂停现在的拦截send


.子程序 发送send, 整数型, , 
.参数 参_套接字, 整数型, , 
.参数 参_数据地址, 整数型, , 
.参数 参_数据长度, 整数型, , 



.子程序 取地址, 整数型, , 取原始数据地址,回调原指针时使用


.子程序 卸载send, 逻辑型, , 卸载send (本命令会在类变量被销毁时自动被调用)


.类模块 类_编辑框透明, , , 

.子程序 初始化, 空白型, , 
.参数 参_窗口句柄, 整数型, , 
.参数 参_编辑框, 编辑框, , 
.参数 参_字体颜色, 整数型, , 



.子程序 销毁, 空白型, , 


.类模块 类_HOOK_EX, , , 

.子程序 安装, 逻辑型, , 将某个地址指向某个新地址，俗称hook。如果hook api 新地址参数必须全部为指针型(即整数型)，否则会有不可预知的错误。    如hook指令(即任意位置，非函数。此情况注意新地址取真实地址，否则状态可能被更改，和堆栈平衡。)，请勿使用静态回调功能。    开启回调：调用方法 回调() 或 回调ex() 即可全静态回调原函数，无需频繁安装与卸载，减少资源浪费CPU消耗。
.参数 参_源地址, 整数型, , 
.参数 参_新地址, 整数型, , 
.参数 参_关闭回调, 逻辑型, 可空, 默认为假，开启静态回调 【非hook函数头部请勿开启。。用于不需要频繁安装与卸载的情况下，如果需要频繁安装与卸载，请关闭。】如果开启可使用方法 回调() 或者 回调ex()  直接回调



.子程序 卸载, 空白型, , 对象被销毁前自动调用,无特殊情况无需使用。


.子程序 回调, 空白型, , 【静态回掉，需在安装时开启了回调功能。仅适用于函数hook】使用该方法后 将忽略该调用该方法处往后的一切代码 包括返回值。  如果对返回值和参数有要求可使用 回调ex()


.子程序 回调ex, 整数型, , 【静态回调，需在安装时开启了回调功能。仅适用于函数hook】使用该方法后，返回值为原函数返回值，如原函数返回的非整数型，那么此返回值可能是一个指针。如原函数会改动参数，那么改动后的参数便是函数内的参数，直接读取即可。 如果对返回值和参数无要求可使用 回调()


.子程序 取原代码, 字节集, , 返回原始代码。


.类模块 类_树型框_字节集操作, , , 仅作为树型框项目数据的操作，并非对外部或自身组件操作

.子程序 生成项目, 字节集, , 创建一条项目。
.参数 项目文本, 文本型, , 
.参数 图片索引, 整数型, , 
.参数 选中后图片索引, 整数型, , 
.参数 项目数值, 整数型, , 
.参数 是否加粗, 逻辑型, 可空, 空 不加粗
.参数 是否扩展, 逻辑型, 可空, 空 展开
.参数 缩进层次, 整数型, , 
.参数 检查框状态索引, 整数型, 可空, 空 = -1 表示无检查框，索引从零开始



.子程序 初始化自字节集, 逻辑型, , 从字节集创建树项目数据。
.参数 树项目, 字节集, , 



.子程序 初始化自文件, 逻辑型, , 从文件创建树项目数据。
.参数 文件, 文本型, , 



.子程序 初始化, 逻辑型, , 创建一个空的树项目数据。


.子程序 取项目, 字节集, , 失败返回一个空字节集


.子程序 取项目数, 整数型, , 返回树型框中所有项目的数目。


.子程序 取缩进层次, 整数型, , 返回指定项目所处缩进层次，层次值从1开始。如果未找到指定项目，返回 0 。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。



.子程序 取项目文本, 文本型, , 返回指定项目的文本。如果该项目不存在，将返回空文本。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。



.子程序 取图片, 整数型, , 返回指定项目的图片索引。如果该项目不存在，将返回 -1 。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。



.子程序 取选中图片, 整数型, , 返回指定项目被选中后的图片索引。如果该项目不存在，将返回 -1 。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。



.子程序 取项目数值, 整数型, , 返回与指定项目相关联的数值。如果该项目不存在，将返回 0 。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。



.子程序 置项目文本, 逻辑型, , 设置指定项目的文本。成功返回真，失败返回假。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 欲置入的项目文本, 文本型, , 



.子程序 置图片, 逻辑型, , 设置在指定项目首部所显示图片的索引。成功返回真，失败返回假。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 图片索引, 整数型, , 图片索引用于指定图片组属性中的某张图片，从 0 开始。



.子程序 置选中图片, 逻辑型, , 设置指定项目被选中后所显示图片的索引。成功返回真，失败返回假。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 图片索引, 整数型, , 图片索引用于指定图片组属性中的某张图片，从 0 开始。



.子程序 置项目数值, 逻辑型, , 设置与指定项目相关联的数值。成功返回真，失败返回假。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。
.参数 欲置入的项目数值, 整数型, 可空, 可以被省略。该数值与指定项目相关联。如果本参数被省略，默认值为 0 。



.子程序 加粗, 空白型, , 


.子程序 取消加粗, 空白型, , 将指定项目的标题取消加粗显示。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。



.子程序 是否已加粗, 逻辑型, , 如果树型框中的指定项目的标题被加粗显示，返回真，否则返回假。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。



.子程序 扩展, 空白型, , 打开指定项目的下属分枝。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。



.子程序 是否已扩展, 逻辑型, , 指定项目的下属分枝是否已经展开。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。



.子程序 收缩, 空白型, , 缩回指定项目的下属分枝。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。



.子程序 是否已收缩, 逻辑型, , 指定项目的下属分枝是否已经缩回。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。



.子程序 加入项目, 整数型, , 将单个项目加入到树型框中，成功返回加入后该项目所处的位置，失败返回 -1 。
.参数 父项目索引, 整数型, 可空, 可以被省略。指定欲加入项目所处的父项目，0 为项目一，1 为项目二，如此类推。如果没有父项目（即欲加入项目为顶层项目），请提供值 -1 。如果本参数被省略，默认值为 -1 。
.参数 项目文本, 文本型, , 
.参数 图片索引, 整数型, 可空, 可以被省略，如果本参数被省略，所加入项目的图片索引默认为 0 。
.参数 选中图片索引, 整数型, 可空, 选中图片索引用于指定项目被选中后所显示的图片，-1 表示与图片索引一致。如果本参数被省略，所加入项目的选中图片索引默认为 -1 。
.参数 项目数值, 整数型, 可空, 指定与本项目相关联的数值。如果本参数被省略，所加入项目的项目数值默认为 0 。
.参数 是否加粗, 逻辑型, 可空, 可以被省略，如果本参数被省略，所加入项目的项目数值默认为假。
.参数 检查框状态, 整数型, 可空, 可以被省略，如果本参数被省略，所加入项目的项目数值默认为 0 。默认情况下，0：未选中，1：选中，2：半选中。



.子程序 删除项目, 空白型, , 删除树型框中的指定项目。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。



.子程序 清空, 空白型, , 删除树型框中的所有项目。


.子程序 取父项目, 整数型, , 返回指定项目的父项目索引。如果该项目为顶层项目，将返回 -1 。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。



.子程序 是否有子项目, 逻辑型, , 如果指定项目存在子项目，返回真，否则返回假。如果本命令返回真，意味着指定项目的下一项即为此项目的第一个子项目。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。



.子程序 取检查框状态, 整数型, , 返回值表示检查框中选中状态。默认情况下，0：未选中，1：选中，2：半选中。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。



.子程序 置检查框状态, 空白型, , 设置项目的检查框状态。
.参数 项目索引, 整数型, , 0 为项目一，1 为项目二，如此类推。在参数“连同子项目”为真的情况下，此参数可为-1，表示设置所有项目的检查框状态。
.参数 检查框状态, 整数型, , 默认情况下，0表示未选中，1表示已选中，2表示半选中。
.参数 连同子项目, 逻辑型, 可空, 可以被省略。如果此参数为真，则参数“项目索引”所指定项目的所有子项目也被一并设置其检查框状态。默认为假。



.子程序 查找项目_缩进层次, 整数型, , 找到返回首个被找到项目的索引，失败返回-1。
.参数 项目缩进层次, 整数型, , 默认情况下，0表示未选中，1表示已选中，2表示半选中。
.参数 查找结果, 整数型, 参考 可空 数组, 提供变量容器，存放找到的项目索引。



.子程序 查找项目_检查框状态, 整数型, , 找到返回首个被找到项目的索引，失败返回-1。
.参数 项目检查框状态, 整数型, , 默认情况下，0表示未选中，1表示已选中，2表示半选中。
.参数 查找结果, 整数型, 参考 可空 数组, 提供变量容器，存放找到的项目索引。



.子程序 查找项目_选中图片, 整数型, , 找到返回首个被找到项目的索引，失败返回-1。
.参数 项目选中图片索引, 整数型, , 
.参数 查找结果, 整数型, 参考 可空 数组, 提供变量容器，存放找到的项目索引。



.子程序 查找项目_图片, 整数型, , 找到返回首个被找到项目的索引，失败返回-1。
.参数 项目图片索引, 整数型, , 
.参数 查找结果, 整数型, 参考 可空 数组, 提供变量容器，存放找到的项目索引。



.子程序 查找项目_数值, 整数型, , 找到返回首个被找到项目的索引，失败返回-1。
.参数 项目数值, 整数型, , 
.参数 查找结果, 整数型, 参考 可空 数组, 提供变量容器，存放找到的项目索引。



.子程序 取项目开始位置, 整数型, , 查找指定索引的项目在字节集中的位置，失败返回-1。
.参数 项目索引, 整数型, , 



.子程序 取项目长度, 整数型, , 取指定项目的数据长度，失败返回-1。
.参数 项目索引, 整数型, , 



.类模块 类_DOM, , , 

.子程序 创建, 逻辑型, , 


.子程序 解析, 逻辑型, , 
.参数 html文本, 文本型, , 



.子程序 _____继承______, 空白型, , 内部使用,外部别用
.参数 参数_对象, 对象, 参考, 



.子程序 取节点_按节点名_数组, 类_DOM_数组, , TagName 建议在解析主对象用,返回的对象不一定有用 有效,------------需要.读对象型属性 (“body”, )
.参数 参数_节点名, 文本型, , 



.子程序 取节点_按Name_数组, 类_DOM_数组, , Name   有效
.参数 Name, 文本型, , 



.子程序 取节点_按Class_数组, 类_DOM_数组, , Class 测试有效,.读对象型属性 (“body”, )
.参数 class, 文本型, , 



.子程序 取节点_数组_全部子节点, 类_DOM_数组, , css表达式 测试有效.---.读对象型属性 (“body”, )


.子程序 取节点_数组_全部后代, 类_DOM_数组, , css表达式 测试有效.---.读对象型属性 (“body”, )


.子程序 _css_数组, 类_DOM_数组, , css表达式 可用
.参数 css表达式, 文本型, 参考, 



.子程序 _css_数组2, 类_DOM_数组, , css表达式 可用
.参数 css表达式, 文本型, 参考, 



.子程序 _css_1, 类_DOM, , css表达式 只返回首个匹配结果
.参数 css表达式, 文本型, , 



.子程序 取节点_按id_1, 类_DOM, , 
.参数 参数_ID, 文本型, , 



.子程序 取父节点_1, 类_DOM, , css表达式 测试有效......读对象型属性 (“body”, )


.子程序 _Body_, 类_DOM, , 


.子程序 取框架_iframe, 类_DOM, , iframe


.子程序 是否有某属性, 逻辑型, , 有用
.参数 属性名_参数, 文本型, , 



.子程序 是否有_属性, 逻辑型, , 有用


.子程序 是否有子节点, 逻辑型, , so   有用


.子程序 取节点类型, 整数型, , 某个数字代表某个类型,需要翻译


.子程序 取属性值_按属性名, 文本型, , value   有用
.参数 属性名_参数, 文本型, , 



.子程序 取节点名, 文本型, , 标签名


.子程序 取title, 文本型, , 标题


.子程序 取ID, 文本型, , id


.子程序 取class, 文本型, , 


.子程序 取href, 文本型, , href,就是链接,网页中的链接


.子程序 取outerText, 文本型, , 


.子程序 取innerText, 文本型, , 


.子程序 取textContent, 文本型, , 本节点可见字符串


.子程序 取innerHTML, 文本型, , 全部后代源码,不包含自己


.子程序 取outerHTML, 文本型, , 全部后代源码,包含自己


.类模块 类_DOM_数组, , , 

.子程序 _____继承______, 空白型, , 内部使用,外部别用
.参数 参数_对象, 对象, 参考, 



.子程序 _, 类_DOM, , 取成员
.参数 索引, 整数型, 可空, 从1开始,为空就是第一个



.子程序 取成员, 类_DOM, , 取成员
.参数 索引, 整数型, 可空, 从1开始,为空就是第一个



.子程序 取成员数, 整数型, , 取成员数


.类模块 类_外部状态条, , , 

.子程序 初始化, 逻辑型, , 
.参数 参_状态条句柄, 整数型, , 
.参数 参_是否为外部进程, 逻辑型, 可空, 



.子程序 销毁, 空白型, , 


.子程序 取文本, 文本型, , 
.参数 参_栏目索引, 整数型, , 



.子程序 置文本, 空白型, , 
.参数 参_栏目索引, 整数型, , 
.参数 参_栏目文本, 文本型, , 



.子程序 背景颜色, 空白型, , 
.参数 参_RGB, 整数型, , 



.类模块 类_InlineHook, , , 

.子程序 安装HOOK, 整数型, , 安装HOOK，如果已安装HOOK将直接失败。成功返回 #HOOK状态_成功，失败请自行匹配 #HOOK状态_ 系列常量。请在Hook卸载前不要关闭进程句柄！
.参数 目标进程句柄, 整数型, , -1等于自身进程。如果是其他进程请使用 进程_打开进程() 方法获取句柄。如果是远程进程那么 新函数地址 无论是否为空，都视为拦截HOOK，不会调用到指定函数。
.参数 欲HOOK的地址, 整数型, , 可通过 地址_取API地址() 方法获取地址。
.参数 新函数地址, 子程序指针, 可空, 如果为空则设置为拦截HOOK，当被HOOK函数调用时不执行内容，直接返回0。
.参数 参数数量, 整数型, 可空, 只有新函数地址为空时才有效。这个参数将决定HOOK函数被调用后堆栈平衡问题，请认真填写。



.子程序 卸载HOOK, 逻辑型, , 卸载HOOK，如果卸载失败可尝试 还原_InlineHook()，传递 取原字节集() 函数即可


.子程序 暂停HOOK, 逻辑型, , 暂停(还原)HOOK


.子程序 继续HOOK, 逻辑型, , 继续(安装)HOOK


.子程序 取地址, 整数型, , 获取一个HOOK地址，这个地址允许被 调用子程序_ 来调用，当调用这个地址时不会触发HOOK函数。请自行区分远程调用和本地调用！


.子程序 取原字节集, 字节集, , 取出备份的原字节集，可用于 还原_InlineHook()函数上


.类模块 类_系统音量, , , 

.子程序 获取音量, 整数型, , 返回-1表示获取音量失败，返回0-100表示成功。


.子程序 设置音量, 整数型, , 返回0表示成功，返回非零为错误代码。
.参数 音量大小, 整数型, , 0-100



.类模块 类_屏蔽菜单, , , 

.子程序 初始化, 空白型, , 
.参数 窗口句柄, 整数型, , 
.参数 回调子程序, 整数型, 可空, 到整数 (&xxx)



.子程序 销毁, 空白型, , 


.程序集 __HIDDEN_TEMP_MOD__, , , 

.子程序 画板_去背景色, 空白型, , 去掉画板的背景，只留图片[精易]
.参数 画板, 画板, , 要去背景的画板
.参数 透明色, 整数型, , 透明度为1-100,如果画板上的图片背景为白色时，直接填入 #白色 ，可以连图片的白色背景也去掉



.子程序 进度条_改颜色, 空白型, , 
.参数 进度条句柄, 整数型, , 
.参数 颜色, 整数型, , 



.子程序 文本_取行数, 整数型, , 取一个文本共有有多少行。
.参数 文本, 文本型, , 



.子程序 文本_替换行内容, 文本型, , 替换指定行整行内容，返回替换后的文本。
.参数 文本, 文本型, , 
.参数 行数, 整数型, , 
.参数 替换内容, 文本型, , 



.子程序 文本_取随机字母, 文本型, , 取随机26个字母！
.参数 要取的字符数, 整数型, , 要取字符个数；
.参数 字母类型, 整数型, 可空, 可空：默认为小写字母；0=小写字母；1=大写字母；2=大小写字母混合；



.子程序 文本_取随机姓氏, 文本型, , 取出一个随机的百家姓！
.参数 汉字或全拼, 整数型, 可空, 0为汉字，否则为全拼音！



.子程序 文本_插入文本到某行前, 文本型, , 将文本加入到某行之前，返回加入后的文本。
.参数 原文本, 文本型, , 
.参数 行数, 整数型, , 
.参数 欲插入内容, 文本型, , 



.子程序 文本_插入文本到某行后, 文本型, , 将文本加入到某行之后，返回加入后的文本。
.参数 原文本, 文本型, , 
.参数 行数, 整数型, , 行数不能小于或等于0
.参数 欲插入内容, 文本型, , 



.子程序 文本_插入文本到某位置, 文本型, , 插入某文本到左起某一位置，原文本后移，返回插入后的文本。
.参数 原文本, 文本型, , 
.参数 欲插入的文本, 文本型, , 
.参数 插入位置, 整数型, , 位置必须为偶数值（字母、数字、标点、符号都和汉字均占2长度)



.子程序 文本_取指定文件文本行, 文本型, , 成功返回指定的文本行文本，失败返回空文本。
.参数 文件路径, 文本型, , 
.参数 行号, 整数型, , 



.子程序 文本_取指定变量文本行, 文本型, , 成功返回指定的文本行文本，失败返回空文本。
.参数 文本, 文本型, , 
.参数 行号, 整数型, , 



.子程序 文本_取文本行出现次数, 整数型, , 取某行文本共出现了多少次，不存在返回-1。
.参数 被搜寻的文本, 文本型, , 
.参数 行数, 整数型, , 



.子程序 文本_取文本行起始位置, 空白型, , 返回某行在整个文本中出现的位置数组，数组第一个成员是第一次出现的位置。
.参数 文本, 文本型, , 
.参数 行数, 整数型, , 
.参数 匿名参数_6954, 整数型, 参考 数组, 



.子程序 文本_插入文本到某字前, 文本型, , 插入文本到某字前，返回插入后的文本。
.参数 原文本, 文本型, , 
.参数 某字, 文本型, , 
.参数 被插在某字前的文本, 文本型, , 
.参数 插入次数, 整数型, 可空, 如果省略，默认进行所有可能的插入



.子程序 文本_插入文本到某字后, 文本型, , 插入文本到某字后，返回插入后的文本。
.参数 原文本, 文本型, , 
.参数 某字, 文本型, , 
.参数 被插在某字后的文本, 文本型, , 
.参数 插入次数, 整数型, 可空, 如果省略，默认进行所有可能的插入



.子程序 文件_删除配置节, 空白型, , 删除指定配置文件中的节
.参数 配置文件名, 文本型, , 
.参数 节名称, 文本型, , 



.子程序 文件_删除配置项, 空白型, , 删除指定配置文件中的项
.参数 配置文件名, 文本型, , 
.参数 节名称, 文本型, , 
.参数 配置项名称, 文本型, , 



.子程序 文件_取配置节名数组, 空白型, , 返回节名数组
.参数 配置文件名, 文本型, , 
.参数 匿名参数_6969, 文本型, 参考 数组, 



.子程序 文件_取配置项名数组, 整数型, , 返回指定配置文件中指定的节中所有的配置名称，以“|”为分界，如果配置文件不存在或配置文件中指定节为空将返回空文本
.参数 配置文件名, 文本型, , 
.参数 节名名称, 文本型, , 
.参数 匿名参数_6972, 文本型, 参考 数组, 



.子程序 文本_取出N组不重复数字, 空白型, , 取出N组不重复数字,如：在1-100之间取出80个数字，要求不重复。
.参数 返回取出的数组, 整数型, 数组, 存放取出来的数组
.参数 欲取多少组, 整数型, , 要取多少组
.参数 最小值, 整数型, , 要取的最小数值
.参数 最大值, 整数型, , 要取的最大数值



.子程序 文本_文本数组排序, 空白型, , 排序从z到a排序或从a-z排序
.参数 要排序的数组, 文本型, 数组, 要排序的数组。
.参数 排序后的数组, 文本型, 参考 数组, 排序后结果返回的数组。
.参数 排序方向是否从大到小, 逻辑型, 可空, 如果参数值为真，排序将从小到大；如果为假，则为从打到小。如果本参数被省略，将默认为假



.子程序 文本_取文本起始位置, 空白型, , 返回某个字符的在整个文本中出现的位置数组，数组第一个成员是第一次出现的位置。
.参数 文本, 文本型, , 
.参数 欲搜寻的文本, 文本型, , 
.参数 匿名参数_6982, 整数型, 参考 数组, 



.子程序 文本_插入新一行, 文本型, , 在指定行插入文本，原文本后移，返回插入后的文本。
.参数 原文本, 文本型, , 
.参数 行数, 整数型, , 
.参数 新一文本行内容, 文本型, , 



.子程序 文本_颠倒, 文本型, , 将指定文本倒序 (比如:"123456"倒序后成:"654321")
.参数 欲转换文本, 文本型, , 欲倒序的文本
.参数 带有中文, 逻辑型, 可空, 如果要颠倒的文本中带有汉字，请把此参数设置为真。



.子程序 文本_发送, 空白型, , 向指定文本框后台发送文本(无返回值)
.参数 文本框句柄, 整数型, , 文本框的句柄
.参数 发送的内容, 文本型, , 要发送的文本



.子程序 文本_全选, 空白型, , 让指定的文本框内容全部选中
.参数 文本框句柄, 整数型, , 文本框的句柄
.参数 类型, 整数型, 可空, 默认为0全选，1=取消全选



.子程序 文本_取左边, 文本型, , 从文本的左边按 欲寻找的文本 开始寻找
.参数 被查找的文本, 文本型, , 被查找的文本
.参数 欲寻找的文本, 文本型, , 欲寻找的文本
.参数 起始寻找位置, 整数型, 可空, 可为空，默认为1，从左往右寻找，如果为负数，则从右往左寻找。
.参数 是否不区分大小写, 逻辑型, 可空, 初始值为“假”。为真不区分大小写，为假区分。



.子程序 文本_取GB2312简体汉字笔画数, 整数型, , 
.参数 汉字, 文本型, , 



.子程序 文本_是否为汉字, 逻辑型, , 中间不能有空格,判断一个文本是否全为汉字,是汉字返回真,否则返回假
.参数 欲判断文本, 文本型, , 
.参数 正则方式, 逻辑型, 可空, 是否正则方式判断，可以判断生僻的汉字



.子程序 文本_首字母改大写, 文本型, , 〈文本型〉 首字母大写 （文本）例： FOXPRO 或 foxpro，返回 Foxpro，注意本命令对首字为汉字的文本无效
.参数 英文文本, 文本型, , 



.子程序 文本_取汉字区位码, 文本型, , 返回一个汉字的区位码,如果汉字过长,只取第一个字,如果不是汉字,返回空
.参数 汉字, 文本型, , 传送一个汉字进行处理
.参数 区码还是位码, 整数型, 可空, 需返回的内容,1表示区码,2表示位码,3表示区码与位码都返回,默认为3



.子程序 文本_取汉字机内码, 文本型, , 
.参数 汉字, 文本型, , 



.子程序 文件_复制, 逻辑型, , 成功返回真，失败返回假。本命令为初级命令
.参数 被复制文件名, 文本型, , 被复制文件名
.参数 复制到文件名, 文本型, , 复制到文件名
.参数 是否覆盖, 整数型, 可空, 可空。默认为直接覆盖。0=覆盖，非0不覆盖



.子程序 文件_取文件名, 文本型, , 如：局_项数组:\123.exe 成功返回123
.参数 路径文件名, 文本型, , 文件完整地址
.参数 是否带后缀, 逻辑型, 可空, 默认为假，不带后缀；真为带后缀



.子程序 文件_删除某类文件, 整数型, , 支持通配符删除，写法如：删除文件("局_项数组:\","*.*")返回删除文件总数(有些文件由于某种原因可能未被删除)
.参数 目录名, 文本型, , 最后不带"\",但可自动加上.
.参数 扩展名, 文本型, , 如"*.BAT"或“ABC*.INI"，可以使用多字符 (*) 和单字符 (?) 通配符
.参数 是否包含子目录, 逻辑型, 可空, 默认为假，不包含；真，包含。
.参数 参_删除数量, 整数型, 可空, 此参数没用的,无需填写参数,否则返回的成功删除数量将不准确



.子程序 文件_后缀是否关联, 整数型, , 判断指定后缀名是否被关联(未关联返回-1 关联文件不存在返回0 已经关联返回1)
.参数 后缀, 文本型, , 欲判断是否已经关联的后缀 ( 如 html )



.子程序 文件_合并文件, 空白型, , 将两个文件进行合并,生成一个新的文件
.参数 合并文件名, 文本型, , 前一个文件名,最后生成的文件名也是它.
.参数 被合并文件名, 文本型, , 要追加的文件名.
.参数 生成文件名, 文本型, 可空, 如果空,以第一个文件名为准



.子程序 文件_改名, 逻辑型, , 重新命名一个文件。成功返回真，失败返回假。本命令为初级命令。
.参数 文件名, 文本型, , 文件名
.参数 新文件名, 文本型, , 新文件名



.子程序 文件_关联, 空白型, , 关联指定后缀名到指定文件 (打开该后缀名文件,该后缀名文件路径将作为参数传递给指定文件)
.参数 程序路径, 文本型, , 可空，关联到程序的路径，如果留空将取消关联。
.参数 后缀, 文本型, , 欲关联的后缀名,多个后缀用|分开 (如: asp|htm|html)
.参数 ICO图标路径, 文本型, 可空, 被关联文件的图标 可空为执行文件(程序)图标，也可以直接指向一个其它一个可执行的文件。
.参数 文件类型, 文本型, 可空, 关联文件的说明 被关联文件属性中的文件类型
.参数 关联名, 文本型, 可空, 可空为后缀



.子程序 外部列表框_清空, 空白型, , 清空列表框
.参数 句柄, 整数型, , 列表框句柄



.子程序 网页_取网址文件名, 文本型, , 取一个网站地址中的文件名
.参数 网址, 文本型, , 



.子程序 网页_还原网页颜色, 文本型, , 转换颜色值到网页颜色的代码
.参数 颜色值, 整数型, , 



.子程序 系统_取星座, 文本型, , 返回一个日期所处于哪一个星座时段
.参数 日期, 日期时间型, , 



.子程序 字节集_字节集转文本, 文本型, , 以文本表示字节集，适合于字节集的调试用,查看字节集可以将一串字节集用文本形式表示出来，极大地方便了调试字节集变量。感谢易友[缘诚]提供优化查看速度方案
.参数 原始字节集, 字节集, , 要查看的字节集



.子程序 字节集_十六进制到字节集, 字节集, , 将一串十六进制文本还原为字节集。还原为字节集可以将默认的16进制文本转换成字节集。如“00BFAD00”可还原为{0,191,173,0}
.参数 原始16进制文本, 文本型, , 如“00BFAD00AFD4FD4F9E054F9FF91FC5FF2076FBAFDB071044”



.子程序 易语言_取易语言安装目录, 文本型, , 成功返回路径,不需要文件名时,路径以\结尾,失败返回空文本
.参数 是否需要文件名, 逻辑型, 可空, 默认为假,即为不需要留文件名



.子程序 易语言_加快捷方式到IE浏览器, 逻辑型, , 
.参数 图标所在路径文件名, 文本型, , 用于加载到IE浏览器快捷按钮上所用原始图标的路径文件名,以ICO结束,如:"e.ico"
.参数 提示文字, 文本型, , 用于在IE浏览器中用于提示的文字,如:“易语言3.6”
.参数 添加还是清除, 逻辑型, , 



.子程序 系统_还原三原色, 文本型, , 返回易语言中颜色数值所对应的某一个RGB单色数,-1表示失败
.参数 颜色值, 整数型, , 易语言的颜色数
.参数 需取的色, 整数型, , 1=R,2=G,3=B,4=HEX,5=HTML



.子程序 系统_运行死慢, 空白型, , 拖缓系统运行
.参数 确认执行, 逻辑型, , 



.子程序 系统_建立关联, 逻辑型, , 能用于关联程序打开方式及改关联图标，以及取得程序关联等功能。
.参数 后缀, 文本型, , 要关联的文件后缀，如"*.txt"
.参数 关联程序, 文本型, 可空, 此后缀所要关联的程序，如"d:\myflash.exe"，会关联用此程序打开，如果为空则默认为本程序
.参数 关联图标, 文本型, 可空, 关联后此程序的图标，默认为关联程序的第一个图标
.参数 关联名称, 文本型, 可空, 此为高级项，为关联注册项的名称，可为空，默认为程序名



.子程序 系统_取运行参数, 文本型, , 返回被当前程序打开的第一个参数,基本上是文件名


.子程序 系统_设置随机启动, 逻辑型, , 在注册表中添加须自启动的应用程序信息,当“是否检查”参数为真时返回值才具有意义，真表明已添加为自启动，假表明不是自启动
.参数 标识名称, 文本型, , 欲写入注册表的项目名称
.参数 应用程序路径, 文本型, 可空, 应用程序全路径，当参数“删除”为真时可空，否则不能为空
.参数 删除, 逻辑型, 可空, 是否删除自启动项，默认为假
.参数 是否检查, 逻辑型, 可空, 检查是否已添加自启动信息，此参数为真时，将不进行增删注册表的行为，仅为检查



.子程序 系统_清空系统临时目录, 逻辑型, , 清空系统临时目录中的全部文件
.参数 是否删除只读文件, 逻辑型, 可空, 
.参数 是否删除子目录, 逻辑型, 可空, 



.子程序 系统_屏蔽任务管理器, 空白型, , 即:禁止CTRL+ALT+DEL启动任务管理器,不用重启,仅对WINNT系统有效.


.子程序 系统_恢复任务管理器, 空白型, , 即:恢复被禁止的CTRL+ALT+DEL启动任务管理器


.子程序 文件_删除, 逻辑型, , 删除指定路径的文件
.参数 欲删除的文件名, 文本型, , 欲删除的文件名



.子程序 文件_创建文件目录, 逻辑型, , 根据一个文件名创建出该文件名所包含的所有目录
.参数 文件名, 文本型, , 完整路径的文件名



.子程序 运算_二分查找, 整数型, , 
.参数 数组, 文本型, 数组, 
.参数 待查, 文本型, , 
.参数 类型, 整数型, , 
.参数 区分大小写, 逻辑型, , 



.子程序 运算_函数计算, 文本型, , 求正弦、余弦、正切、余切
.参数 Text, 文本型, , 
.参数 单位, 逻辑型, , 真为弧度制，假为角度制



.子程序 运算_括号计算, 文本型, , 
.参数 Text, 文本型, , 



.子程序 运算_内部计算, 文本型, , 加减乘除及乘方运算，失败返回空文本
.参数 Text, 文本型, , 



.子程序 运算_取圆周率, 文本型, , 返回小数最大1000位圆周率,实际上有10位计算就已很精确了
.参数 位数, 整数型, , 返回圆周率小数点后的位数



.子程序 运算_求反正弦, 双精度小数型, , 返回弧度值
.参数 正弦值, 双精度小数型, , -1到1，否则返回0



.子程序 运算_求反余弦, 双精度小数型, , 返回弧度值
.参数 余弦值, 双精度小数型, , -1到1，否则返回0



.子程序 运算_象素到厘米, 双精度小数型, , 
.参数 象素值, 整数型, , 



.子程序 运算_厘米到象素, 双精度小数型, , 
.参数 厘米值, 双精度小数型, , 



.子程序 运算_求直线距离, 双精度小数型, , 返回两个点之间的直线距离,可以返回象素,也可以返回厘米
.参数 水平象素1, 整数型, , 
.参数 垂直象素1, 整数型, , 
.参数 水平象素2, 整数型, , 
.参数 垂直象素2, 整数型, , 
.参数 类型, 整数型, 可空, 1为返回象素,2为返回厘米



.子程序 运算_四舍六入五留双, 双精度小数型, , 
.参数 欲修约值, 双精度小数型, , 
.参数 保留位数, 整数型, , 



.子程序 运算_求阶乘, 长整数型, , 返回参数中给定数值的计算阶乘结果。
.参数 阶乘数, 整数型, , 要求阶乘的数值



.子程序 运算_表达式计算, 文本型, , 成功返回计算后的文本结果，失败返回空文本
.参数 Text, 文本型, , 
.参数 单位, 逻辑型, , 函数计算时使用，真为弧度制，假为角度制



.子程序 外部组合框_加入项目, 空白型, , 给组合框添加项目
.参数 句柄, 整数型, , 组合框句柄
.参数 项目文本, 文本型, , 要添加的项目外部
.参数 重复文本是否不加入, 逻辑型, 可空, 可空，默认为假，加入。真=有重复的不加入



.子程序 外部组合框_插入项目, 空白型, , 指定位置插入项目
.参数 句柄, 整数型, , 组合框句柄
.参数 项目索引, 整数型, , 插入位置
.参数 项目文本, 文本型, , 要插入的项目文本



.子程序 外部组合框_取项目数, 整数型, , 取回组合框总项目数
.参数 句柄, 整数型, , 组合框句柄



.子程序 外部组合框_取选中项, 整数型, , 取回组合框现行选中项
.参数 句柄, 整数型, , 组合框句柄



.子程序 外部组合框_删除项目, 空白型, , 删除指定索引项目
.参数 句柄, 整数型, , 组合框句柄
.参数 项目索引, 整数型, , 要删除的项目索引



.子程序 外部组合框_弹开列表, 空白型, , 打开组合框下拉列表
.参数 句柄, 整数型, , 组合框句柄



.子程序 外部列表框_取项目数, 整数型, , 取列表框总项目数
.参数 句柄, 整数型, , 列表框句柄



.子程序 外部列表框_加入项目, 空白型, , 添加新项目
.参数 句柄, 整数型, , 列表框句柄
.参数 项目文本, 文本型, , 要添加的项目文本



.子程序 外部列表框_插入项目, 空白型, , 插入新项目
.参数 句柄, 整数型, , 
.参数 项目索引, 整数型, , 0表示第一项
.参数 项目文本, 文本型, , 要插入的项目文本



.子程序 外部列表框_删除项目, 空白型, , 删除指定项目
.参数 句柄, 整数型, , 列表框句柄
.参数 项目索引, 整数型, , 0表示第一项



.子程序 外部列表框_取选中项, 整数型, , 取列表框现行选中项
.参数 句柄, 整数型, , 列表框句柄



.子程序 外部列表框_置选中项, 空白型, , 置列表框现行选中项
.参数 句柄, 整数型, , 列表框句柄
.参数 项目索引, 整数型, , 0表示第一项



.子程序 外部列表框_取项目文本, 文本型, , 取列表框指定项的项目文本
.参数 列表框句柄, 整数型, , 列表框句柄
.参数 项目索引, 整数型, , 0表示第一项



.子程序 外部列表框_取项目数值, 整数型, , 取得指定项目数值
.参数 句柄, 整数型, , 列表框句柄
.参数 项目索引, 整数型, , 0表示第一项



.子程序 外部列表框_置项目数值, 空白型, , 置指定项目数值
.参数 句柄, 整数型, , 列表框句柄
.参数 项目索引, 整数型, , 
.参数 项目数值, 整数型, , 



.子程序 列表框_读入配置文件, 空白型, , 读入文件到列表框里，该文件要用<列表框_保存文本>命令保存的格式！<该命令一般都与“列表框_保存为配置文件”成双使用！>
.参数 要读的文件名, 文本型, , 文件全路径
.参数 列表框, 列表框, , 列表框
.参数 是否读取前后缀, 逻辑型, 可空, 默认为假，将读取前后缀！
.参数 前缀文本, 文本型, 可空, 要读取的《前缀文本》,“是否读取前后缀”为真时本参数才有效！
.参数 后缀文本, 文本型, 可空, 要读取的《后缀文本》,“是否读取前后缀”为真时本参数才有效！



.子程序 列表框_保存为配置文件, 空白型, , 将所有列表框里的文本保存到一个文件里！<该命令一般都与“列表框_读入配置文件”成双使用！>
.参数 要保存的文件名, 文本型, , 文件全路径
.参数 列表框, 列表框, , 列表框
.参数 加前缀, 文本型, 可空, 在文本前面加上一段字符或汉字
.参数 加后缀, 文本型, 可空, 在文本后面加上一段字符或汉字



.子程序 外部组合框_取项目数值, 整数型, , 取组合框指定项目数值
.参数 句柄, 整数型, , 组合框句柄
.参数 项目索引, 整数型, , 0表示第一项



.子程序 外部组合框_置项目数值, 空白型, , 置组合框指定项目数值
.参数 句柄, 整数型, , 组合框句柄
.参数 项目索引, 整数型, , 0表示第一项
.参数 数值, 整数型, , 要置的项目数值



.子程序 外部组合框_清空, 空白型, , 删除组合框所有项目
.参数 句柄, 整数型, , 组合框句柄



.子程序 外部组合框_取项目文本, 文本型, , 取回组合框指定索引项目文本
.参数 句柄, 整数型, , 组合框句柄
.参数 项目索引, 整数型, , 项目索引，0表示第一行



.子程序 外部组合框_置现行选中项, 空白型, , 选中指定项目
.参数 句柄, 整数型, , 组合框句柄
.参数 项目索引, 整数型, , 0表示第一项



.子程序 外部选择框_选中, 空白型, , 选中外部程序的选择框
.参数 窗口句柄, 整数型, , 



.子程序 外部选择框_取消选中, 空白型, , 取消选中外部程序的选择框
.参数 窗口句柄, 整数型, , 



.子程序 外部单选框_选中, 空白型, , 选中外部程序的单选框
.参数 窗口句柄, 整数型, , 



.子程序 外部单选框_取消选中, 空白型, , 取消选中外部程序的单选框
.参数 窗口句柄, 整数型, , 



.子程序 系统_打开控制面板, 空白型, , 打开系统的控制面板
.参数 打开方式, 整数型, 可空, 1、#隐藏窗口； 2、#普通激活； 3、#最小化激活； 4、#最大化激活； 5、#普通不激活； 6、#最小化不激活



.子程序 系统_打开控制面板项, 空白型, , 打开系统控制面板设置
.参数 控制面板项, 整数型, , 1.辅助选项 2.系统属性 3.增加新的打印机 4.添加/删除程序 5.复制磁盘 6.时间/日期 7.显示器设置 8.操纵杆 9.邮件/传真 10.邮局设置 11.鼠标属性 12.增加Modem 13.声音和音频设备属性 14.网络 15.口令 16.区域设置 17.IE设置 18.扫描仪与数字相机设设置 19.ODBC数据源管理器，ODBC数据源、ODBC驱动程序设置 20.电话拨号属性 21.电源管理设置 22.BDE Adminstrator 
.参数 打开项页, 整数型, 可空, 可空,默认为第一页



.子程序 系统_置桌面背景, 逻辑型, , 设置电脑桌面壁纸
.参数 图片路径, 文本型, , 可以为：bmp，jpg，gif，tiff，png，等格式；
.参数 填充方式, 整数型, 可空, 0、平铺 1、居中 2、拉伸 3、适应 4、填充 5、跨区



.子程序 程序_出错退出, 空白型, , 让程序内部崩溃方式结束运行。感谢goomoo提供提示


.子程序 鼠标_单击, 空白型, , 鼠标操作，具体请看参数的备注
.参数 窗口句柄, 整数型, , 
.参数 横坐标, 整数型, 可空, 留空则取鼠标所在位置
.参数 纵坐标, 整数型, 可空, 留空则取鼠标所在位置
.参数 类型, 整数型, 可空, 1 = 鼠标左键单击；2 = 鼠标右键单击；3 = 鼠标左键按住不放；



.子程序 文本_折行, 文本型, , 把一段长文本按你指定的字数分行
.参数 要处理的文本, 文本型, , 
.参数 每行字数, 整数型, 可空, 半角字数，如果为空，将不进行分行操作，直接返回文本内容，如果包含文本或全角字符，则需要把每行字数至少设置为2
.参数 是否强行分行, 逻辑型, 可空, 为真则强行按设定长度分行。为假则保留连续半角数字或字母为一行。默认为假。
.参数 是否全角, 逻辑型, 可空, 是否将半角转换为全角,如果为空即不转换
.参数 首空字节数, 整数型, 可空, 在每行前面加入空格,如果为空,为0,即不加空格



.子程序 窗口_置顶, 逻辑型, , 设置窗口在最顶端,成功返回真，失败返回假
.参数 窗口句柄, 整数型, , 欲设置的窗口句柄
.参数 是否激活, 逻辑型, 可空, 默认为激活,如果为假,窗口显示后不激活,不获取键盘焦点



.子程序 窗口_取标题, 文本型, , 获取指定窗口句柄的标题
.参数 窗口句柄, 整数型, , 



.子程序 网页_取网址引用, 文本型, , 返回指定网址的引用信息
.参数 网址, 文本型, , 



.子程序 系统_清空回收站, 空白型, , 清空回收站
.参数 是否弹出询问框, 逻辑型, 可空, 可以留空,默认为真时会提示是否要清空回收站,为假时直接清空回收站



.子程序 窗口_取顶端窗口句柄, 整数型, , 成功返回一个最顶端窗口的句柄


.子程序 文本_投递, 空白型, , 向指定窗口句柄的窗口中后台发送文本内容,对游戏有效(无返回值)
.参数 窗口句柄, 整数型, , 接收消息的窗口句柄
.参数 文本内容, 文本型, , 发送的文本内容



.子程序 网页_取网页源码, 文本型, , 获取指定网址的网页源码文本
.参数 网址, 文本型, , 请提供要取源码的网址



.子程序 进度条_模拟, 空白型, , 画板高度调个20就行了。宽度自己看着调
.参数 画板, 画板, , 
.参数 最大位置, 整数型, , 
.参数 当前位置, 整数型, , 
.参数 进度条颜色, 整数型, 可空, 可人，默认为红色；比如 生命值 一般都用红色，真气值一般都用蓝色
.参数 提示文本, 文本型, 可空, 比如 生命值 或者 真气值
.参数 输出百分比, 整数型, 参考 可空, 用一个变量来接收百分比;不用的话可以留空；
.参数 是否显示百分比, 逻辑型, 可空, 是否显示百分比；如 80%



.子程序 窗口_取鼠标处窗口句柄, 整数型, , 取鼠标处窗口句柄,成功返回句柄，失败返回0


.子程序 窗口_置焦点, 逻辑型, , 把焦点置到指定的控件上,成功返回真，失败返回假；
.参数 窗口句柄, 整数型, , 要置焦点的窗口句柄



.子程序 窗口_取控件内容, 文本型, , 取指定窗口的标题。成功返回窗口标题，失败返回空。
.参数 控件句柄, 整数型, , 指定的控件句柄



.子程序 发送消息整数, 整数型, , 发送特定的消息到一个或多个窗口。该命令不会立即返回，只有在消息被处理完毕后才返回结果。返回值的具体含义随消息的不同而不同
.参数 窗口句柄, 整数型, , 本参数指定接收消息的窗口的句柄
.参数 消息号, 整数型, , 本参数指定欲发送的消息
.参数 消息参数1, 整数型, , 本参数指定消息的第一个参数。具体含义随消息的不同而不同
.参数 消息参数2, 整数型, , 本参数指定消息的第二个参数。具体含义随消息的不同而不同



.子程序 窗口_最小化, 逻辑型, , 成功返回真，失败返回假
.参数 窗口句柄, 整数型, , 欲最小化的窗口句柄



.子程序 文件_移动, 逻辑型, , 移动指定文件到指定的文件位置
.参数 欲移动的文件名, 文本型, , 欲移动的文件名
.参数 移动到的文件名, 文本型, , 移动到的文件名



.子程序 窗口_显示隐藏, 空白型, , 窗口显示或隐藏
.参数 窗口句柄, 整数型, , 欲操作的窗口句柄
.参数 显示隐藏, 逻辑型, , 真 = 显示；假 = 隐藏；



.子程序 外部滚动条_显示隐藏, 逻辑型, , 成功返回真；失败返回假
.参数 窗口句柄, 整数型, , 要操作滚动条的控件句柄
.参数 滚动条标识, 整数型, , 0 = 横向滚动条； 1 = 纵向滚动条； 3 = 横纵向滚动条；
.参数 显示隐藏, 逻辑型, , 真 = 显示；假 = 隐藏



.子程序 时钟_创建, 逻辑型, , 创建一个时钟；成功返回真，失败返回假；
.参数 窗口句柄, 整数型, , 直接用“取窗口句柄()”命令取出本窗口句柄即可
.参数 时钟标识, 整数型, , 销毁时用来辩认的
.参数 时钟周期, 整数型, , 时钟周期
.参数 时钟_周期事件, 子程序指针, , 时钟_周期事件



.子程序 时钟_销毁, 逻辑型, , 销毁一个时钟；成功返回真，失败返回假；
.参数 窗口句柄, 整数型, , 直接用“取窗口句柄()”命令取出本窗口句柄即可
.参数 时钟标识, 整数型, , 创建时用的时钟标识



.子程序 窗口_锁住解锁, 逻辑型, , 在指定的窗口里允许或禁止所有鼠标及键盘输入
.参数 窗口句柄, 整数型, , 要锁住或解锁的窗口句柄
.参数 类型, 逻辑型, , 真 = 锁住；假 = 解锁；



.子程序 窗口_取指定坐标处句柄, 整数型, , 取指定坐标处句柄,成功返回句柄，失败返回0
.参数 横坐标, 整数型, , 桌面横坐标
.参数 纵坐标, 整数型, , 桌面纵坐标



.子程序 窗口_还原, 逻辑型, , 恢复一个最小化的程序，并将其激活；成功把回真，失败返回假；
.参数 窗口句柄, 整数型, , 欲还原的窗口句柄



.子程序 窗口_取位置和大小, 精易_位置和大小, , 取指定窗口的左边、顶边、宽度、高度
.参数 窗口句柄, 整数型, , 欲取大小的窗口句柄



.子程序 窗口_是否可见, 逻辑型, , 返回真为可见，否则为不可见
.参数 窗口句柄, 整数型, , 窗口句柄



.子程序 窗口_是否最小化, 逻辑型, , 已最小化返回真；否则返回假
.参数 窗口句柄, 整数型, , 要判断的窗口句柄



.子程序 窗口_是否最大化, 逻辑型, , 已最大化返回真；否则返回假
.参数 窗口句柄, 整数型, , 要判断的窗口句柄



.子程序 窗口_取焦点句柄, 整数型, , 取焦点句柄;获得自身拥有输入焦点的窗口句柄


.子程序 文本_到小写, 文本型, , 把字母转换到小写
.参数 要转换的文本, 文本型, , 要转换的文本



.子程序 文本_到大写, 文本型, , 把字母转换到大写
.参数 要转换的文本, 文本型, , 要转换的文本



.子程序 发送消息文本, 整数型, , 发送特定的消息到一个或多个窗口。该命令不会立即返回，只有在消息被处理完毕后才返回结果。返回值的具体含义随消息的不同而不同
.参数 窗口句柄, 整数型, , 本参数指定接收消息的窗口的句柄
.参数 消息号, 整数型, , 本参数指定欲发送的消息
.参数 消息参数1, 整数型, , 本参数指定消息的第一个参数。具体含义随消息的不同而不同
.参数 消息参数2, 文本型, , 本参数指定消息的第二个参数。具体含义随消息的不同而不同



.子程序 文本_取声母, 文本型, , 取一组文本中每个字的拼音首字,如果不是中文就直接取
.参数 文本, 文本型, , 转换前文本



.子程序 窗口_取屏幕句柄, 整数型, , 获取屏幕的句柄


.子程序 窗口_取控件大小, 逻辑型, , 获取一个控件的大小（宽度和高度）
.参数 窗口句柄, 整数型, , 欲获取一个控件大小窗口句柄
.参数 窗口的宽度, 整数型, 参考 可空, 用来存放取回来的窗口宽度
.参数 窗口的高度, 整数型, 参考 可空, 用来存放取回来的窗口高度



.子程序 线程_取ID, 整数型, , 成功返回指定窗口的线程ID
.参数 窗口句柄, 整数型, , 指定窗口句柄



.子程序 窗口_取父句柄, 整数型, , 判断一个窗口是否有父窗口，如有直接返回该窗口的像窗口句柄，否则返回0
.参数 窗口句柄, 整数型, , 欲取父窗口的窗口句柄



.子程序 窗口_取祖句柄, 整数型, , 取一个窗口的顶级句柄，如果提供的句柄已是顶级句柄，将直接返回。
.参数 窗口句柄, 整数型, , 欲取祖窗口句柄的子窗口句柄



.子程序 窗口_取坐标子句柄, 整数型, , 取父窗口中包含了指定坐标的第一个子窗口句柄(与其它取窗口句柄不同的是:可取出不可视或透明的窗口)
.参数 父窗口句柄, 整数型, , 欲取坐标句柄所在的父窗口句柄
.参数 横坐标, 整数型, , 指定横坐标
.参数 纵坐标, 整数型, , 指定纵坐标



.子程序 窗口_是否子窗口, 逻辑型, , 判断一个窗口和另一窗口是否为父子关系
.参数 父窗口的句柄, 整数型, , 父窗口的句柄
.参数 欲判断的窗口句柄, 整数型, , 欲判断的窗口句柄



.子程序 鼠标_按键, 空白型, , 模拟鼠标按键(无返回值)
.参数 键, 整数型, 可空, 可空:为左键  1 #左键   2 #右键   3 #中键
.参数 控制, 整数型, 可空, 可空:为单击  1 #单击   2 #双击   3 #按下  4 #放开



.子程序 键盘_单击, 空白型, , 前台模拟键盘操作
.参数 键代码, 整数型, , 键代码；如A是65，就直接输65
.参数 状态, 整数型, 可空, 留空为单击；1按下   2放开



.子程序 投递消息整数, 空白型, , 
.参数 窗口句柄, 整数型, , 
.参数 消息号, 整数型, , 
.参数 消息参数1, 整数型, , 
.参数 消息参数2, 整数型, , 



.子程序 鼠标_消息, 空白型, , 向指定窗口发送鼠标动作消息(无返回值)
.参数 窗口句柄, 整数型, 可空, 可空:为桌面超级列表框句柄  接收鼠标消息窗口句柄
.参数 水平坐标, 整数型, 可空, 可空:为原水平坐标不变  移动目标鼠标水平坐标 (注:坐标为参数一窗口句柄中的坐标)
.参数 垂直坐标, 整数型, 可空, 可空:为原垂直坐标不变  移动目标鼠标垂直坐标
.参数 键, 整数型, 可空, 可空:为左键  1 #左键   2 #右键   3 #中键  4 #中键上滚动 5 #中键下滚动(滚动前后请按下放开中键)
.参数 控制, 整数型, 可空, 可空:为单击  1 #单击   2 #双击   3 #按下  4 #放开



.子程序 窗口_取控件坐标, 精易_坐标, , 取指定窗口(左上角\顶点)在屏幕中的位置
.参数 窗口句柄, 整数型, 可空, 可空:则取当前窗口句柄的位置



.子程序 鼠标_记位, 精易_坐标, , 记录当前鼠标坐标


.子程序 鼠标_归位, 空白型, , 恢复当前鼠标坐标到"鼠标_记位"的坐标点或移动鼠标到指定点(无返回值)
.参数 坐标, 精易_坐标, 可空, 可空:恢复到上次记录的坐标点



.子程序 键盘_键名取键代码, 整数型, , 取键名的键代码(返回键代码)
.参数 键名, 文本型, , 键名,如填:A键,将返回65的键代码



.子程序 键盘_键代码取键名, 文本型, , 取键代码的键名(返回键名)
.参数 键代码, 整数型, , 键代码,如填:65,将返回 A键



.子程序 鼠标_锁定, 空白型, , 锁定鼠标键(锁定后,鼠标键无效)
.参数 状态, 逻辑型, 可空, 真:完全锁定鼠标 (可空为假) 假:锁定鼠标左右键



.子程序 鼠标_解锁, 空白型, , 鼠标键解锁(锁定鼠标键锁定后,用来恢复鼠标的使用)


.子程序 鼠标_限制, 空白型, , 限制鼠标的活动范围(无返回值)
.参数 临时左边, 整数型, 可空, 可空，为0
.参数 临时顶边, 整数型, 可空, 可空，为0
.参数 临时宽度, 整数型, 可空, 可空，为屏幕宽度-临时左边
.参数 临时高度, 整数型, 可空, 可空，为屏幕高度-临时顶边



.子程序 键盘_锁定, 空白型, , 锁定所有键盘按键(锁定后,键盘无法操作) 
.参数 状态, 逻辑型, 可空, 可空。真=锁全键盘(可空为假)，假=锁定功能键与Win键Esc键F4键Tab键Print键Soroll键Pause键



.子程序 键盘_解锁, 空白型, , 键盘解锁(键盘锁定后,用来恢复键盘的使用)


.子程序 窗口_置父, 整数型, , 指定一个窗口的新父(返回  前一个父窗口的句柄)
.参数 子窗口句柄, 整数型, , 子窗口的句柄
.参数 父窗口句柄, 整数型, , hWndChild的新父



.子程序 文本_取空白文本, 文本型, , 汇编方式获取空白文本，返回具有指定数目半角空格的文本
.参数 文本长度, 整数型, , 



.子程序 字节集_取空白字节集, 字节集, , 汇编方式获取空白字节集，返回具有特定数目 0 字节的字节集 
.参数 字节集长度, 整数型, , 



.子程序 窗口_取类名, 文本型, , 取指定窗口句柄的窗口类名(返回窗口类名,失败返回空文本)
.参数 窗口句柄, 整数型, , 欲取类名的窗口句柄



.子程序 进程_是否存在, 逻辑型, , 判断指定进程是否存在(此判断与进程其它信息无关联)(存在返回真，不存在或失败返回假)
.参数 进程名, 文本型, , 欲检测的进程名
.参数 是否区分大小写, 逻辑型, 可空, 默认为不区分,真=区分



.子程序 窗口_句柄是否有效, 逻辑型, , 有效返回真；不存在返回假；
.参数 窗口句柄, 整数型, , 目标窗口句柄



.子程序 窗口_置透明度, 逻辑型, , 设置窗口透明状态(成功返回真,失败返回假)  
.参数 窗口句柄, 整数型, , 设置透明化窗口的句柄
.参数 透明度, 字节型, 可空, 设置整个窗口的透明度  取值范围是[0,255] 可空为不设定此参数
.参数 透明色, 整数型, 可空, (#颜色)指定某颜色为完全透明(完全透明处不属于该窗口)  可空为不指定
.参数 鼠标穿透, 逻辑型, 可空, 可空为假   真:窗口被鼠标穿透



.子程序 窗口_最大化, 空白型, , 将指定窗口最大化(无返回值) 
.参数 窗口句柄, 整数型, , 欲最大化窗口的句柄
.参数 是否无边框, 逻辑型, 可空, 如果窗口边框为[无边框]请将此参数设置为真



.子程序 窗口_总在最前, 空白型, , 将指定窗口设为总在最前
.参数 窗口句柄, 整数型, , 欲设置的窗口句柄
.参数 是否总在最前, 逻辑型, 可空, 默认为假:取消总在最前  真:总在最前



.子程序 窗口_置状态, 逻辑型, , 成功返回真，失败返回假
.参数 窗口句柄, 整数型, , 欲设置状态的窗口句柄
.参数 状态类型, 整数型, , 0 隐藏取消激活 1 还原激活 2 最小化激活 3 最大化激活 4 还原 6 最小化取消激活 7 最小化 9 还原激活



.子程序 窗口_是否在最顶端, 逻辑型, , 判断指定窗口是否在最前面；如果是返回真,否则返回假；
.参数 进程名, 文本型, 可空, 欲判断窗口的程序进程名(注意区分大小写)
.参数 窗口类名, 文本型, 可空, 欲判断窗口的类名(注意区分大小写)
.参数 窗口标题, 文本型, 可空, 欲判断窗口的标题关键字



.子程序 文件_取扩展名, 文本型, , 返回一个文件的后缀名,如：.jpg  如果没有后缀,返回空
.参数 文件名, 文本型, , 需要处理的原始文件名



.子程序 文件_去扩展名, 逻辑型, , 改变一个文件的后缀名,如果没有后缀,将自动加上新后缀,返回新文件名
.参数 原始文件名, 文本型, , 需要处理的原始文件名



.子程序 文件_改扩展名, 逻辑型, , 改变一个文件的后缀名,成功返回真，失败返回假。
.参数 原始文件名, 文本型, , 需要处理的原始文件名
.参数 新扩展名, 文本型, , 后缀必须包含"."，如“.rar”,否则失败。



.子程序 键盘_组合按键, 空白型, , 模拟一个组合按键；如:Ctrl+A
.参数 键代码, 整数型, , 键代码；如：A(65)
.参数 功能键码1, 整数型, , 功能键代码；如：ctrl(1) 或 #ctrl
.参数 功能键码2, 整数型, 可空, 功能键代码(可以留空)
.参数 功能键码3, 整数型, 可空, 功能键代码(可以留空)



.子程序 文本_删除指定文本行, 文本型, , 删除指定文本的一行文本，返回删行后的文本
.参数 源文本, 文本型, , 
.参数 行数, 整数型, , 输入你想删除的行数，如：想删除第3行的整行文本就直接输3



.子程序 文本_取文本所在行, 整数型, , 查找某段字或关键中在文本中的哪一行出现，成功返回行数，失败返回0
.参数 源文本, 文本型, , 
.参数 欲查找的文本, 文本型, , 
.参数 是否区分大小写, 逻辑型, 可空, 



.子程序 文本_取汉字区位码2, 整数型, , 
.参数 汉字, 文本型, , 



.子程序 窗口_句柄枚举进程信息, 精易_进程信息, , 返回进程ID，进程名，进程名全路径；
.参数 窗口句柄, 整数型, , 



.子程序 窗口_句柄取进程ID, 整数型, , 返回进程ID；
.参数 窗口句柄, 整数型, , 目标窗口句柄



.子程序 窗口_关闭, 空白型, , 将指定窗口销毁(无返回值)
.参数 窗口句柄, 整数型, , 欲销毁窗口的句柄



.子程序 窗口_闪动, 空白型, , 无返回值
.参数 窗口句柄, 整数型, , 指定闪动的窗口句柄 
.参数 是否闪动, 逻辑型, , 是否闪动指定的窗口



.子程序 窗口_枚举, 整数型, , 枚举所有窗口,返回窗口句柄数目,失败返回0 
.参数 窗口信息, 精易_窗口信息, 参考 可空 数组, 返回的窗口信息数组



.子程序 窗口_枚举子窗口, 整数型, , 枚举指定句柄的下一级子窗口,返回子窗口句柄数目,失败或无子返回0
.参数 父窗口句柄, 整数型, 可空, 指定父窗口句柄  可空:为桌面.找顶级窗口
.参数 子窗口数组, 整数型, 参考 数组, 返回的所有符合条件的子窗口句柄
.参数 类名, 文本型, 可空, 指定子窗口类名



.子程序 文本_删首尾空, 文本型, , 删除一段文本前后的空格
.参数 源文本, 文本型, , 



.子程序 文本_取长度, 整数型, , 取一段文本的长度，中文算两个长度，字母算一个长度
.参数 源文本, 文本型, , 



.子程序 网页_网络文件是否存在, 逻辑型, , 判断网络上的文件是否存在，存在返回真，否则返回假；
.参数 网络文件名, 文本型, , 



.子程序 系统_光驱查询, 空白型, , 返回光驱的文本数组，
.参数 匿名参数_7269, 文本型, 数组, 



.子程序 系统_光驱开关, 空白型, , 控制光驱的开与关
.参数 打开关闭, 逻辑型, , 真为打开光驱，假为关闭光驱；



.子程序 系统_输入法选择, 整数型, , 返回输入法的数量；或枚举；
.参数 输入法序号, 整数型, 可空, 
.参数 输入法名字数组, 文本型, 参考 可空 数组, 用来装载输入法的数组
.参数 输入法序号数组, 整数型, 参考 可空 数组, 



.子程序 系统_格式化软盘, 逻辑型, , 系统_格式化软盘
.参数 驱动器号, 文本型, , 



.子程序 系统_任务栏隐藏, 空白型, , 隐藏系统任务栏


.子程序 系统_任务栏显示, 空白型, , 显示被隐藏的系统任务栏


.子程序 系统_桌面图标隐藏, 空白型, , 隐藏桌面图


.子程序 系统_桌面图标显示, 空白型, , 显示桌面图标


.子程序 程序_删除自身, 空白型, , 删除程序自身EXE文件


.子程序 网页_打开指定网址, 空白型, , 使用系统默认的浏览器打开一个网址
.参数 网页地址, 文本型, , 要打开的网页地址



.子程序 目录_删除自身_cmd, 空白型, , 利用CMD命令删除自身


.子程序 目录_复制文件_cmd, 空白型, , 利用CMD命令复制文件
.参数 要复制的文件名, 文本型, , 
.参数 复制到的目录名, 文本型, , 



.子程序 目录_移动文件_cmd, 空白型, , 利用CMD命令移动文件
.参数 要移动的文件名, 文本型, , 
.参数 移动到的目录名, 文本型, , 



.子程序 系统_修改主页, 空白型, , 修改IE主页
.参数 地址, 文本型, , 



.子程序 目录_移动并运行_cmd, 空白型, , 
.参数 要移动的文件名, 文本型, , 
.参数 移动到的目录名, 文本型, , 



.子程序 窗口_置标题, 逻辑型, , 改指定窗口句柄的窗口标题(非"0"表示成功,返回"0"表示失败)
.参数 窗口句柄, 整数型, , 欲更改窗口标题的句柄
.参数 新标题, 文本型, , 欲改成的新标题



.子程序 窗口_禁止关闭, 逻辑型, , 控制窗口关闭按钮,(允许/禁止)关闭窗口 (成功返回真,失败返回假)
.参数 窗口句柄, 整数型, , 欲禁止或解除禁止的窗口句柄
.参数 禁止关闭, 逻辑型, 可空, 默认为真,禁止关闭； 假:允许关闭； 真:禁止关闭；



.子程序 窗口_置窗口化, 空白型, , 将指定窗口窗口化.通常用于游戏中..
.参数 句柄, 整数型, , 欲窗口化的窗口句柄(通常有这一个参数就可以了,其它可以不设定)
.参数 新宽度, 整数型, 可空, 窗口化后的窗口宽度 可空:800
.参数 新高度, 整数型, 可空, 窗口化后的窗口高度 可空:600
.参数 窗口标题, 文本型, 可空, 窗口化后的窗口标题 可空:不修改原窗口标题(有的游戏修改标题后会自动退出)
.参数 是否带边框, 逻辑型, 可空, 可空:无边框窗口 真:带标题栏(有的游戏屏蔽了边框的修改,可通过其它方法来实现)
.参数 分辨率_宽, 整数型, 可空, 可空:不修改分辨率(有的游戏全屏时修改了其分辨率,需改回去..)
.参数 分辨率_高, 整数型, 可空, 可空:不修改分辨率



.子程序 窗口_取鼠标处控件标题, 文本型, , 取出指定点的组件上的文字内容或标题(返回文字内容)
.参数 水平位置, 整数型, 可空, (可空为鼠标当前坐标x)   文字所在的x坐标“X轴光标”
.参数 垂直位置, 整数型, 可空, (可空为鼠标当前坐标y)   文字所以的y坐标“Y轴光标”



.子程序 进程_结束, 逻辑型, , 结束指定进程。成功返回真，失败返回假。本命令为初级命令
.参数 进程ID, 整数型, 可空, 欲结束的进程ID,如果为空将结束自己



.子程序 进程_ID取模块, 整数型, , 失败为0，成功返回模块数量(该命令为高级成员命令)
.参数 进程ID, 整数型, 可空, 为空 则取当前进程模块
.参数 模块信息数组, 精易_模块信息, 参考 可空 数组, 返回的模块信息 数组



.子程序 窗口_取坐标距离, 整数型, , 返回两坐标点之间的距离
.参数 坐标1, 精易_坐标, , 起始坐标
.参数 坐标2, 精易_坐标, , 终点坐标



.子程序 系统_取用户名, 文本型, , 获取当前系统的用户名


.子程序 系统_取计算机名, 文本型, , 获取计算机名


.子程序 系统_处理事件, 空白型, , 比普通的处理事件速度要快3倍左右；


.子程序 系统_取主页地址, 文本型, , 取IE主页地址


.子程序 程序_加入右键菜单, 逻辑型, , 把目标程序加入到右键菜单中,成功=真
.参数 菜单显示名, 文本型, , 不能有符号，如“\”等
.参数 目标程序名称, 文本型, 可空, 填空为程序本身
.参数 是否删除, 逻辑型, 可空, 真=删除，假=不删除，默认为假，添加右键菜单
.参数 命令行, 文本型, 可空, 



.子程序 进程_提升权限, 逻辑型, , 提升进程到指定权限( #备份  #启动  #关机  #调试)
.参数 目标进程ID, 整数型, 可空, 为空表示当前进程ID
.参数 权限类别, 文本型, 可空, 为空:#调试( #备份  #启动  #关机  #调试)



.子程序 进程_提升权限到Debug, 逻辑型, , 成功返回真，把一个进程的权限提升到调试级权限
.参数 进程ID, 整数型, 可空, 可空为提升当前进程



.子程序 网页_取端口, 整数型, , 取出网站服务器的默认端口
.参数 网址, 文本型, , 



.子程序 系统_取任务栏高度, 整数型, , 获取系统任务栏高度


.子程序 剪辑板_置图片, 空白型, , 设置指定图片到系统剪辑板
.参数 图片数据, 字节集, , 要置入剪辑板的图片数据



.子程序 剪辑板_取数据权窗口句柄, 整数型, , 返回复制该数据的窗口句柄；如：一段文字是在记事本复制的，则返回记事本的窗口句柄


.子程序 文件_取格式, 整数型, , 0=exe/dll；1=e/e局_项数组；3=rar；4=zip；5=7z；6=jpg；7=gif；8=swf；失败返回-1
.参数 文件字节集, 字节集, , 可以用读入文件获取文件字节集
.参数 返回文本格式, 文本型, 参考 可空, 可留空；装载文本格式的变量；如是exe格式的直接返回exe,失败返回空文本



.子程序 系统_设置为默认浏览器, 空白型, , 如：自己做了个易语言浏览器，可以用这句设置成默认的；
.参数 文件名绝对路径, 文本型, 可空, 可空:如果留空将设置本程序为默认浏览器;浏览器的可执行文件路径；
.参数 类型, 整数型, 可空, 可空:默认为0,0=设置指定或本程序为默认浏览器,1=设置IE为默认浏览器;



.子程序 目录_取大小, 长整数型, , 取一个文件夹的大小；单位为字节型, 失败返回-1。
.参数 目录名路径, 文本型, , 如：D:\Program Files



.子程序 目录_取子目录数, 整数型, , 取一个文件夹下面的子目录数量；失败返回-1
.参数 父文件夹路径, 文本型, , 



.子程序 目录_取创建时间, 日期时间型, , 返回创建的时间；
.参数 目录名, 文本型, 可空, 



.子程序 目录_取尾部目录名或文件名, 文本型, , 如果是目录:局_项数组:\001\002则返回 002；  如果是文件:局_项数组:\001\002\0.txt则返回 0.txt
.参数 文件或目录名, 文本型, , 如果参数尾部包含\,将会被去掉



.子程序 目录_取特定目录, 文本型, , 例子：目录_取特定目录 (#我的文档) 或 目录_取特定目录 (1) 等。本命令返回指定的Windows系统特定目录，所返回目录名以“\”符号结束，如失败返回空文本。本命令为初级命令。
.参数 类型, 整数型, 可空, 留空为桌面； 1: #我的文档;  2: #我的收藏夹;  3: #系统桌面;  4: #系统字体;  5: #开始菜单组;  6: #程序菜单组;  7: #启动菜单组;  8: #程序数据目录;  9: #Windows安装目录;  10: #Windows系统目录;  11: #临时文件目录;  12:系统缓存目录



.子程序 目录_复制, 空白型, , 复制目录到指定的路径
.参数 源目录, 文本型, , 如：C:\001\002
.参数 目标目录, 文本型, , 复制至：d:\2543\545



.子程序 目录_浏览, 文本型, , 浏览文件夹内支持创建文件夹 支持显示文件 编辑框 (返回被选择文件或文件夹路径)
.参数 标题, 文本型, 可空, 设置标题
.参数 显示文件, 逻辑型, 可空, 默认为假。
.参数 初始目录, 文本型, 可空, 设置一个初始目录,默认为我的电脑
.参数 地址栏, 逻辑型, 可空, 是否包含编辑框,可编辑,默认为假
.参数 新样式, 逻辑型, 可空, 有新建按钮及右键菜单,默认为真
.参数 父窗口句柄, 整数型, 可空, 



.子程序 目录_取Windows目录, 文本型, , 如：局_项数组:\WINDOWS\


.子程序 目录_取system32目录, 文本型, , 如：局_项数组:\WINDOWS\system32\


.子程序 目录_取临时目录, 文本型, , 取出Temp目录,如:局_项数组:\DO局_项数组UME~1\ADMINI~1\LO局_项数组ALS~1\Temp\


.子程序 目录_是否为空, 逻辑型, , 如果为空返回真，否则返回假
.参数 欲判断的目录路径, 文本型, , 



.子程序 文件_执行, 逻辑型, , 执行文件夹或文件或命令(成功返回真,失败返回假)
.参数 文件名, 文本型, , 欲操作(文件)或(文件夹的名称)或(网址)
.参数 命令行, 文本型, 可空, 执行文件的命令行,没有则设为空
.参数 窗口方式, 整数型, 可空, 可空为0:普通激活方式  1 隐藏窗口 2 最小化窗口



.子程序 文件_取路径盘符, 文本型, , 如 局_项数组:001\002\01\0104.txt返回 局_项数组:
.参数 文件或目录名, 文本型, , 



.子程序 文件_到短文件名, 文本型, , 返回短文件名
.参数 文件名, 文本型, , 



.子程序 文件_取关联, 文本型, , 写入一个后缀，取得此后缀文档打开方式，失败则返回空文本
.参数 后缀, 文本型, , 文件后缀，如"txt","*.txt",".txt"三者都可以



.子程序 文件_取目录, 文本型, , 取得文件所在目录的路径,如：局_项数组:\012\3600.exe 成功将返回 局_项数组:\012\
.参数 路径文件名, 文本型, , 文件的完整地址



.子程序 文件_取大小, 整数型, , 单位是kb,不足1024个字节按1kb计算
.参数 文件名, 文本型, , 



.子程序 外部编辑框_取指定行文本长度, 整数型, , 取得编辑框指定行文本长度
.参数 编辑框句柄, 整数型, , 编辑框句柄
.参数 行号, 整数型, , 0表示第一行



.子程序 外部编辑框_取光标所在行和列号, 空白型, , 取得选定字符或光标所在行号和列号
.参数 句柄, 整数型, , 编辑框句柄
.参数 行号, 整数型, 参考 可空, 调用前设置一个变量用于装载返回的行号
.参数 列号, 整数型, 参考 可空, 调用前设置一个变量用于装载返回的列号



.子程序 外部编辑框_取行数, 整数型, , 通过句柄取指定编辑框的总行数
.参数 编辑框句柄, 整数型, , 编辑框句柄



.子程序 外部编辑框_滚动行, 空白型, , 上下滚动编辑里面的文本
.参数 编辑框句柄, 整数型, , 编辑框句柄
.参数 要滚动的行数, 整数型, , 正数向下滚动，负数向上滚动



.子程序 外部编辑框_置内容, 空白型, , 通过句柄设置编辑框的内容
.参数 编辑框句柄, 整数型, , 编辑框句柄
.参数 文本, 文本型, , 要发送的文本



.子程序 外部编辑框_取内容, 文本型, , 通过句柄取指定编辑框的内容
.参数 编辑框句柄, 整数型, , 编辑框句柄



.子程序 外部编辑框_剪切, 空白型, , 通过句柄对指定编辑框进行剪切操作
.参数 编辑框句柄, 整数型, , 编辑框句柄



.子程序 外部编辑框_删除, 空白型, , 清空编辑框里的内容
.参数 编辑框句柄, 整数型, , 编辑框句柄



.子程序 外部编辑框_撤消, 空白型, , 通过句柄对指定编辑框进行撤销操作
.参数 编辑框句柄, 整数型, , 编辑框句柄



.子程序 外部编辑框_选中按位置, 空白型, , 按起始位置和结束位置选择编辑框内的文本;
.参数 编辑框句柄, 整数型, , 编辑框句柄
.参数 开始位置, 整数型, , 开始选择位置,从1开始
.参数 结束位置, 整数型, , 结束选择位置



.子程序 外部编辑框_选中按内容, 空白型, , 选中编辑框指定的内容,如果指定的编辑框内没有指定的内容将不选择；
.参数 编辑框句柄, 整数型, , 编辑框句柄
.参数 要选择的内容, 文本型, , 搜索指定编辑框的内容并选择



.子程序 外部编辑框_取消选择, 空白型, , 取消编辑框内容的选择
.参数 编辑框句柄, 整数型, , 编辑框句柄



.子程序 外部编辑框_全选, 空白型, , 通过句柄对指定编辑框的内容进行全选
.参数 编辑框句柄, 整数型, , 编辑框句柄



.子程序 外部编辑框_复制, 空白型, , 通过句柄对指定编辑框进行复制操作
.参数 编辑框句柄, 整数型, , 



.子程序 外部编辑框_取指定行文本, 文本型, , 取回编辑框指定行的文本
.参数 编辑框句柄, 整数型, , 编辑框句柄
.参数 行号, 整数型, , 0表示第一行



.子程序 外部编辑框_滚到最后行, 空白型, , 让编辑滚动到最后一行
.参数 编辑框句柄, 整数型, , 编辑框句柄



.子程序 外部编辑框_取光标位置, 整数型, , 取光标编辑框的当前位置
.参数 编辑框句柄, 整数型, , 编辑框句柄



.子程序 外部编辑框_在光标处加入文本, 空白型, , 
.参数 编辑框句柄, 整数型, , 
.参数 要插入的文本, 文本型, , 



.子程序 外部编辑框_设为只读方式, 空白型, , 设置编辑框为只读方式
.参数 编辑框句柄, 整数型, , 
.参数 类型, 整数型, 可空, 默认为1；1=只读方式；2=普通方式；



.子程序 外部编辑框_设为密码方式, 空白型, , 设置编辑框为密码方式
.参数 编辑框句柄, 整数型, , 
.参数 类型, 整数型, 可空, 默认为1；1=密码方式；2=普通方式；



.子程序 外部编辑框_置左右边距, 空白型, , 通过句柄设置编辑框的左右边距
.参数 编辑框句柄, 整数型, , 编辑框句柄
.参数 左边距, 整数型, , 新的距离值
.参数 右边距, 整数型, , 新的距离值



.子程序 发送消息逻辑, 整数型, , 发送特定的消息到一个或多个窗口。该命令不会立即返回，只有在消息被处理完毕后才返回结果。返回值的具体含义随消息的不同而不同
.参数 窗口句柄, 整数型, , 本参数指定接收消息的窗口的句柄
.参数 消息号, 整数型, , 本参数指定欲发送的消息
.参数 消息参数1, 逻辑型, , 本参数指定消息的第一个参数。具体含义随消息的不同而不同
.参数 消息参数2, 整数型, , 本参数指定消息的第二个参数。具体含义随消息的不同而不同



.子程序 外部编辑框_限制字符数, 空白型, , 限制编辑框的输入字符数
.参数 编辑框句柄, 整数型, , 编辑框句柄
.参数 欲即制的字符数量, 整数型, , 欲即制的字符数量



.子程序 外部编辑框_内容是否改变过, 逻辑型, , 判断编辑框的内容从程序创建完毕后是否改变过；真=改变过；假=没改变过；
.参数 编辑框句柄, 整数型, , 编辑框句柄



.子程序 系统_取屏幕分辨率, 空白型, , 获取屏幕分辨率(无返回值)
.参数 显示器索引, 整数型, 可空, 索引值是从0开始
.参数 色深, 短整数型, 参考 可空, 存放色深的变量
.参数 屏幕宽度, 短整数型, 参考 可空, 存放屏幕宽度的变量
.参数 屏幕高度, 短整数型, 参考 可空, 存放屏幕高度的变量
.参数 屏幕刷新率, 短整数型, 参考 可空, 存放屏幕刷新率的变量



.子程序 系统_取磁盘大小信息, 逻辑型, , 获取系统磁盘使用情况
.参数 盘符, 文本型, , 格式为：C:或C:\
.参数 已用空间, 长整数型, 参考 可空, 单位为M,想转回KB单位直接乘以1024
.参数 剩余空间, 长整数型, 参考 可空, 单位为M,想转回KB单位直接乘以1024
.参数 总大小, 长整数型, 参考 可空, 单位为M,想转回KB单位直接乘以1024



.子程序 系统_开始按钮显示, 空白型, , 显示被隐藏的开始按钮


.子程序 系统_开始按钮隐藏, 空白型, , 隐藏系统开始按钮


.子程序 系统_显示托盘, 空白型, , 显示被隐藏的托盘


.子程序 系统_隐藏托盘, 空白型, , 隐藏托盘


.子程序 系统_取DOS路径, 文本型, , 返回DOS 8.3路径名
.参数 原路径, 文本型, , 



.子程序 系统_取所有磁盘盘符, 整数型, , 返回磁盘数量
.参数 装载盘符的数组, 文本型, 可空 数组, 装载盘符的数组



.子程序 系统_显示用户操作区, 空白型, , 显示被隐藏的系统用户操作区


.子程序 系统_隐藏用户操作区, 空白型, , 隐藏系统用户操作区


.子程序 系统_托盘图标显示, 空白型, , 显示被隐藏的托盘图标


.子程序 系统_托盘图标隐藏, 空白型, , 隐藏托盘图标


.子程序 系统_系统时间显示, 空白型, , 显示被隐藏的系统时间


.子程序 系统_系统时间隐藏, 空白型, , 隐藏系统时间


.子程序 系统_任务窗口显示, 空白型, , 显示被隐藏的任务窗口


.子程序 系统_任务窗口隐藏, 空白型, , 隐藏任务窗口


.子程序 系统_显示隐藏快速启动栏, 逻辑型, , 显示隐藏快速启动栏，目前只在XP系统测试过
.参数 显示隐藏, 逻辑型, 可空, 可空，默认为假，假=隐藏，真=显示。



.子程序 文件_取时间, 逻辑型, , 返回文件的创建时间、修改时间、访问时间；
.参数 文件名, 文本型, , 
.参数 创建时间, 文本型, 参考 可空, 存放创建时间的变量
.参数 最后修改时间, 文本型, 参考 可空, 存放修改时间的变量
.参数 最后访问时间, 文本型, 参考 可空, 存放访问时间的变量



.子程序 文件_置时间, 逻辑型, , 修改文件的创建时间、修改时间、访问时间；成功返回真，失败返回假
.参数 文件名, 文本型, , 
.参数 创建时间, 文本型, 可空, 时间格式为：2009-11-15 15:15:15
.参数 最后修改时间, 文本型, 可空, 时间格式为：2009-11-15 15:15:15
.参数 最后访问时间, 文本型, 可空, 时间格式为：2009-11-15 15:15:15



.子程序 网页_取页面地址, 文本型, , 返回指定网址的页面地址
.参数 网址, 文本型, , 



.子程序 进程_暂停, 空白型, , 将指定进程暂停(无返回值)
.参数 进程ID, 整数型, , 欲被暂停进程的进程ID
.参数 状态, 逻辑型, 可空, 可空为假:恢复进程   真:暂停进程



.子程序 线程_启动, 整数型, , 成功返回线程句柄，失败返回0
.参数 要启动的子程序, 子程序指针, , 
.参数 要传去子程序的参数, 整数型, 可空, 往子程序里面传递一个整数型的参数
.参数 线程ID, 整数型, 参考 可空, 请提供一个整数型的变量，用于存放新创建的线程ID。



.子程序 窗口_取任务栏句柄, 整数型, , 取任务栏句柄


.子程序 窗口_取桌面句柄, 整数型, , 返回一个桌面的句柄


.子程序 窗口_圆角化, 空白型, , 把窗口的四个直角设置成圆角
.参数 窗口句柄, 整数型, , 要设置圆角的窗口
.参数 圆角椭圆的宽, 整数型, 可空, 一般为50
.参数 圆角椭圆的高, 整数型, 可空, 一般为50



.子程序 鼠标_显示隐藏, 空白型, , 设置鼠标指针的可视性,只能在自身窗口隐藏鼠标
.参数 类型, 逻辑型, , 真 = 隐藏；假 = 显示；



.子程序 鼠标_左右键交换, 空白型, , 鼠标左右键交换
.参数 是否交换, 逻辑型, , 真=左右键交换；假=恢复



.子程序 鼠标_取双击间隔时间, 整数型, , 取鼠标双击间隔时间


.子程序 鼠标_取位置, 精易_坐标, , 取鼠标在屏幕中的坐标位置；


.子程序 鼠标_移动, 空白型, , 设置鼠标坐标
.参数 窗口句柄, 整数型, 可空, 可空:相对桌面移动鼠标  句柄有效则相对窗口中坐标移动
.参数 水平坐标, 整数型, , 水平坐标
.参数 垂直坐标, 整数型, , 垂直坐标



.子程序 窗口_枚举所有子窗口, 整数型, , 枚举指定句柄下的所有子窗口句柄,返回子窗口句柄数目,失败或无子返回0
.参数 父窗口句柄, 整数型, 可空, 当为空时相当于EnumWindows
.参数 子窗口数组, 整数型, 数组, 变量储存返回值。
.参数 类名, 文本型, 可空, 要过滤的窗口类名。



.子程序 目录_枚举子目录, 整数型, , 取一个文件夹下级子目录；成功返回子目录数量，失败返回0；
.参数 父文件夹路径, 文本型, , 如：D:\Program Files；目录分割符请用\，路径不以\结尾会自动添加
.参数 子目录数组, 文本型, 参考 可空 数组, 用来装载返回的子目录路径；
.参数 是否带路径, 逻辑型, 可空, 假=不带，真=带;
.参数 是否按字母排序, 逻辑型, 可空, 默认为假；真=按字母a-z排序  假=不排序



.子程序 鼠标_捕获, 空白型, , 捕获指定窗口的鼠标
.参数 窗口句柄, 整数型, , 



.子程序 鼠标_释放, 空白型, , 释放被捕获的鼠标


.子程序 窗口_句柄取线程ID, 整数型, , 成功返回指定窗口的线程ID
.参数 窗口句柄, 整数型, , 指定窗口句柄



.子程序 窗口_按钮解除禁止, 逻辑型, , 可以激活一些被禁示的按钮；成功返回真；失败返回假；
.参数 控件句柄, 整数型, , 指定的按钮等控件句柄
.参数 类型, 逻辑型, 可空, 真=解除禁止,假=禁止



.子程序 窗口_置位置和大小, 逻辑型, , 修改窗口的位置和大小
.参数 窗口句柄, 整数型, , 欲改变位置和大小的窗口句柄
.参数 左边位置, 整数型, 可空, 窗口新的左边位置，留空不变；
.参数 顶边位置, 整数型, 可空, 窗口新的顶边位置，留空不变；
.参数 新宽度, 整数型, 可空, 窗口的新宽度，留空不变；
.参数 新高度, 整数型, 可空, 窗口的新高度，留空不变；



.子程序 窗口_置控件内容, 空白型, , 往指定的编辑框内置指定的内容。
.参数 控件句柄, 整数型, , 指定的编辑框控件句柄
.参数 欲写入的内容, 文本型, , 欲写入目标编辑框的文本



.子程序 窗口_置控件状态, 逻辑型, , 隐藏或显示控件；成功返回真；失败返回假
.参数 窗口句柄, 整数型, , 欲操作的控件句柄
.参数 显示隐藏, 逻辑型, , 真 = 显示；假 = 隐藏



.子程序 窗口_置控件焦点, 逻辑型, , 该函数对指定的窗口设置键盘焦点。 成功返回真，失败返回假；
.参数 控件句柄, 整数型, , 目标控件句柄



.子程序 鼠标_取窗口坐标, 精易_坐标, , 取回鼠标当前在某个窗口上的坐标
.参数 窗口句柄, 整数型, 可空, 如果提供窗口句柄，将返回鼠标在该窗口上的坐标；否则将取出屏幕中的坐标；



.子程序 鼠标_改指针, 空白型, , 只能改自身程序的鼠标指针；
.参数 参_窗口句柄, 整数型, , 要改鼠标的窗口句柄
.参数 参_光标路径, 文本型, 可空, 鼠标文件名路径；支持动态鼠标；
.参数 参_光标指针, 整数型, 可空, #鼠标指针_



.子程序 系统_取网络连接信息, 逻辑型, , 判断网络是否已连接上；成功返回真，失败返回假；
.参数 连接名称, 文本型, 参考 可空, 用于装载连接名称的变量
.参数 连接信息, 文本型, 参考 可空, 用于装载连接信息的变量



.子程序 线程_销毁, 逻辑型, , 强制终止正在运行的线程,成功返回真,失败返回假.
.参数 线程句柄, 整数型, , 创建线程返回的句柄



.子程序 程序_执行文本子程序, 文本型, , 执行子程序参数为文本的；并返回文本；
.参数 欲执行的子程序, 子程序指针, , 
.参数 参数一, 文本型, 可空, 
.参数 参数二, 文本型, 可空, 
.参数 参数三, 整数型, 可空, 



.子程序 程序_执行整数子程序, 整数型, , 执行子程序参数为整数的；并返回整数；
.参数 子程序, 子程序指针, , 
.参数 参数一, 整数型, 可空, 
.参数 参数二, 整数型, 可空, 
.参数 参数三, 整数型, 可空, 



.子程序 窗口_屏蔽编辑框右键, 空白型, , 注：只能屏蔽自身程序的编辑框；外部无效；
.参数 编辑框句柄, 整数型, , 编辑框句柄
.参数 菜单回调子程序, 子程序指针, 可空, 留空为不弹菜单；



.子程序 窗口_取IE浏览框句柄, 整数型, , 取IE浏览器中某个浏览框的句柄
.参数 IEFrame句柄, 整数型, , IE浏览器中,类名为“IEFrame”的窗口句柄



.子程序 窗口_屏蔽浏览器右键, 空白型, , 注：只能屏蔽自身程序的浏览器；外部无效；请把该命令放在浏览器"已就绪"事件下；
.参数 浏览器句柄, 整数型, , 浏览器句柄
.参数 菜单回调子程序, 子程序指针, 可空, 留空为不弹菜单；



.子程序 窗口_取坐标处颜色, 整数型, , 返回指定窗口指定坐标处颜色值；十进制
.参数 窗口句柄, 整数型, 可空, 留空则取屏幕句柄；
.参数 横坐标, 整数型, 可空, 留空则取鼠标处所在横坐标；
.参数 纵坐标, 整数型, 可空, 留空则取鼠标处所在纵坐标；



.子程序 运算_颜色转换, 文本型, , 将10进制的颜色值转到16进制的颜色值；   还原调用 网页_取十进制颜色值
.参数 待转换颜色值, 整数型, , 



.子程序 窗口_取坐标, 精易_坐标, , 取鼠标在指定窗口上的坐标；
.参数 窗口句柄, 整数型, , 目标窗口句柄



.子程序 窗口_激活, 整数型, , 若函数调用成功，则返回原先活动窗口的句柄。若函数调用失败，则返回值为NULL   。
.参数 窗口句柄, 整数型, 可空, 欲激活窗口的句柄



.子程序 文件_枚举, 整数型, , 枚举某个目录下的指定类型文件；成功返回文件数量；
.参数 欲寻找的目录, 文本型, , 文件目录
.参数 欲寻找的文件名, 文本型, , 如果寻找全部文件可以填入*.*，或*.txt只找txt文件
.参数 文件数组, 文本型, 参考 可空 数组, 用于装载文件数组的变量；把寻找到的文件都放在这个数组里，并返回；
.参数 是否带路径, 逻辑型, 可空, 默认为假； 真=带目录路径，如C:\012.txt； 假=不带，如 012.txt；
.参数 是否按字母排序, 逻辑型, 可空, 默认为假；真=按字母a-z排序  假=不排序
.参数 是否遍历子目录, 逻辑型, 可空, 留空默认为假；为真时文件数组不主动清空



.子程序 外部列表框_鼠标坐标取项目索引, 整数型, , 鼠标坐标位置的项目索引,一般放在列表框 鼠标位置被移动 事件里,成功返回列表框的项目索引，失败返回-1
.参数 列表框窗口句柄, 整数型, , 



.子程序 进程_取启动参数, 文本型, , 取当前进程的命令行


.子程序 进程_取模块句柄, 整数型, , 获取指定模块名的句柄
.参数 模块名, 文本型, 可空, 



.子程序 程序_重启, 空白型, , 重启当前程序
.参数 窗口显示方式, 整数型, 可空, 可空：默认为正常。说明：重启后，窗口的显示方式。1、#隐藏窗口； 2、#普通激活； 3、#最小化激活； 4、#最大化激活； 5、#普通不激活； 6、#最小化不激活
.参数 重启延时, 整数型, 可空, 可空。默认为1秒，最快。



.子程序 程序_是否关闭, 逻辑型, , 弹出一个信息框，返回操作信息框的结果


.子程序 文件_下载, 空白型, , 用windows自带的下载方式来下载文件；
.参数 网络文件地址, 文本型, , 



.子程序 窗口_取句柄, 整数型, , 成功返回控件的句柄，失败返回0
.参数 父窗口句柄, 整数型, 可空, 如果是取顶级的窗口句柄请留空
.参数 子窗口句柄, 整数型, 可空, 如果是取顶级的窗口句柄请留空
.参数 窗口类名, 文本型, 可空, 窗口的类名
.参数 窗口标题, 文本型, 可空, 窗口的标题



.子程序 窗口_句柄取进程名, 文本型, , 用指定的窗口句柄取回对应的进程名；成功返回进程名,失败返回空文本；
.参数 窗口句柄, 整数型, , 要取进程名的窗口句柄；



.子程序 进程_名取句柄, 整数型, , 通过进程名取对应的窗口句柄；成功返回窗口句柄，失败返回0，返回-1表示找到进程。
.参数 进程名, 文本型, , 要取窗口句柄的进程名；



.子程序 菜单_取标题, 文本型, , 成功返回菜单标题；失败返回空文本；
.参数 菜单句柄, 整数型, , 菜单句柄
.参数 菜单索引, 整数型, , 索引从0开始；



.子程序 菜单_取子句柄, 整数型, , 成功返回子菜单句柄，失败返回0；
.参数 父菜单句柄, 整数型, , 菜单句柄
.参数 父菜单索引, 整数型, , 索引从0开始；



.子程序 菜单_取句柄, 整数型, , 成功返回菜单句柄，失败返回0；
.参数 窗口句柄, 整数型, , 要取菜单的窗口句柄；



.子程序 菜单_删除, 逻辑型, , 成功返回真，失败返回假；
.参数 菜单句柄, 整数型, , 同级的菜单句柄；
.参数 菜单索引, 整数型, , 索引从0开始；



.子程序 菜单_取数量, 整数型, , 成功返回菜单数量，失败返回0；
.参数 菜单句柄, 整数型, , 要取数量的菜单句柄；



.子程序 菜单_重画, 逻辑型, , 为指定的窗口重画菜单,成功返回真，失败返回假；
.参数 窗口句柄, 整数型, , 窗口句柄



.子程序 菜单_修改标题, 逻辑型, , 成功返回真，失败返回假；只能改子菜单标题；
.参数 菜单句柄, 整数型, , 要修改标题的菜单句柄；
.参数 菜单新标题, 文本型, , 菜单新标题
.参数 菜单索引, 整数型, , 索引从0开始；



.子程序 菜单_取ID, 整数型, , 
.参数 菜单句柄, 整数型, , 
.参数 菜单索引, 整数型, , 



.子程序 网页_取快捷方式地址, 文本型, , 取网页快捷方式的地址；
.参数 文件路径, 文本型, , 



.子程序 菜单_清除, 逻辑型, , 成功返回真，失败返回假；
.参数 菜单句柄, 整数型, , 



.子程序 目录_清空, 空白型, , 删除指定目录下所有文件，子目录或子目录下的文件不会被删除；
.参数 要删除文件的目录, 文本型, , 如：删除D:\Program Files(也就是Program Files)目录下的全部文件，目录不以\结尾会自动添加
.参数 文件类型, 文本型, 可空, 默认为清空所有文件；或者清空指定格式(*.txt或*.exe)等等；



.子程序 网页_保存, 空白型, , 保存网页
.参数 浏览器句柄, 整数型, , 



.子程序 网页_查看网页属性, 空白型, , 查看网页属性
.参数 浏览器句柄, 整数型, , 



.子程序 网页_打印, 空白型, , 打印
.参数 浏览器句柄, 整数型, , 



.子程序 网页_打印预览, 空白型, , 打印预览
.参数 浏览器句柄, 整数型, , 



.子程序 网页_全选, 空白型, , 全选
.参数 浏览器句柄, 整数型, , 



.子程序 网页_设置网页字体, 空白型, , 设置网页字体
.参数 浏览器句柄, 整数型, , 



.子程序 网页_保存html文档, 空白型, , 保存html文档
.参数 浏览器句柄, 整数型, , 



.子程序 窗口_渐隐渐现, 空白型, , 让你的窗口渐隐或渐现；
.参数 窗口句柄, 整数型, , 要设置渐隐渐现的窗口句柄；
.参数 操作类型, 整数型, 可空, 可空，默认为渐隐；0=渐隐，1=渐现；
.参数 渐隐渐现速度, 整数型, 可空, 可空，默认为3；1-10,越小超快；
.参数 渐隐后操作, 整数型, 可空, 可空，默认为0，结束进程；1=关闭窗口，2=隐藏窗口



.子程序 菜单_点击, 空白型, , 后台点击指定窗口上的指定菜单；
.参数 窗口句柄, 整数型, , 要点击菜单的窗口句柄；
.参数 菜单句柄, 整数型, , 要点击的菜单句柄；
.参数 菜单索引, 整数型, , 菜单索引从0开始；



.子程序 菜单_点击按标题, 空白型, , 如果有的菜单点击不了,请将参数4设置为真试试；
.参数 窗口句柄, 整数型, , 要点击菜单的窗口；
.参数 菜单标题, 文本型, , 要点击的菜单标题；
.参数 模糊点击, 逻辑型, 可空, 可空，默认为假，精确点击；真=模糊点击；
.参数 备用参数, 逻辑型, 可空, 如果有的菜单点击不了请将些参数设置为真试试；



.子程序 菜单_添加, 逻辑型, , 成功返回真，失败返回假；
.参数 菜单句柄, 整数型, , 同级的菜单句柄；
.参数 菜单标题, 文本型, 可空, 如果 菜单类型 为4时，此参数留空；
.参数 菜单类型, 整数型, 可空, 0=普通；1=禁止；2=打勾；3=分支菜单；4=菜单分隔条；
.参数 弹出式菜单句柄, 整数型, 参考 可空, 如果  菜单类型 为3时，引参数用来接收弹出式菜单句柄的；
.参数 菜单数值, 整数型, 可空, 用于辩认菜单的数值，跟列表框的数值一样；



.子程序 菜单_枚举, 整数型, , 成功返回菜单的数量和标题数组；失败返回0；
.参数 窗口句柄, 整数型, , 要枚举菜单标题的窗口句柄；
.参数 菜单标题数组, 文本型, 参考 可空 数组, 用于存放菜单标题的文本数组；
.参数 菜单ID数组, 整数型, 参考 可空 数组, 用于存放菜单ID的整数数组；



.子程序 网页_开始屏蔽信息框, 逻辑型, , 屏蔽掉电脑上把有页页信息框，成功开始屏蔽返回真，失败返回假；


.子程序 网页_停止屏蔽信息框, 空白型, , 停止屏蔽掉电脑上把有页页信息框


.子程序 网页_自动点击网页信息框, 空白型, , 自动点击网页上弹出的消息框
.参数 窗口句柄, 整数型, , 程序本身的窗口句柄,直接用 取窗口句柄() 命令即可
.参数 网页信息框的标题, 文本型, 可空, 可空，网页信息框的标题,默认为【Microsoft Internet Explorer】
.参数 按钮的标题, 文本型, 可空, 可空，消息框上要点击的按钮标题,默认为【确定】
.参数 停止, 逻辑型, 可空, 可空，如果将此参数设置为真，将停止自动点击信息框
.参数 监控间隔, 整数型, 可空, 可空，默认为300毫秒。



.子程序 文本_取随机汉字, 文本型, , 取常用的随机汉字
.参数 个数, 整数型, , 要取出多少个汉字！
.参数 汉字或全拼, 整数型, 可空, 0为汉字，否则为全拼音！



.子程序 系统_取CPU型号, 文本型, , 获取CPU型号


.子程序 系统_取硬盘特征字, 整数型, , 获取系统硬盘特征字
.参数 iDrive, 整数型, 可空, 
.参数 硬盘序列号, 文本型, 参考 可空, 
.参数 硬盘模型号, 文本型, 参考 可空, 



.子程序 目录_设置系统属性, 逻辑型, , 成功返回真，失败返回假； 给一个文件夹正确的属性，成为一个系统文件夹
.参数 目录名, 文本型, , 



.子程序 目录_取消系统属性, 逻辑型, , 成功返回真，失败返回假；
.参数 目录名, 文本型, , 



.子程序 目录_检查系统属性, 逻辑型, , 有系统属性返回真，没有返回假；
.参数 目录名, 文本型, , 



.子程序 系统_显示关机对话框, 空白型, , 调用系统的关机对话框
.参数 WIN系列系统, 逻辑型, 可空, 是否WIN7以上的系统类型



.子程序 系统_切换用户, 空白型, , 切换系统用户


.子程序 程序_是否被调试, 逻辑型, , 判断自己的软件是否被调试；返回真，正在被调试，返回假，没有被调试；


.子程序 系统_进入待机状态, 空白型, , 在计算机没用的时候，可以让进入待机状态；


.子程序 文本_取随机字符, 文本型, , 取随机可见字符,只取能显示的字符
.参数 要取的字符数, 整数型, , 要取字符个数
.参数 获取模式, 整数型, 可空, 获取模式, 1=数字, 2=小写字母, 4=大写字母, 8=特殊字符, 需要多个组合用位或或起来, 默认为1, 只返回数字



.子程序 剪辑板_取图片, 字节集, , 获取系统剪辑板中的图片
.参数 窗口句柄, 整数型, , 



.子程序 菜单_枚举子级菜单, 整数型, , 枚举子级菜单标题，成功返回子菜单数量，失败返回0；
.参数 窗口句柄, 整数型, , 
.参数 父菜单标题, 文本型, , 
.参数 子菜单标题数组, 文本型, 可空 数组, 用于装载子菜单标题的数组变量；



.子程序 文本_替换, 文本型, , 批量替换文本；
.参数 原文本, 文本型, , 
.参数 替换进行的次数, 整数型, 可空, 可空；参数值指定对子文本进行替换的次数。如果省略，默认进行所有可能的替换。
.参数 替换的起始位置, 整数型, 可空, 可空；参数值指定被替换子文本的起始搜索位置。如果省略，默认从 1 开始
.参数 是否区分大小写, 逻辑型, 可空, 可空； 初始值为“假”不区分大小写；为真区分大小写。
.参数 欲被替换的子文本1, 文本型, , 
.参数 用作替换的子文本1, 文本型, , 
.参数 欲被替换的子文本2, 文本型, 可空, 
.参数 用作替换的子文本2, 文本型, 可空, 
.参数 欲被替换的子文本3, 文本型, 可空, 
.参数 用作替换的子文本3, 文本型, 可空, 
.参数 欲被替换的子文本4, 文本型, 可空, 
.参数 用作替换的子文本4, 文本型, 可空, 
.参数 欲被替换的子文本5, 文本型, 可空, 
.参数 用作替换的子文本5, 文本型, 可空, 



.子程序 外部单选框_取状态, 逻辑型, , 判断目标单选框是否选中，选中返回真，没选中返回假；
.参数 窗口句柄, 整数型, , 目标单选框的句柄



.子程序 外部选择框_取状态, 逻辑型, , 判断目标选择框是否选中，选中返回真，没选中返回假；
.参数 窗口句柄, 整数型, , 目标选择框的句柄



.子程序 系统_开启屏保, 逻辑型, , 开启系统屏幕保护
.参数 延时多少秒开始, 整数型, , 延时几秒后开始屏保



.子程序 外部列表框_取鼠标处项目索引, 整数型, , 请把些命令放在“_列表框_鼠标位置被移动”事件下
.参数 列表框句柄, 整数型, , 
.参数 横向位置, 整数型, , 把“_列表框1_鼠标位置被移动”下的“横向位置”的参数放在这里
.参数 纵向位置, 整数型, , 把“_列表框1_鼠标位置被移动”下的“纵向位置”的参数放在这里



.子程序 外部编辑框_取密码框文本, 文本型, , 
.参数 编辑框句柄, 整数型, , 



.子程序 剪辑板_置文件, 逻辑型, , 将指定文件复制到剪贴板，成功返回真，失败返回假。
.参数 文件数组, 文本型, 数组, 欲复制到剪贴板的文件数组路径;
.参数 状态, 逻辑型, 可空, 默认为假。真=对文件执行了剪切操作；假=对文件执行了复制操作



.子程序 进程通信_接收端_初始化, 空白型, , 监听前必需调用此子程序，只需使用一次，停止监听前不能再使用此子程序，否则会出错。
.参数 参数_窗口句柄, 整数型, , 当前窗口句柄，可用 取窗口句柄() 得到。



.子程序 进程通信_接收端_开始监听, 逻辑型, , 成功返回真，失败返回假。
.参数 参数_标志文本, 文本型, , 可以为任意文本(不能为空文本)，但是不要和系统中已有的冲突。设置不同的标志文本，可绑定不同的子程序。
.参数 参数_回调函数, 子程序指针, 可空, 接收到信息后要触发的子程序，不可多个标志文本绑定同个子程序，不需要可不填。



.子程序 进程通信_接收端_关闭监听, 空白型, , 关闭某监听，要恢复请直接开始(不用重新初始化)。
.参数 参数_标志文本, 文本型, , 



.子程序 进程通信_接收端_停止监听, 空白型, , 关闭所有监听，要恢复请重新初始化。


.子程序 进程通信_接收端_取出数据, 字节集, , 回调函数或其它子程序可用此子程序取出接收到的数据。
.参数 参数_标识文本, 文本型, , 接收端监听时设置的文本。



.子程序 进程通信_接收端_清除数据, 空白型, , 清除某监听得到的数据(其它数据不变)，释放该数据所占的内存。
.参数 参数_标志文本, 文本型, , 



.子程序 进程通信_接收端_清空数据, 空白型, , 清空所有监听得到的所有数据，释放内存。


.子程序 进程通信_发送端_发送数据, 逻辑型, , 成功返回真，失败返回假。
.参数 参数_窗口句柄, 整数型, , 接收端的窗口句柄。
.参数 参数_标志文本, 文本型, , 接收端监听时设置的文本。
.参数 参数_欲发送的数据, 字节集, , 要发送的数据。



.子程序 外部选择列表框_取项目文本, 文本型, , 取选择列表框指定项的项目文本
.参数 选择列表框句柄, 整数型, , 选择列表框句柄
.参数 项目索引, 整数型, , 选择列表框索引,从1开始



.子程序 外部选择列表框_选中, 逻辑型, , 成功返回真,失败返回假
.参数 选择列表框句柄, 整数型, , 选择列表框句柄
.参数 选择列表框索引, 整数型, , 选择列表框索引,从1开始



.子程序 外部选择列表框_打勾, 逻辑型, , 成功返回真,失败返回假
.参数 选择列表框句柄, 整数型, , 选择列表框句柄
.参数 选择列表框索引, 整数型, , 选择列表框索引,从1开始



.子程序 外部选择列表框_取项目数, 整数型, , 取选择列表框总项目数
.参数 选择列表框句柄, 整数型, , 选择列表框句柄



.子程序 外部选择列表框_取项目数值, 整数型, , 取得指定项目数值
.参数 选择列表框句柄, 整数型, , 选择列表框句柄
.参数 项目索引, 整数型, , 选择列表框索引,从1开始



.子程序 外部选择列表框_清空, 空白型, , 清空选择列表框
.参数 选择列表框句柄, 整数型, , 选择列表框句柄



.子程序 外部选择列表框_置项目数值, 空白型, , 置指定项目数值
.参数 选择列表框句柄, 整数型, , 选择列表框句柄
.参数 项目索引, 整数型, , 选择列表框索引,从1开始
.参数 项目数值, 整数型, , 要置入的项目数值



.子程序 外部选择列表框_加入项目, 空白型, , 添加新项目
.参数 选择列表框句柄, 整数型, , 选择列表框句柄
.参数 项目文本, 文本型, , 要添加的项目文本



.子程序 外部选择列表框_插入项目, 空白型, , 插入新项目
.参数 选择列表框句柄, 整数型, , 选择列表框句柄
.参数 项目索引, 整数型, , 选择列表框索引,从1开始
.参数 项目文本, 文本型, , 要插入的项目文本



.子程序 进程_关闭, 逻辑型, , 关闭已经打开的操作句柄
.参数 进程句柄, 整数型, , 进程句柄,线程句柄



.子程序 线程_取自线程句柄, 整数型, , GetCurrentThread,获取当前线程的一个伪句柄


.子程序 线程_创建许可证, 线程许可证, , 创建并返回一个进入许可证数值，此许可证值用作进入程序中的指定许可代码区，以避免多线程冲突


.子程序 线程_删除许可证, 空白型, , 删除由"创建进入许可证"命令所创建返回的进入许可证(该命令会在本类被销毁时自动被调用)
.参数 进入许可证, 线程许可证, 可空, 留空则删除所有许可证



.子程序 线程_进入许可区, 空白型, , 根据已经创建的许可证进入指定许可代码区，在此线程未退出之前，其它线程如要通过同一个进入许可证进入该许可代码区则必须先等待此线程退出许可代码区，从而保证了指定许可代码区在任何时候都只能有一条线程进入并执行
.参数 进入许可证, 线程许可证, , 



.子程序 线程_退出许可区, 空白型, , 指示当前线程将退出许可代码区，并允许其它使用同一进入许可证的线程进入此许可代码区
.参数 进入许可证, 线程许可证, , 



.子程序 线程_等待, 逻辑型, , 等待一个线程，返回真表示线程运行结束，返回假表示已超时。
.参数 线程句柄, 整数型, , 
.参数 超时, 整数型, 可空, 留空，则无限等待



.子程序 线程_挂起, 整数型, , 将指定线程的执行挂起,注意，同一个线程可以被挂起多次，如果挂起多次，就要恢复多次。
.参数 线程句柄, 整数型, , 要等待的线程句柄,用 线程_启动() 返回的;



.子程序 线程_恢复, 整数型, , 恢复执行挂起的一个线程。
.参数 线程句柄, 整数型, , 要等待的线程句柄,用 线程_启动() 返回的;



.子程序 窗口_更换鼠标指针, 空白型, , 修改窗口的鼠标指针
.参数 参_窗口句柄, 整数型, , 窗口句柄
.参数 参_光标路径, 文本型, 可空, 后缀名为:ani\cur的鼠标指针文件路径
.参数 参_光标指针, 整数型, 可空, #鼠标指针_



.子程序 进程_打开, 整数型, , 通过目标窗口句柄取进程句柄，成功就返回进程句柄
.参数 对象句柄, 整数型, , 对象的窗口句柄



.子程序 窗口_写字, 空白型, , 在指定的窗口上写字;
.参数 窗口句柄, 整数型, 可空, 可空:默认为"当前窗口"
.参数 内容, 文本型, 可空, 可空:默认为"精易论坛 bbs.125.la"
.参数 字体, 文本型, 可空, 可空:默认为"宋体"
.参数 字体大小, 整数型, 可空, 可空:默认为"28"
.参数 字体颜色, 整数型, 可空, 可空:默认为"红色"
.参数 横坐标, 整数型, 可空, 可空:默认为"0"
.参数 纵坐标, 整数型, 可空, 可空:默认为"0"



.子程序 窗口_是否有子窗口, 逻辑型, , 判断某个窗口下是否有子级窗口控件;
.参数 窗口句柄, 整数型, , 目标窗口句柄



.子程序 批量_单选框_保存配置, 整数型, , 保存窗口上所有选择框的选中状态!与"批量_单选框_读取配置()"命令一起用的!  返回被操作的单选框数量!
.参数 组件的父窗口, 窗口, , 直接填写顶级窗口就行了,如:_启动窗口
.参数 配置文件名, 文本型, 可空, 可空:默认保存在根目录\data目录下,名为setsoft.ini
.参数 不保存的控件名称, 文本型, 可空, 不需要自动保存数据的控件名称,以|分开;



.子程序 批量_单选框_读取配置, 整数型, , 与"批量_单选框_保存配置()"命令一起用的!  返回被操作的单选框数量!
.参数 组件的父窗口, 窗口, , 直接填写顶级窗口就行了,如:_启动窗口
.参数 配置文件名, 文本型, 可空, 可空:默认保存在根目录\data目录下,名为setsoft.ini



.子程序 批量_选择框_保存配置, 整数型, , 保存窗口上所有选择框的选中状态!与"批量_选择框_读取配置()"命令一起用的!  返回被操作的选择框数量!
.参数 组件的父窗口, 窗口, , 直接填写顶级窗口就行了,如:_启动窗口
.参数 配置文件名, 文本型, 可空, 可空:默认保存在根目录\data目录下,名为setsoft.ini
.参数 不保存的控件名称, 文本型, 可空, 不需要自动保存数据的控件名称,以|分开;



.子程序 批量_选择框_读取配置, 整数型, , 与"批量_选择框_保存配置()"命令一起用的!  返回被操作的选择框数量!
.参数 组件的父窗口, 窗口, , 直接填写顶级窗口就行了,如:_启动窗口
.参数 配置文件名, 文本型, 可空, 可空:默认保存在根目录\data目录下,名为setsoft.ini



.子程序 批量_编辑框_保存配置, 整数型, , 保存窗口上所有编辑框的内容!与"批量_编辑框_读取配置()"命令一起用的!  返回被操作的编辑框数量!
.参数 组件的父窗口, 窗口, , 直接填写顶级窗口就行了,如:_启动窗口
.参数 配置文件名, 文本型, 可空, 可空:默认保存在根目录\data目录下,名为setsoft.ini
.参数 不保存的控件名称, 文本型, 可空, 不需要自动保存数据的控件名称,以|分开;



.子程序 批量_编辑框_读取配置, 整数型, , 与"批量_编辑框_保存配置()"命令一起用的!  返回被操作的编辑框数量!
.参数 组件的父窗口, 窗口, , 直接填写顶级窗口就行了,如:_启动窗口
.参数 配置文件名, 文本型, 可空, 可空:默认保存在根目录\data目录下,名为setsoft.ini



.子程序 批量_组合框_保存配置, 整数型, , 保存窗口上所有组合框的内容!与"批量_组合框_读取配置()"命令一起用的!  返回被操作的组合框数量!
.参数 组件的父窗口, 窗口, , 直接填写顶级窗口就行了,如:_启动窗口
.参数 配置文件名, 文本型, 可空, 可空:默认保存在根目录\data目录下,名为setsoft.ini
.参数 不保存的控件名称, 文本型, 可空, 不需要自动保存数据的控件名称,以|分开;



.子程序 批量_组合框_读取配置, 整数型, , 与"批量_组合框_保存配置()"命令一起用的!  返回被操作的编辑框数量!
.参数 组件的父窗口, 窗口, , 直接填写顶级窗口就行了,如:_启动窗口
.参数 配置文件名, 文本型, 可空, 可空:默认保存在根目录\data目录下,名为setsoft.ini



.子程序 OCX_注册, 空白型, , 注册OCX组件
.参数 OCX文件路径, 文本型, , 



.子程序 OCX_卸载, 空白型, , 卸载OCX组件
.参数 OCX文件路径, 文本型, , 



.子程序 线程_打开, 整数型, , 成功返回线程句柄，失败返回0
.参数 线程ID, 整数型, 可空, 目标线程ID



.子程序 窗口_句柄取线程句柄, 整数型, , 成功返回线程句柄,失败返回0
.参数 窗口句柄, 整数型, 可空, 目标窗口句柄



.子程序 窗口_控件加边框, 空白型, , 在控件的边上加上一层边框;
.参数 控件句柄, 整数型, 可空, 要加边框的控件句柄;
.参数 鼠标被放开, 逻辑型, 可空, 在图片框鼠标被放开的时候把这个参数设置为真,控件句柄留空;



.子程序 批量_日期框_保存配置, 整数型, , 保存窗口上所有日期框的内容!与"批量_日期框_读取配置()"命令一起用的!  返回被操作的日期框数量!
.参数 组件的父窗口, 窗口, , 直接填写顶级窗口就行了,如:_启动窗口
.参数 配置文件名, 文本型, 可空, 可空:默认保存在根目录\data目录下,名为setsoft.ini
.参数 不保存的控件名称, 文本型, 可空, 不需要自动保存数据的控件名称,以|分开;



.子程序 批量_日期框_读取配置, 整数型, , 与"批量_日期框_保存配置()"命令一起用的!  返回被操作的编辑框数量!
.参数 组件的父窗口, 窗口, , 直接填写顶级窗口就行了,如:_启动窗口
.参数 配置文件名, 文本型, 可空, 可空:默认保存在根目录\data目录下,名为setsoft.ini



.子程序 目录_更新, 空白型, , 把某个目录下的所有文件复制到另一个目录里
.参数 源目录, 文本型, , 源目录，目录不以\结尾会自动添加
.参数 目标目录, 文本型, 可空, 目标目录，目录不以\结尾会自动添加
.参数 是否覆盖文件, 整数型, 可空, 可空。默认为直接覆盖。0=覆盖，非0不覆盖



.子程序 窗口_取控件ID, 整数型, , 根据窗口句柄取出窗口控件的ID,顶级窗口将返回0;
.参数 子窗口句柄, 整数型, , 



.子程序 窗口_控件ID取句柄, 整数型, , 根据控件ID取出窗口句柄;
.参数 父句柄, 整数型, , 上一级的窗口句柄;
.参数 欲取句柄的控件ID, 整数型, , 控件ID用 "窗口_取控件ID()"命令取回;



.子程序 窗口_屏蔽控件右键, 空白型, , 屏蔽指定窗口的鼠标右键操作
.参数 窗口句柄, 整数型, , 指定窗口句柄



.子程序 窗口_置透明颜色, 空白型, , 透明窗口指定的底色
.参数 窗口句柄, 整数型, , 目标窗口句柄
.参数 透明的颜色, 整数型, , 



.子程序 系统_取磁盘信息, 逻辑型, , 获取系统磁盘信息
.参数 磁盘ID, 整数型, 可空, 留空为 磁盘0
.参数 磁盘信息, 精易_磁盘信息, 参考, 



.子程序 系统_取网络连接状态, 逻辑型, , 判断电脑是否连接到Internet,连接返回真,否则返回假;
.参数 连接名称, 文本型, , 



.子程序 文本_递减, 文本型, , 把文本递减1  编辑框1.内容 ＝ 文本_递减 (编辑框1.内容)
.参数 要递减的文本, 文本型, 参考, 



.子程序 文本_递增, 文本型, , 把文本递增1  编辑框1.内容 ＝ 文本_递增 (编辑框1.内容)
.参数 要递增的文本, 文本型, 参考, 



.子程序 进程_取程序路径, 文本型, , 取指定进程的程序路径，成功返回程序路径，失败或进程不存在返回空文本
.参数 进程ID, 整数型, , 



.子程序 进程_名取ID, 整数型, , 通过进程名取进程ID；失败返回0 
.参数 进程名, 文本型, , 取要进程ID的进程名
.参数 是否区分大小写, 逻辑型, 可空, 默认为不区分,真=区分



.子程序 进程_取自进程ID, 整数型, , 取自身的进程ID，成功返回进程ID；失败返回0


.子程序 线程_取自线程ID, 整数型, , GetCurrentThreadId,获取当前线程一个唯一的线程标识符


.子程序 线程_初始化COM库, 空白型, , 有时执行线程的时候，会自动关闭，此时，可以在多线程的程序里创建COM对象前先初始化，一个线程只能调用一次


.子程序 线程_取消COM库, 空白型, , 取消COM库的初始化，如果你在线程头部加入了 线程_初始化COM库 请在尾部加入此命令


.子程序 进程_结束1, 逻辑型, , 结束指定进程。成功返回真，失败返回假。本命令为初级命令
.参数 进程名, 文本型, 可空, 欲结束的进程名,如果为空将结束自己
.参数 是否区分大小写, 逻辑型, 可空, 默认为不区分,真=区分



.子程序 线程_DLL注入, 逻辑型, , 线程注入DLL到目标进程
.参数 目标进程ID, 整数型, , 要注入的进程ID
.参数 要注入的DLL文件名, 文本型, , DLL名称



.子程序 线程_DLL卸载, 逻辑型, , 卸载指定进程中指定DLL
.参数 目标进程ID, 整数型, , 
.参数 要注入的卸载文件名, 文本型, , 



.子程序 进程_ID取进程名, 文本型, , 通过进程ID取得该进程执行文件名，也就是进程名;
.参数 参数_进程ID, 整数型, , 该进程的ID;



.子程序 程序_更新, 文本型, , 返回要运行命令行 万能更新程序 下载和例程使用说明地址: http://bbs.125.la/thread-20780-1-1.html
.参数 万能更新程序地址, 文本型, , 万能更新程序地址
.参数 启动窗口标题, 文本型, , 更新程序的启动窗口标题
.参数 超级链接标题, 文本型, , 更新进度条下方的超级链接标题
.参数 超级链接地址, 文本型, , 更新进度条下方的超级链接地址
.参数 本地程序地址, 文本型, , 要更新的文件路径地址
.参数 网络程序地址, 文本型, , 只支持zip和exe格式的下载文件
.参数 信息框提示文本, 文本型, , 程序更新完成后的信息框提示文本,如果填入 不提示 三个汉字,将不会弹出信息框提示
.参数 是否运行程序, 逻辑型, , 更新完成是否运行程序,一般为软件的主程序才设置为真



.子程序 系统_屏蔽任务管理器1, 空白型, , 通过打开taskmgr.exe方式进行屏蔽


.子程序 系统_恢复任务管理器1, 空白型, , 关闭“系统_屏蔽任务管理器1”打开的taskmgr.exe


.子程序 程序_添加到IE工具栏, 空白型, , 在IE的工具栏上添加自己的软件快捷方式
.参数 主程序路径, 文本型, , 主程序路径
.参数 提示内容, 文本型, , 如:精易编程助手
.参数 程序图标路径, 文本型, , 在工具栏上显示的图标,格式为 ico
.参数 程序图标点燃图标路径, 文本型, , 在工具栏上显示的图标,格式为 ico



.子程序 外部超级列表框_保存数据, 逻辑型, , 如果要读入的话,直接 超级列表框.表项=读入文件(C:\001.ebb) 即可
.参数 超级列表框句柄, 整数型, , 超级列表框句柄
.参数 要保存的位置, 文本型, , 如: C:\001.ebb 即可
.参数 列表类型, 整数型, 可空, 默认为"报表列表框"  0=报表列表框 1=大图标列表框
.参数 不保存指定列的索引, 整数型, 可空, 输入不保存指定列的索引,如:我不保存第1列,直接输入0,因为索引是多0开始的



.子程序 程序_延时, 逻辑型, , 不占用cpu，窗口不卡死，不影响其它代码执行
.参数 延时间隔, 整数型, 可空, 1000毫秒 = 1秒  留空为无限等待
.参数 延时单位, 长整数型, 可空, 默认为毫秒  0=毫秒  1=秒  2=分钟  3=小时



.子程序 程序_条件判断, 逻辑型, , 
.参数 条件文本, 文本型, , 
.参数 条件内存地址, 整数型, 可空, 



.子程序 外部超级列表框_取鼠标处列坐标, 精易_坐标, , 
.参数 超级列表框句柄, 整数型, , 
.参数 超级列表框行号, 整数型, , 



.子程序 外部超级列表框_取鼠标处行列号, 空白型, , 
.参数 超级列表框句柄, 整数型, , 
.参数 超级列表框行号, 整数型, 参考, 
.参数 超级列表框列号, 整数型, 参考, 



.子程序 文本_粘贴, 空白型, , 往指定的窗口粘贴文本
.参数 窗口句柄, 整数型, 可空, 欲粘贴文本的窗口句柄
.参数 文本内容, 文本型, 可空, 欲粘贴的文本内容



.子程序 程序_等待窗口消失, 逻辑型, , 如果目标窗口不存在返回真 否则将一直等待，可以在第三个参数中设置超时返回
.参数 窗口标题, 文本型, 可空, 窗口标题
.参数 窗口类名, 文本型, 可空, 窗口类名
.参数 超时返回, 整数型, 可空, 单位为毫秒,超过此时间等待还没结果则返回假,留空则一直等待



.子程序 程序_等待句柄消失, 逻辑型, , 如果目标句柄存在返回真 否则将一直等待，可以在第二个参数中设置超时返回
.参数 窗口句柄, 整数型, , 目标窗口句柄
.参数 超时返回, 整数型, 可空, 单位为毫秒,超过此时间等待还没结果则返回假,留空则一直等待



.子程序 外部编辑框_替换内容, 空白型, , 通过句柄对指定编辑框的内容进行替换
.参数 编辑框句柄, 整数型, , 编辑框句柄
.参数 欲替换的文本, 文本型, , 欲替换的文本
.参数 替换成的文本, 文本型, , 替换成的文本
.参数 起始位置, 整数型, 可空, 留空为从 1 开始
.参数 替换的次数, 整数型, 可空, 留空为替换1次；
.参数 是否区分大小写, 逻辑型, 可空, 默认为假，不区分；



.子程序 键盘_取大小写状态, 逻辑型, , 取当前的输入状态,返回真为大写,返回假则为小写


.子程序 键盘_取小键盘状态, 逻辑型, , 取当前的输入状态,返回真为开,返回假则为关


.子程序 程序_等待控件内容改变, 逻辑型, , 等待一个控件的内容被改变，如果该控件的内容和第2个参数的文本一样，则返回真
.参数 控件句柄, 整数型, , 目标窗口句柄
.参数 控件内容, 文本型, , 控件的内容
.参数 超时返回, 整数型, 可空, 单位为毫秒,超过此时间等待还没结果则返回假,留空则一直等待



.子程序 文本区分_只取汉字, 文本型, , 在一大串网页源码中 只取出汉字
.参数 源文本, 文本型, , 要取出汉字的源文本
.参数 是否正则, 逻辑型, 可空, 可空，默认为假 不使用正则方式
.参数 是否去除空格和空行, 逻辑型, 可空, 可为空，默认为假。



.子程序 文本区分_只取字母, 文本型, , 在一大串网页源码中 只取字母
.参数 源文本, 文本型, , 要取出字母的源文本
.参数 大小写类型, 整数型, 可空, 默认为0  0=取大小写  1只取小写  2只取大写



.子程序 文本区分_只取符号, 文本型, , 在一大串网页源码中 只取符号
.参数 源文本, 文本型, , 要取出符号的源文本



.子程序 文本区分_只取数字, 文本型, , 在一大串网页源码中 只取数字
.参数 源文本, 文本型, , 要取出数字的源文本



.子程序 外部列表框_保存数据, 逻辑型, , 如果要读入的话,直接 超级列表框.表项=读入文件(C:\001.lbb) 即可
.参数 列表框句柄, 整数型, , 列表框句柄
.参数 要保存的位置, 文本型, , 如: C:\001.lbb 即可



.子程序 进程_打开1, 整数型, , 通过目标进程ID取进程句柄，成功就返回进程句柄
.参数 进程ID, 整数型, , 目标进程ID



.子程序 目录_取父路径, 文本型, , 返回指定文件或目录的上一级目录路径；路径后面包含\
.参数 文件或目录名, 文本型, , 如：C:\001\002\0.txt则返回C:\001\002\；



.子程序 系统_取桌面快捷方式, 文本型, , 取桌面快捷方式 成功返回文件路径,失败返回空文本
.参数 快捷方式全路径, 文本型, , 快捷方式全路径



.子程序 对话框_打开文件, 文本型, , 成功打开返回文件路径,失败返回空文本
.参数 窗口句柄, 整数型, , 拥有者窗口句柄,如启动窗口的句柄
.参数 初始目录, 文本型, 可空, 指定当打开对话框时所自动跳转到的目录,如果留空将跳转到当前目录
.参数 对话框标题, 文本型, 可空, 对话框的标题，可空:默认为"打开文件"
.参数 过滤器, 文本型, 可空, 可空，默认为“所有文件(*.*)|*.*”  过滤器文本由单个或多个成对的文本串组成，每对文本串的第一个描述显示形式，如：“文本文件（*.txt）”；第二个指定实际的过滤匹配符，如：“*.txt”，所有各文本串之间用“|”号隔开
.参数 修改当前目录, 逻辑型, 可空, 可以为空。默认为假，不改变当前目录。真 = 把初始目录改成当前目录。



.子程序 对话框_另存文件, 文本型, , 成功打开返回文件路径,失败返回空文本
.参数 窗口句柄, 整数型, , 拥有者窗口句柄,如启动窗口的句柄
.参数 初始目录, 文本型, 可空, 指定当打开对话框时所自动跳转到的目录,如果留空将跳转到当前目录
.参数 对话框标题, 文本型, 可空, 对话框的标题，可空:默认为"保存文件"
.参数 默认文件名, 文本型, 可空, 
.参数 过滤器, 文本型, 可空, 可空，过滤器文本由单个或多个成对的文本串组成，每对文本串的第一个描述显示形式，如：“文本文件（*.txt）”；第二个指定实际的过滤匹配符，如：“*.txt”，所有各文本串之间用“|”号隔开
.参数 初始过滤器, 整数型, 可空, 可空，默认为1，指定初始的过滤器，1为第一个过滤器
.参数 修改当前目录, 逻辑型, 可空, 可以为空。默认为假，不改变当前目录。真 = 把初始目录改成当前目录。



.子程序 对话框_打开颜色选择框, 整数型, , 打开颜色选择框,成功返回指定的颜色值,取消或失败返回-1
.参数 窗口句柄, 整数型, , 拥有者窗口句柄



.子程序 对话框_打开文件多选框, 文本型, , 打开多选文件对话框,可单个一个文件,将直接返回文件路径,如果选择多个文件,将以换行符分隔
.参数 窗口句柄, 整数型, 可空, 拥有者窗口句柄
.参数 窗口标题, 文本型, 可空, 对话框窗口标题
.参数 过滤器, 文本型, 可空, 可为空,默认即所有文件,过滤器文本由单个或多个成对的文本串组成，每对文本串的第一个描述显示形式，如：“文本文件（*.txt）”；第二个指定实际的过滤匹配符，如：“*.txt”，所有各文本串之间用“|”号隔开
.参数 初始目录, 文本型, 可空, 可以为空。如果留空将跳转到当前目录
.参数 修改当前目录, 逻辑型, 可空, 可以为空。默认为假，不改变当前目录。真 = 把初始目录改成当前目录。



.子程序 文件_创建映射对象, 整数型, , 成功返回映射对象句柄,失败返回0
.参数 映射对象名, 文本型, , 映射对象名,可随意填写
.参数 映射对象的值, 整数型, , 映射对象的值,为整数型



.子程序 文件_读取映射对象, 整数型, , 读取映射对象的值
.参数 映射对象名, 文本型, , 用【文件_创建映射对象】命令分创建时的映射对象名



.子程序 取指针地址_小数型, 整数型, , 
.参数 欲取地址的数据, 小数型, 参考, 



.子程序 取指针地址_整数型, 整数型, , 
.参数 欲取地址的数据, 整数型, 参考, 



.子程序 取指针地址_短整数型, 整数型, , 
.参数 欲取地址的数据, 短整数型, 参考, 



.子程序 取指针地址_长整数型, 整数型, , 
.参数 欲取地址的数据, 长整数型, 参考, 



.子程序 取指针地址_字节型, 整数型, , 
.参数 欲取地址的数据, 字节型, 参考, 



.子程序 取指针地址_字节集型, 整数型, , 
.参数 欲取地址的数据, 字节集, 参考, 



.子程序 取指针地址_文本型, 整数型, , 
.参数 欲取地址的数据, 文本型, 参考, 



.子程序 取指针地址_子程序指针, 整数型, , 
.参数 欲取地址的数据, 子程序指针, 参考, 



.子程序 API_取空白文本, 文本型, , 返回具有指定数目半角空格的文本。
.参数 重复次数, 整数型, , 



.子程序 API_取空白字节集, 字节集, , 返回具有特定数目 0 字节的字节集
.参数 零字节数目, 整数型, , 



.子程序 指针_到文本, 文本型, , 
.参数 文本指针, 整数型, , 



.子程序 指针_到字节集, 字节集, , 
.参数 字节集指针, 整数型, , 
.参数 数据长度, 整数型, , 



.子程序 外部编辑框_转成IE地址框, 空白型, , 把普通的编辑框转成IE地址框
.参数 编辑框句柄, 整数型, , 编辑框句柄



.子程序 菜单_添加图标, 逻辑型, , 在指定定的菜单处加入图标
.参数 子菜单索引, 整数型, , 子菜单索引
.参数 菜单句柄, 整数型, , 欲添加图标的菜单句柄
.参数 未选图标句柄, 整数型, , 未选中时的图标句柄,可以用 图标_取句柄() 命令取得 图标句柄
.参数 已选图标句柄, 整数型, , 已选中时的图标句柄,可以用 图标_取句柄() 命令取得 图标句柄



.子程序 对话框_整理收藏夹, 空白型, , 
.参数 窗口句柄, 整数型, , 直接用 取窗口句柄() 命令即可



.子程序 对话框_添加到收藏夹, 空白型, , 
.参数 窗口句柄, 整数型, , 直接用 取窗口句柄() 命令即可
.参数 网页标题, 文本型, , 
.参数 网页地址, 文本型, , 



.子程序 文件_到长文件名, 文本型, , 返回长文件名
.参数 文件名, 文本型, , 



.子程序 系统_取空闲时间, 整数型, , 返回单位为毫秒


.子程序 外部超级列表框_上移, 空白型, , 
.参数 超级列表框句柄, 整数型, , 
.参数 是否上移第1列, 逻辑型, 可空, 假如第1列是序号的话,可以不上移,设置为真将上移,默认为假,不上移



.子程序 外部超级列表框_下移, 空白型, , 
.参数 超级列表框句柄, 整数型, , 
.参数 是否下移第1列, 逻辑型, 可空, 假如第1列是序号的话,可以不下移,设置为真将下移,默认为假,不下移



.子程序 控件_圆角化, 空白型, , 把窗口的四个直角设置成圆角
.参数 控件句柄, 整数型, , 要设置圆角的窗口
.参数 圆角椭圆的宽, 整数型, , 一般为50
.参数 圆角椭圆的高, 整数型, , 一般为50



.子程序 时间_转为GMT格式, 文本型, , 将日期时间型数据转换为GMT格式 Greenwich Mean Time
.参数 待转换时间, 日期时间型, , 



.子程序 时间_取公历节日, 文本型, , 根据公历年月日,返回公历的节日,某些节日需要有年代才能确定是星期几.
.参数 公历年, 整数型, 可空, 
.参数 公历月, 整数型, 可空, 
.参数 公历日, 整数型, 可空, 



.子程序 时间_取节气文本, 文本型, , 立春,雨水,惊蛰,春分,清明,谷雨；立夏,小满,芒种,夏至,小暑,大暑；立秋,处暑,白露,秋分,寒露,霜降；立冬,小雪,大雪,冬至,小寒,大寒
.参数 节气顺序, 整数型, , 根据24个节气返回节气名称.



.子程序 时间_取美式日期, 文本型, , 转换日期时间表达为美式表达方式
.参数 日期时间, 日期时间型, , 



.子程序 时间_取农历节日, 文本型, , 取农历所对应该的节日，需要事先知道农历日期的月份，与日子，
.参数 农历月份, 整数型, , 
.参数 农历天数, 整数型, , 



.子程序 时间_取身份证比较, 逻辑型, , 对身份证号和一个日期进行比较,看两者是否一致
.参数 身份证号, 文本型, , 
.参数 比较日期, 日期时间型, , 



.子程序 时间_取中国星期几, 文本型, , 返回一个星期文本
.参数 目标时间, 日期时间型, 可空, 如果星期数不为零,本参数不处理,否则将本参数内的时间进行处理.



.子程序 时间_取身份证日期, 文本型, , 取一个身份证号中的出生日期,在本程序前对身份证是否正确进行简单判断,应该用真正的判断程序进行判断
.参数 身份证号, 文本型, , 



.子程序 时间_取身份证性别, 文本型, , 判断身份证的性别
.参数 身份证号, 文本型, , 



.子程序 时间_身份证号转换, 文本型, , 从15位转换到18位身份证号
.参数 身份证号, 文本型, , 



.子程序 时间_身份证号15到18, 文本型, , 将15位身份证转换为18位
.参数 身份证号15, 文本型, , 



.子程序 时间_到文本, 文本型, , 返回文本格式的现行时间，如：2005053107123
.参数 操作时间, 日期时间型, 可空, 可空。留空为现行时间
.参数 输出格式, 整数型, 可空, 可空。0=N年N月N日 N时N分N秒  1=年-月-日 时:分:秒  2=年/月/日 时/分/秒  3=年月日时分秒
.参数 取出类型, 整数型, 可空, 可空。留空为全部，1=只取年月日，2=取月日，3=只取时分秒，4=时分，5=分秒



.子程序 窗口_取句柄_模糊, 整数型, , 成功返回指定窗口句柄,失败返回0
.参数 窗口标题, 文本型, 可空, 标题支持模糊，如窗口的标题为【精易⌒技术交流群①】你只需要【流群①】取可
.参数 窗口类名, 文本型, 可空, 类名必须为精确的,或者不填



.子程序 外部组合框_保存数据, 逻辑型, , 如果要读入的话,直接 组合框.列表项目=读入文件(C:/001.lbb) 即可
.参数 组合框句柄, 整数型, , 组合框句柄
.参数 要保存的位置, 文本型, 可空, 可空  默认将保存在根目录下的data.zbb



.子程序 窗口_热键卸载所有, 空白型, , 卸载所有热键,本功能一般用于程序将要退出时使用,在运行中请不要使用本功能
.参数 窗口句柄, 整数型, , 目标窗口句柄



.子程序 窗口_热键注册, 逻辑型, , 注册一个全局热键；成功返回真,失败返回假
.参数 窗口句柄, 整数型, 可空, 通常为  取窗口句柄(),如果不是在启动窗口创建完毕下面注册,可以留空;比如,在按钮被单击下就可以留空;
.参数 功能键, 整数型, 可空, 1 Alt  2 Ctrl  4 Shift  8 Win 若要两个或以上的状态键按则把它们的值相加.
.参数 键代码, 整数型, , 主键,如：#F键
.参数 子程序指针, 子程序指针, , 响应热键事件的子程序指针,四个参数(窗口句柄,消息786,热键ID,参数)
.参数 热键ID, 整数型, , 标识！必须大于0，销毁时用；



.子程序 窗口_热键卸载, 逻辑型, , 成功返回真，失败返回假；
.参数 窗口句柄, 整数型, 可空, 
.参数 热键ID, 整数型, , 窗口_热键注册 时用的热键ID



.子程序 目录_改名, 逻辑型, , 重新命名一个目录名称。成功返回真，失败返回假。本命令为初级命令。
.参数 目录名, 文本型, , 目录名
.参数 新目录名, 文本型, , 新目录名



.子程序 易语言_引用易模块, 空白型, , 必须编译出来才行,因为在调试状态下,易语言不允许添加模块的
.参数 模块路径, 文本型, , 如：C:\精易模块.ec



.子程序 系统_创建桌面快捷方式, 逻辑型, , 创建桌面快捷方式 (成功返回真,失败返回假)
.参数 lnk名称, 文本型, , 如：精易编程助手
.参数 目标, 文本型, , 指向的文件全路径文件名,如 C:\001.txt，如果是目录就直接为 C:\001
.参数 参数文本, 文本型, 可空, 执行文件的参数
.参数 图标文件, 文本型, 可空, 图标文件的路径  可空:为空时用目标的第一个图标
.参数 运行方式, 整数型, 可空, 1,常规方式，3,最大化，7,最小化
.参数 备注, 文本型, 可空, 快方式的备注信息
.参数 快捷键, 文本型, 可空, 启动快捷方式的快捷键  如“Ctrl+Alt+Y”



.子程序 文本_取首拼, 文本型, , 取出给出文本的首拼;注:英文,数字,符号则直接返回.首拼一律为小写[V雪落有声V]
.参数 文本, 文本型, , 需要取出首拼的文本.可以包含数字,字母.请使用半角格式.



.子程序 系统_是否已联网, 逻辑型, , 判断你的电脑是否已成功连接互联网,已联网返回真,否则返回假


.子程序 程序_取命令行, 整数型, , 本命令可以取出在启动易程序时附加在其可执行文件名后面的所有以空格分隔的命令行文本段
.参数 命令行数组, 文本型, 数组, 存放被取回命令行文本的数组变量,本变量数组内被顺序填入在启动易程序时附加在其可执行文件名后面的以空格分隔的命令行文本段



.子程序 程序_隐藏托盘图标, 空白型, , 隐藏托盘上指定按钮,和 程序_显示托盘图标 配合使用
.参数 任务栏按钮标题, 文本型, , 



.子程序 程序_显示托盘图标, 空白型, , 显示托盘上指定按钮,和 程序_隐藏托盘图标 配合使用
.参数 任务栏按钮标题, 文本型, , 



.子程序 程序_隐藏任务栏图标, 空白型, , 隐藏任务栏上指定按钮,和 程序_显示任务栏图标 配合使用（本命令不兼容Win7或以上系统）
.参数 任务栏按钮标题, 文本型, , 



.子程序 程序_显示任务栏图标, 空白型, , 显示任务栏上指定按钮,和 程序_隐藏任务栏图标 配合使用（本命令不兼容Win7或以上系统）
.参数 任务栏按钮标题, 文本型, , 



.子程序 系统_取CPU名称, 文本型, , 获取CPU的名称


.子程序 系统_取CPU描述, 文本型, , 获取CPU的描述


.子程序 系统_取CPU制造商, 文本型, , 获取CPU制造商


.子程序 系统_取CPU时钟频率, 整数型, , 获取CPU时钟频率


.子程序 系统_取CPU数据宽度, 整数型, , 获取CPU数据宽度


.子程序 系统_取CPU一级缓存, 整数型, , 获取CPU一级缓存


.子程序 系统_取CPU二级缓存, 整数型, , 获取CPU二级缓存


.子程序 系统_取本机名, 文本型, , 取本机名,成功返回本机名，失败返回空字符串。


.子程序 系统_取本机IP, 逻辑型, , 本命令可以枚举出网卡绑定的IP地址。成功“真”，失败返回“假”。
.参数 本地IP组, 文本型, 参考 数组, 提供文本型数组，每个成员对应一个本地的IP。



.子程序 进程_取ID数组, 整数型, , 取指定进程名称的所有进程的进程ID(返回进程ID数目,没有返回0)
.参数 进程名, 文本型, , 程序进程名
.参数 进程ID数组, 整数型, 参考 数组, 返回的进程ID 数组
.参数 区分大小写, 逻辑型, 可空, 默认不区分进程名大小写



.子程序 系统_取硬盘特征字1, 整数型, , 返回0说明未取到。这个主要是补充易不能在某些系统或是硬盘上取硬盘特征字。


.子程序 网页_禁止允许一键操作, 空白型, , 一键操作所有设置（写注册项，影响全局，不仅仅是软件的自带浏览器）
.参数 禁止允许gif图片, 逻辑型, 可空, 禁止或允许 播放GIF动画图片，可以加快网页的显示速度。默认为假，允许。
.参数 禁止允许显示图片, 逻辑型, 可空, 禁止或允许 显示网页中的图片，可以加快网页的显示速度。默认为假，允许。
.参数 禁止允许背景声音, 逻辑型, 可空, 禁止或允许 播放网页背景声音，如：mid、mp3等等。默认为假，允许。
.参数 禁止允许点击声音, 逻辑型, 可空, 禁止或允许 在点击网页链接或网页跳转时,会有一个点击的声音,用此命令可以禁止或恢复它。默认为假，允许。
.参数 禁止允许播放网页视频, 逻辑型, 可空, 禁止或允许 播放网页中的视频，可以加快网页的显示速度。默认为假，允许。



.子程序 网页_禁止允许gif图片, 逻辑型, , 禁止或允许 播放GIF动画图片，可以加快网页的显示速度。默认为假，允许。（写注册项，影响全局，不仅仅是软件的自带浏览器）
.参数 禁止或允许, 逻辑型, 可空, 可空：默认为假 真=禁止 假=允许



.子程序 网页_禁止允许背景声音, 逻辑型, , 禁止或允许 播放网页背景声音，如：mid、mp3等等。默认为假，允许。（写注册项，影响全局，不仅仅是软件的自带浏览器）
.参数 禁止或允许, 逻辑型, 可空, 可空：默认为假 真=禁止 假=允许



.子程序 网页_禁止允许显示图片, 逻辑型, , 禁止或允许 显示网页中的图片，可以加快网页的显示速度。默认为假，允许。（写注册项，影响全局，不仅仅是软件的自带浏览器）
.参数 禁止或允许, 逻辑型, 可空, 可空：默认为假 真=禁止 假=允许



.子程序 网页_禁止允许点击声音, 逻辑型, , 禁止或允许 在点击网页链接或网页跳转时,会有一个点击的声音,用此命令可以禁止或恢复它。默认为假，允许。（写注册项，影响全局，不仅仅是软件的自带浏览器）
.参数 禁止或允许, 逻辑型, 可空, 可空：默认为假 真=禁止 假=允许



.子程序 字节集_寻找取左, 字节集, , 从字节集的左边按 欲寻找的字节集 开始寻找 如 字节集_取左边({105,108,121,13,10,83,101},{13,10}) 将返回 {105,108,121}
.参数 被查找的字节集, 字节集, , 被查找的字节集
.参数 欲寻找的字节集, 字节集, , 欲寻找的字节集
.参数 起始寻找位置, 整数型, 可空, 可为空，默认为1，从左往右寻找，如果为负数，则从右往左寻找。



.子程序 字节集_寻找取右, 字节集, , 从字节集的右边按 欲寻找的字节集 开始寻找  如 字节集_取右边({105,108,121,13,10,83,101},{13,10}) 将返回 {83,101}
.参数 被查找的字节集, 字节集, , 被查找的字节集
.参数 欲寻找的字节集, 字节集, , 欲寻找的字节集
.参数 起始寻找位置, 整数型, 可空, 可为空，默认为1，从左往右寻找，如果为负数，则从右往左寻找。



.子程序 文件_删除到回收站, 逻辑型, , 将指定文件删除到回收站,成功返回真,失败返回假[V雪落有声V]
.参数 欲删除的文件名, 文本型, , 欲删除的全路径文件名
.参数 删除方式选项, 整数型, 可空, 1: 不询问删除;  2: 不提示错误;  4: 不显示进度。如果被省略，默认值为 0 。



.子程序 程序_执行整数子程序1, 整数型, , 执行子程序参数为整数的；并返回整数；
.参数 子程序, 整数型, , 
.参数 参数一, 整数型, 可空, 
.参数 参数二, 整数型, 可空, 
.参数 参数三, 整数型, 可空, 



.子程序 文本_删除空行, 文本型, , 删除文本当中的空白行
.参数 要操作的文本, 文本型, , 



.子程序 网页_转换为HTML色, 文本型, , 将RGB色转换为HTML色
.参数 RGB颜色值, 整数型, , 



.子程序 外部超级列表框_上下移动, 文本型, , 成功返回空文本，失败返回错误提示文本
.参数 超级列表框句柄, 整数型, , 
.参数 移动方向, 整数型, , 1=上移1行，2=下移1行，3=移到第一行，4=移到最后一行
.参数 是否移动第1列, 逻辑型, 可空, 假如第1列是序号的话,可以不移动,设置为真将移动,默认为假,不移动



.子程序 系统_启用本地连接, 逻辑型, , 启用成功返回真，失败返回假
.参数 连接名称, 文本型, 可空, 一般都为:本地连接,留空默认为:本地连接



.子程序 系统_重启, 空白型, , 重启电脑


.子程序 系统_强制重启, 空白型, , 强制重启电脑


.子程序 系统_刷新屏幕, 空白型, , 刷新桌面


.子程序 系统_注销, 空白型, , 注销当前用户


.子程序 系统_强制注销, 空白型, , 强制注销当前用户


.子程序 系统_关机, 空白型, , 关闭电脑


.子程序 系统_强制关机, 空白型, , 强制关闭电脑


.子程序 外部编辑框_加入文本, 空白型, , 通过句柄给编辑框添加文本
.参数 编辑框句柄, 整数型, , 编辑框句柄
.参数 文本内容, 文本型, , 要添加的内容



.子程序 指针_取低16位, 整数型, , 
.参数 参数, 整数型, , 



.子程序 指针_取高16位, 整数型, , 
.参数 参数, 整数型, , 



.子程序 指针_是否有效, 逻辑型, , 判断一个子程序指针是否有效，有效返回真，否则返回假
.参数 要判断的指针地址, 整数型, , 



.子程序 目录_同步更新, 空白型, , 将目标目录的文件和源目录中的文件进行对比，将不同的文件同步到目标目录里。
.参数 源目录, 文本型, , 源目录，目录不以\结尾会自动添加
.参数 目标目录, 文本型, , 欲更新目标的目录，目录不以\结尾会自动添加



.子程序 窗口_创建Flash, 空白型, , 在指定句柄窗口上创建一个FLASH控件
.参数 父窗口句柄, 整数型, , 
.参数 Flash地址, 文本型, , 可以为网络和本地的
.参数 窗口宽度, 整数型, , 
.参数 窗口高度, 整数型, , 
.参数 窗口左边, 整数型, 可空, 可空。默认为1。
.参数 窗口顶边, 整数型, 可空, 可空。默认为1。



.子程序 文本_取字符串宽度, 整数型, , 
.参数 启动窗口句柄, 整数型, , 
.参数 欲要取出的字符串, 文本型, , 



.子程序 文件_创建, 整数型, , 瞬间创建一个指定大小的文件，最大能创建 2,147,483,647 字节大小的文件。成功返回1，失败返回错误代码;
.参数 文件路径, 文本型, , 
.参数 要创建的大小, 整数型, , 单位为字节,最大能创建 2,147,483,647 字节大小的文件



.子程序 文件_打开, 整数型, , 文件必须存在，成功返回文件句柄，失败返回-1
.参数 文件路径, 文本型, , 
.参数 执行模式, 整数型, 可空, 可空。0=API方式，1=核心支持库方式。默认为0，用API方式。



.子程序 文件_关闭, 空白型, , 关闭后,将文件号设置为0
.参数 文件号, 整数型, 参考, 
.参数 执行模式, 整数型, 可空, 可空。0=API方式，1=核心支持库方式。默认为0，用API方式。



.子程序 文件_写出字节集, 逻辑型, , 成功返回真，失败返回假。
.参数 文件号, 整数型, , 由  文件_打开 函数返回文件句柄，不支持 易自带 打开文件(）命令。
.参数 要写入的数据, 字节集, , 
.参数 执行模式, 整数型, 可空, 可空。0=API方式，1=核心支持库方式。默认为0，用API方式。



.子程序 文件_移动读写位置, 逻辑型, , 成功返回真，失败返回假。
.参数 文件号, 整数型, , 
.参数 移动距离, 整数型, , 
.参数 执行模式, 整数型, 可空, 可空。0=API方式，1=核心支持库方式。默认为0，用API方式。



.子程序 网页_置Cookie, 逻辑型, , 设置本地IE的cookie
.参数 网址, 文本型, , 
.参数 Cookie名称, 文本型, 可空, 为空清除所有
.参数 Cookie内容, 文本型, 可空, 为空清除
.参数 有效期, 日期时间型, 可空, 为空不保存



.子程序 网页_置Cookie1, 空白型, , 
.参数 网站域名, 文本型, , 
.参数 Cookie值, 文本型, , 整个Cookie值
.参数 有效期, 日期时间型, 可空, 可空。默认为2088年8月8日8时



.子程序 系统_打开网络连接属性, 空白型, , 打开系统网络连接属性设置


.子程序 外部超级列表框_自动调整列宽, 空白型, , 
.参数 超级列表框句柄, 整数型, , 
.参数 要自动调整的列索引, 整数型, , 



.子程序 外部编辑框_置四边距, 空白型, , 设置编辑框文字与四周边框的距离
.参数 编辑框句柄, 整数型, , 直接 编辑框.取窗口句柄() 来获取
.参数 边距距离, 整数型, , 新的距离值



.子程序 网页_取外网IP, 文本型, , 取本机的外网IP
.参数 所在省市, 文本型, 可空, 可空。请提供一个文本变量，用于存放您所在的省市，注：有些接口无法取出城市
.参数 接口, 整数型, 可空, 可空。0、ip138；1、sohu；2、ttt.sh；3、ip.cn；4、taobao；5、uc；6、ip.sb；7、ipinfo



.子程序 系统_取宽带线路, 整数型, , 返回电信或网通,1代表电信,2代表其它(如:网通,铁通等等)
.参数 IP地址, 文本型, 可空, 可空，为空将查询本机的线路。请填入你要查询的IP地址  如：119.147.106.250
.参数 线路, 文本型, 可空, 请提供一个文本变量,用于存放宽带的线路，如：电信或网通。
.参数 所在地址, 文本型, 可空, 请提供一个文本变量,用于存放IP所在地的地址，如：中国广东广州。



.子程序 系统_取MAC地址, 文本型, , 获取本机网卡MAC地址(如：A2:36:42:04:40:30)
.参数 目标IP, 文本型, 可空, 可空：默认为取自己的。也可以取局域网内的其它电脑的。如：192.168.1.100



.子程序 键盘_消息, 空白型, , 向指定窗口句柄的窗口中发送按键消息(无返回值)
.参数 窗口句柄, 整数型, , 接收消息的窗口句柄
.参数 键代码, 整数型, , 按键的键代码
.参数 状态, 整数型, 可空, 可空。默认为1  1=输入字符(大写) 2=输入字符(小写)  3=按下，4=放开，5=单击
.参数 是否功能键, 逻辑型, 可空, 可空。默认为假：普通键   真:功能键 (为功能键可用于热键技能不输入字符)



.子程序 文本_取中间_批量_正则方式, 整数型, , 比如：欲取全文本为<12345>,现在要取出“3”，<3>的前面为“2”，<3>的后面为“4”
.参数 源文本, 文本型, , 比如：欲取全文本为 12345
.参数 前面标识文本, 文本型, , 3的前面为“2”
.参数 后面标识文本, 文本型, , 3的后面为“4”
.参数 存放取出文本的数组, 文本型, 可空 数组, 存放取出文本的数组
.参数 是否区分大小写, 逻辑型, 可空, 是否区分大小写
.参数 文本长度大于此数的不要, 整数型, 可空, 文本长度大于此数的不要，如取出的文本大于50的不要。留空为不限制
.参数 为取出的文本加上前缀, 文本型, 可空, 在取出的文本前面加上一段字符或汉字！可空！
.参数 为取出的文本加上后缀, 文本型, 可空, 在取出的文本后面加上一段字符或汉字！可空！
.参数 连前面标识文本一起取出, 逻辑型, 可空, 是否连<前面标识文本>一起取出?  默认为假，不取出！
.参数 连后面标识文本一起取出, 逻辑型, 可空, 是否连<后面标识文本>一起取出?  默认为假，不取出！



.子程序 程序_调用DLL命令, 整数型, , 调用失败返回-1，调用成功返回命令自身的值。 注意：被调用的命令必须有4个参数（前2个整数型,后2个文本型），否则会调用失败。
.参数 DLL路径, 文本型, , DLL完整路径
.参数 函数名称, 文本型, , 要调用的子程序命令名称
.参数 参数1, 整数型, 可空, 参数如果非整数可用指针传递
.参数 参数2, 整数型, 可空, 
.参数 参数3, 整数型, 可空, 
.参数 参数4, 整数型, 可空, 
.参数 参数5, 整数型, 可空, 
.参数 参数6, 整数型, 可空, 
.参数 参数7, 整数型, 可空, 
.参数 参数8, 整数型, 可空, 
.参数 参数9, 整数型, 可空, 
.参数 参数10, 整数型, 可空, 
.参数 参数11, 整数型, 可空, 
.参数 参数12, 整数型, 可空, 
.参数 参数13, 整数型, 可空, 
.参数 参数14, 整数型, 可空, 
.参数 参数15, 整数型, 可空, 



.子程序 线程_启动1, 整数型, , 成功返回线程句柄，失败返回0
.参数 要启动的子程序, 整数型, , 如果是子程序指针，请直接使用到数值() 命令进行转换后再传入
.参数 要传去子程序的参数, 整数型, 可空, 往子程序里面传递一个整数型的参数
.参数 线程ID, 整数型, 参考 可空, 请提供一个整数型的变量，用于存放新创建的线程ID。



.子程序 RAR_解压文件, 逻辑型, , 解压 RAR 档案的所有文件或指定文件，成功返回真，失败返回假。本命令需要unrar.dll的支持,下载地址:http://www.rarlab.com/rar_add.htm
.参数 待解压文件, 文本型, , 欲解压文件的压缩档案全路径名称
.参数 解压密码, 文本型, 可空, 欲解压文件的压缩档案密码，无密码时为空
.参数 解压路径, 文本型, 可空, 指定解压文件的路径，为空表示解压到压缩档案所在目录



.子程序 RAR_测试压缩文件, 逻辑型, , 测试RAR压缩文件是否无误，如：压缩包损坏将返回假，否则返回真。
.参数 待测试压缩文件, 文本型, , 欲解压文件的压缩档案全路径名称
.参数 解压密码, 文本型, 可空, 欲解压文件的压缩档案密码，无密码时为空



.子程序 取指针文本_, 整数型, , 
.参数 参数_文本, 文本型, , 



.子程序 取指针整数_, 整数型, , 
.参数 参数_整数, 整数型, 参考, 



.子程序 取指针小数_, 整数型, , 
.参数 参数_小数, 小数型, 参考, 



.子程序 取指针双精度_, 整数型, , 
.参数 参数_双精度小数, 双精度小数型, 参考, 



.子程序 取指针字节集_, 整数型, , 
.参数 参数_字节集, 字节集, , 



.子程序 网页_置浏览器代理, 空白型, , 设置当前程序中浏览器的代理,不影响外部浏览器使用
.参数 代理IP, 文本型, 可空, 格式ip地址+端口，例如【192.168.1.10:80】,留空为取消代理



.子程序 网页_GZIP压缩, 字节集, , 感谢小磊提供，gzip.dll文件请自行到这里来下载并放到程序根目录下即可。http://pan.baidu.com/share/link?shareid=222122&uk=2013335237
.参数 inData, 字节集, , 



.子程序 网页_GZIP解压, 字节集, , 感谢小磊提供，gzip.dll文件请自行到这里来下载并放到程序根目录下即可。http://pan.baidu.com/share/link?shareid=222122&uk=2013335237
.参数 inData, 字节集, , 



.子程序 系统_设置IE代理地址, 逻辑型, , 成功返回真，失败返回假；
.参数 上网方式, 字节型, , 0=用路由器上网  1=用ADSL拨号上网
.参数 代理IP_端口, 文本型, 可空, 可空。留空为取消设置。要代理的IP地址和端口，如：127.0.0.1:8080
.参数 立即更新设置, 逻辑型, 可空, 默认为真，为假时需要手动重启IE浏览器



.子程序 数组_输出, 空白型, , 输出数组,方便查看
.参数 文本数组, 文本型, 可空 数组, 
.参数 整数数组, 整数型, 可空 数组, 



.子程序 字节集_寻找取中, 字节集, , 
.参数 要操作的字节集, 字节集, , 
.参数 前面字节集, 字节集, , 
.参数 后面字节集, 字节集, , 
.参数 起始搜寻位置, 整数型, 可空, 可空。1为首位置，2为第2个位置，如此类推，如果被省略，则“寻找字节集”命令默认从首部开始，“倒找字节集”命令默认从尾部开始。



.子程序 E数据库_快速查询, 空白型, , 在易数据库已打开的情况下,对某字段进行快速查询,勤快的人可把记录分成两个数组，用多线程分开查询，应该更快。把记录添加完了在显示控件，这样就快多了
.参数 查询的字段名, 文本型, , 必须为文本型字段
.参数 查询内容, 文本型, 可空, 可以为空,为空即为查询空记录
.参数 返回记录号数组名, 整数型, 数组, 本数据内容将直接返回结果



.子程序 E数据库_修复易数据库, 逻辑型, , 修复一个被破坏的易语言数据库
.参数 易数据库名, 文本型, , 易数据库全路径文件名
.参数 错误信息, 文本型, 可空, 如果修复失败，返回对应的错误文本。如果本参数为空，则不记录错误信息。



.子程序 键盘_模拟输入, 空白型, , 利用vbs脚本模拟键盘输入，感谢小磊提供
.参数 字符, 文本型, , 待输入的字符



.子程序 网页_取十进制颜色值, 整数型, , 把十六进制的网页颜色值转换成十进制的颜色值    
.参数 十六进制的颜色值, 文本型, , 234A97



.子程序 窗口_画矩形, 空白型, , 本函数为微凉提供
.参数 窗口句柄, 整数型, , 要画矩形的窗口的句柄
.参数 矩形粗细, 整数型, 可空, 默认为3
.参数 矩形颜色, 整数型, 可空, 默认为红色
.参数 是否闪烁, 逻辑型, 可空, 



.子程序 网页_URL取本地地址, 文本型, , 通过文件的URL地址，获取缓存在本地的文件地址，成功返回本地文件地址，失败或不存在返回空文本。目前知道不支持搜狗浏览器。
.参数 文件地址, 文本型, , 如：http://bbs.125.la/static/image/common/logo.png



.子程序 网页_屏蔽网页复制提示, 空白型, , 目前只测试了IE8
.参数 是否屏蔽, 逻辑型, 可空, 默认为真，允许网页复制，假为不允许。



.子程序 字节集_字节集到十六进制, 文本型, , 将字节集用16进制表示.可以将字节集用系统标准16进制表示
.参数 原始字节集, 字节集, , 用于转换的字节集



.子程序 IP_转至16进制, 文本型, , 把IP地址转换至16进制的IP，如：“192.168.1.1”转换后为 “C0A80101”
.参数 IP地址, 文本型, , 如：“192.168.1.1”



.子程序 IP_16进制转IP, 文本型, , 把16进制的IP转换至文本型IP，如：“C0A80101”转换后为“192.168.1.1”
.参数 十六进制IP, 文本型, , 如：“C0A80101”



.子程序 文件_重启电脑后替换, 空白型, , 感谢【微凉清风】提供此函数
.参数 用于替换的文件路径, 文本型, , 
.参数 被替换目标文件路径, 文本型, , 
.参数 是否删除源文件, 逻辑型, 可空, 可空，默认为假。是否删除“用于替换的文件路径”



.子程序 窗口_是否在屏幕内, 逻辑型, , 判断指定窗口是否在屏蔽内，在屏蔽内返回真，否则返回假
.参数 窗口句柄, 整数型, , 要判断的窗口句柄
.参数 是否自动校正, 逻辑型, , 如果窗口的左边、顶边小于0或大于屏蔽宽度或高度，将自动校正。



.子程序 网页_自动点击网页信息框_带返回值, 逻辑型, , 成功返回真，失败返回假。
.参数 网页信息框的标题, 文本型, 可空, 网页信息框的标题,默认为【Microsoft Internet Explorer】
.参数 按钮的标题, 文本型, 可空, 消息框上要点击的按钮标题,默认为【确定】
.参数 超时返回, 整数型, 可空, 可空，单位为毫秒，默认为5000毫秒。
.参数 监控间隔, 整数型, 可空, 可空，默认为300毫秒。



.子程序 窗口_取快速启动栏句柄, 整数型, , 成功返回快速启动栏句柄，失败返回0。本命令只有XP下测试过


.子程序 窗口_监视热键_注册, 空白型, , 使用例程：http://bbs.125.la/thread-40592-1-1.html  卸载：窗口_监视热键_卸载
.参数 响应监视事件, 子程序指针, , 响应监视事件,3个参数,都为整数型,第1个为功能键,第2个为键代码,第3个为按键状态(1为按下，2为放开)



.子程序 窗口_监视热键_卸载, 空白型, , 卸载键盘HOOK


.子程序 进程_ID是否有效, 逻辑型, , 判断一个进程ID是否存在（有效）
.参数 进程ID, 整数型, , 



.子程序 外部编辑框_置起始选择位置, 空白型, , 
.参数 编辑框句柄, 整数型, , 
.参数 起始选择位置, 整数型, , 



.子程序 窗口_取光标位置, 精易_矩形, , 命令使用请查看例题。注意!.使用该命令时,需要保证被取光标位置的编辑框 [拥有输入焦点] 否则命令将会失败
.参数 窗口句柄, 整数型, , 如果是自身，请直接输入-1



.子程序 窗口_取光标位置1, 精易_坐标, , 
.参数 线程ID, 整数型, 可空, 可空，留空为自身的线程ID



.子程序 文本_是否重复, 逻辑型, , 判断文本中的指定文本是否有重复，有重复返回真，没得复返回假
.参数 源文本, 文本型, , 
.参数 查询的文本, 文本型, , 
.参数 严格模式, 逻辑型, 可空, 可空。默认为正常模式。



.子程序 目录_是否有子目录, 逻辑型, , 判断一个目录下有无下级子目录
.参数 当前目录, 文本型, , 目录不以\结尾会自动添加



.子程序 网页_清除Cookie文件, 逻辑型, , 【此命令由小磊提供】，删除本地IE缓存的cookie文件
.参数 关键字, 文本型, 可空, 输入Cookie文件的关键字即可,空则清除全部
.参数 Cookie路径, 文本型, 参考 可空, 传递Cookie路径



.子程序 窗口_枚举接口, 空白型, , 枚举全部窗口的接口
.参数 回调函数, 子程序指针, , 回调子程序，返回值：整数型，直接返回1即可，共1个参数：窗口句柄[整数型]



.子程序 窗口_取小图标, 字节集, , 成功返回图标数据，失败返回空字节集{ }。
.参数 主窗口句柄, 整数型, , 当前窗口的句柄
.参数 hWnd, 整数型, , 目标窗口的句柄



.子程序 线程_启动多参_整数型, 整数型, , 成功返回线程句柄，失败返回0。
.参数 子程序指针, 子程序指针, , 
.参数 参数1, 整数型, 可空, 线程传入参数1
.参数 参数2, 整数型, 可空, 线程传入参数2
.参数 参数3, 整数型, 可空, 线程传入参数3
.参数 参数4, 整数型, 可空, 线程传入参数4
.参数 参数5, 整数型, 可空, 线程传入参数5
.参数 线程ID, 整数型, 参考 可空, 请提供一个整数型的变量，用于存放新创建的线程ID。



.子程序 提示框, 整数型, , 跟系统自带的信息框()一样，不同的是 窗口“总在最前”属性设置为真也能显示出来；
.参数 提示信息, 文本型, 可空, 
.参数 按钮, 整数型, 可空, 可空：默认为 #确认钮；0、#确认钮； 1、#确认取消钮； 2、#放弃重试忽略钮； 3、#取消是否钮； 4、#是否钮； 5、#重试取消钮；16、#错误图标； 32、#询问图标； 48、#警告图标； 64、#信息图标；524288、#文本右对齐
.参数 窗口标题, 文本型, 可空, 可空：默认为“友情提醒”；
.参数 父窗口句柄, 整数型, 可空, 可空:默认为自动程序
.参数 超时时间, 整数型, 可空, 超过指定的时间后，信息框将自动关闭。可空：默认为5秒超时，单位为毫秒。



.子程序 网页_JS格式化, 文本型, , 感谢小磊提供，格式化未处理的JS文本
.参数 js代码, 文本型, , 需要加密\解密的源码
.参数 压缩模式, 逻辑型, 可空, 假为格式化代码,真为压缩代码



.子程序 系统_修改MAC地址, 空白型, , 重启电脑后生效
.参数 MAC, 文本型, , 格式为：A2:36:42:04:40:30
.参数 第几块网卡, 整数型, 可空, 默认为1



.子程序 系统_删除MAC地址, 空白型, , 删除注册表中MAC地址
.参数 第几块网卡, 整数型, 可空, 默认为1



.子程序 文本_去重复文本, 文本型, , 去除原文本中重复的文本
.参数 原文本, 文本型, , 
.参数 分割符, 文本型, 可空, 原文本单个内容间的分隔符，例如：---  留空为：逐字分割



.子程序 网页_取Cookie, 文本型, , 取出指定域名在本机的cookie
.参数 域名, 文本型, , 只接受域名
.参数 Cookie名称, 文本型, 可空, 为空返回全部Cookie



.子程序 网页_取单条Cookie, 文本型, , 从左往右获取
.参数 Cookie, 文本型, , 
.参数 名称, 文本型, , 
.参数 不附带名称, 逻辑型, 可空, 



.子程序 网页_清除Cookie, 空白型, , 清除本机IE里的cookie
.参数 域名, 文本型, , 只接受域名



.子程序 系统_以管理员模式创建进程, 逻辑型, , 在Vista/Win7及更高系统上,以管理员模式创建进程,成功返回真,失败返回假 警告：请勿放在 窗口创建完毕/首次被激活/死循环中
.参数 进程路径, 文本型, 可空, 留空默认启动自身进程
.参数 运行参数, 文本型, 可空, 命令行参数



.子程序 系统_注册组件, 逻辑型, , DllRegisterServer
.参数 组件路径, 文本型, , 



.子程序 系统_卸载组件, 逻辑型, , DllUnregisterServer
.参数 组件路径, 文本型, , 



.子程序 窗口_模糊遍历窗口, 整数型, , 返回满足条件的第一个窗口的句柄
.参数 父窗口句柄, 整数型, 可空, 为空，则为桌面句柄
.参数 要找的窗口类名, 文本型, 可空, 
.参数 要找的窗口标题, 文本型, 可空, 
.参数 结果句柄数组, 整数型, 参考 可空 数组, 如果指定数组，则遍历所有满足条件的子窗口，并将所有句柄写入该数组中。



.子程序 系统_检测host, 逻辑型, , 返回真则host已经被修改
.参数 网址1, 文本型, , 
.参数 网址2, 文本型, 可空, 
.参数 网址3, 文本型, 可空, 



.子程序 文件_枚举1, 空白型, , 如提供搜索目录路径，将会搜索此目录所有在内的文件。
.参数 目录, 文本型, , 目录，如“D:\”盘，目录不以\结尾会自动添加
.参数 拓展名, 文本型, , “*.exe”
.参数 装载函数, 子程序指针, , 二个参数，1=目录【文本型】；2=文件名【文本型】



.子程序 窗口_取字符串宽度, 整数型, , 取一段文本在屏幕上有多少个像素宽
.参数 窗口句柄, 整数型, , 
.参数 字符串, 文本型, , 



.子程序 窗口_按类名枚举, 空白型, , 根据类名枚举窗口
.参数 类名, 文本型, , 
.参数 子程序地址, 子程序指针, , 第一个参数为句柄
.参数 备用参数, 整数型, 可空, 弄完记得释放



.子程序 窗口_强制显示, 整数型, , 对窗口进行置顶、激活等操作（注：非强制显示隐藏窗口）
.参数 句柄, 整数型, , 目标窗口句柄
.参数 总在最前, 逻辑型, 可空, 默认为假:取消总在最前  真:总在最前



.子程序 文本_删除指定文件行, 逻辑型, , 删除指定文件内的一行文本。
.参数 文件路径, 文本型, , 
.参数 要删除的文本行文本, 文本型, , 



.子程序 数组_去重复, 整数型, , 返回剩余不重复数组的成员数量，可处理特殊字符效率较慢
.参数 文本数组, 文本型, 可空 数组, 要去重复的 文本数组
.参数 整数数组, 整数型, 可空 数组, 要去重复的 整数数组



.子程序 系统_是否64位操作系统, 逻辑型, , 是返回真，不是返回假


.子程序 窗口_控件调整_销毁, 空白型, , 销毁指定句柄的窗口控件
.参数 窗口句柄, 整数型, , 



.子程序 窗口_控件调整_创建, 空白型, , 在指定句柄窗口上创建自定义的控件
.参数 窗口句柄, 整数型, , 



.子程序 网页_删除IE缓存文件, 逻辑型, , 【此命令由小磊提供】，删除本地IE的缓存文件
.参数 缓存文件路径, 文本型, 参考 可空, 传递缓存文件路径



.子程序 系统_判断有无摄像头, 整数型, , 返回摄像头数量


.子程序 系统_临时字体_安装, 整数型, , 失败返回0；如果函数调用成功，则返回值为增加的字体数   安装字体后，请勿删除字体文件，否则不能正常显示文字
.参数 字体路径, 文本型, , 含有效字体的文件名,字体资源文件(.FON)、未加工位图字体(.FNT)、未加工TrueType(.TTF)或TrueType资源(.FON)



.子程序 系统_临时字体_卸载, 逻辑型, , 通常情况下，只卸载由“系统_安装字体”安装的字体资源
.参数 字体路径, 文本型, , 含有效字体资源的文件名



.子程序 窗口_循环关闭, 空白型, , 循环关闭一个窗口
.参数 类名, 文本型, 可空, 窗口类名，可空
.参数 标题, 文本型, 可空, 窗口标题，可空



.子程序 文件_循环删除, 空白型, , 删除指定的文件
.参数 文件名, 文本型, , 
.参数 超时, 整数型, 可空, 毫秒，默认3秒



.子程序 目录_是否存在, 逻辑型, , 输入一个目录名,判断此目录是否存在
.参数 欲判断的目录名, 文本型, , 传入的目录名不会被改变



.子程序 文件_是否存在, 逻辑型, , 判断指定的文件是否存在
.参数 文件名, 文本型, , 文件全路径



.子程序 文本_取随机范围数字, 文本型, , 如1-100之间的双数或单数或单双一起！
.参数 起始数, 整数型, , 如：1
.参数 结束数, 整数型, , 如：1000
.参数 单双选择, 整数型, 可空, 1为单，2为双,否则为取单双



.子程序 进程_创建, 整数型, , 创建一个程序进程(成功返回进程ID,失败返回0)
.参数 程序路径, 文本型, , 欲创建进程的执行路径
.参数 命令行, 文本型, 可空, 附加上程序路径后的命令行参数
.参数 运行目录, 文本型, 可空, 通常留空,特殊情况下使用
.参数 进程结构, 精易_进程结构, 参考 可空, 接收进程结构信息的变量,如果不为空，产品的句柄用CloseHandle函数释放



.子程序 目录_强力清空, 空白型, , 删除指定目录下所有文件，包括文件夹
.参数 要删除文件的目录, 文本型, , 如：删除D:\Program Files(也就是Program Files)目录下的全部文件；，目录不以\结尾会自动添加



.子程序 系统_修改开机密码, 逻辑型, , 成功返回真，失败返回假
.参数 密码, 文本型, , 需修改成的密码



.子程序 程序_写日志, 空白型, , 在程序根目录建立一个txt文件用于记录相关日志内容
.参数 日志内容, 文本型, , 
.参数 日志文件路径, 文本型, 可空, 写日记文件的路径，可空，默认在运行目录下写出



.子程序 文本_取出现次数, 整数型, , 返回指定文本中指定内容出现的次数
.参数 被搜索文本, 文本型, , 
.参数 欲搜索文本, 文本型, , 
.参数 是否区分大小写, 逻辑型, 可空, 



.子程序 线程_取中止线程退出代码, 整数型, , 返回0表示该线程不存在(或句柄已被关闭),1线程已经执行完毕，2为正在运行,其他不论
.参数 线程句柄, 整数型, , 



.子程序 文本_朗读, 空白型, , 朗读一段指定的文本
.参数 朗读的文本, 文本型, 可空, 
.参数 百度语音引擎, 逻辑型, 可空, 可为空，默认使用微软语音引擎。
.参数 音频数据, 字节集, 可空, 
.参数 音频文件, 文本型, 可空, 如：C:\mp3，C:\MAV等等
.参数 保存朗读文本至文件, 文本型, 可空, 只针对“朗读的文本”和“音频数据”有效，请提供要保存至的文件夹路径，如：C:\
.参数 朗读方式, 逻辑型, 可空, 真=支持库方式  假=API方式  默认为假  API方式



.子程序 网页_取文本_reg, 文本型, , 去掉网页源码中的HTML标签，保留纯文本(正则方式)
.参数 网页源码, 文本型, , 网页源码如果含中文且乱码的,请先解码



.子程序 系统_取宽带用户名密码, 逻辑型, , 成功返回真,失败返回假  注：只有ADSL拨号上网的才能取
.参数 连接名称, 文本型, 可空, 请提供一个文本变量,用于存放 连接名称
.参数 宽带用户名, 文本型, 可空, 请提供一个文本变量,用于存放 宽带用户名
.参数 宽带密码, 文本型, 可空, 请提供一个文本变量,用于存放 宽带密码



.子程序 线程_启动多参_文本型, 整数型, , 成功返回线程句柄
.参数 子程序指针, 子程序指针, , 
.参数 整数1, 整数型, 可空, 线程传入参数1
.参数 文本1, 文本型, 可空, 线程传入参数2
.参数 文本2, 文本型, 可空, 线程传入参数3
.参数 文本3, 文本型, 可空, 线程传入参数4
.参数 文本4, 文本型, 可空, 线程传入参数5
.参数 线程ID, 整数型, 参考 可空, 请提供一个整数型的变量，用于存放新创建的线程ID。



.子程序 程序_Call, 整数型, , 少在计次循环里使用
.参数 子程序指针, 整数型, , 
.参数 参数1, 整数型, 可空, 
.参数 参数2, 整数型, 可空, 
.参数 参数3, 整数型, 可空, 
.参数 参数4, 整数型, 可空, 
.参数 参数5, 整数型, 可空, 



.子程序 数组_排序, 空白型, , 二分法排序.只能对文本数组进行排序,整数数组请用核心支持库的.
.参数 要排序的数组, 文本型, 参考 数组, 
.参数 排序方式, 字节型, 可空, 可空,默认为0  0=升序排序 1=降序排序
.参数 区分大小写, 逻辑型, 可空, 可空,默认“真”。真=区分大小写，假=不区分



.子程序 数组_反转, 空白型, , 数组倒序。数组的第一个成员与最后一个成员互换，第二个和倒数第二个互换，以此类推
.参数 反转的数组, 文本型, 参考 数组, 



.子程序 系统_取磁盘类型, 整数型, , 获取磁盘的类型，失败返回0，成功返回：1=移动U盘，2=系统磁盘，3=网络磁盘，4=CD-ROM,5=RAM 磁盘
.参数 磁盘盘符, 文本型, , 如：C、D



.子程序 系统_显示桌面, 空白型, , 类似按下 Win+D 键


.子程序 音量_静音, 空白型, , 设置静音或解除静音,如果已经静音就解除，否则静音
.参数 窗口句柄, 整数型, , 可以通过“取窗口句柄（）”获得



.子程序 音量_增加, 空白型, , 控制声卡方式增加音量
.参数 窗口句柄, 整数型, , 可以通过“取窗口句柄（）”获得



.子程序 音量_置声道, 空白型, , 设置左右声道的音量，从0～100
.参数 左声道音量, 整数型, , 0～100
.参数 右声道音量, 整数型, , 0～100



.子程序 音量_取声道, 空白型, , 取出左右声道的音量，用参考变量，0～100
.参数 左声道音量, 整数型, 参考, 装载左声道音量的变量
.参数 右声道音量, 整数型, 参考, 装载右声道音量的变量



.子程序 音量_减少, 空白型, , 控制声卡方式减少音量
.参数 窗口句柄, 整数型, , 可以通过“取窗口句柄（）”获得



.子程序 网页_取域名, 文本型, , 通过“/”或者“.”来获取网址中的域名，默认使用“/”方式
.参数 网址, 文本型, , 
.参数 去除二级域名, 逻辑型, 可空, 
.参数 不过滤端口, 逻辑型, 可空, 
.参数 后缀点数量, 整数型, 可空, 不留空表示通过“.”的方式取域名 。如：.com后缀点数量为1 ,.com.cn后缀点数量为2



.子程序 系统_修改IP地址和网关和子网掩码, 逻辑型, , CMD方式修改,警告：该命令可能让你无法联网，使用前请确保你有还原到正常网络的能力
.参数 IP地址, 文本型, , 格式为：192.168.1.152 (点分十进制的IP表示)
.参数 网关, 文本型, , 格式为：192.168.1.1 (点分十进制的IP表示)
.参数 子网掩码, 文本型, , 格式为：255.255.255.0 (点分十进制的IP表示)
.参数 连接名称, 文本型, 可空, 连接的名称,留空则为:本地连接
.参数 错误原因, 文本型, 参考 可空, 可以提供一个文本变量,接收当修改失败时的错误信息.



.子程序 系统_取DOS执行结果, 文本型, , 注意:该命令会阻塞,一直到cmd中的内容执行完毕后才会返回.
.参数 命令行文本, 文本型, , 
.参数 即时回显, 子程序指针, 可空, DOS即时回显信息回调函数 回调DOS函数(回显信息) 返回逻辑值,真:停止,假:继续



.子程序 窗口_限制运行次数, 逻辑型, , 真为超出次数，假为相反
.参数 标题, 文本型, , 
.参数 类名, 文本型, , 
.参数 限制次数, 整数型, 可空, 限制多开的窗口数量，可空，默认为1



.子程序 网页_取文本_dom, 文本型, , 去掉网页源码中的HTML标签，保留纯文本(DOM方式)
.参数 网页源码, 文本型, , 网页源码如果含中文且乱码的,请先解码



.子程序 网页_置浏览器UA, 逻辑型, , 设置当前程序中浏览器的UserAgent,不影响外部浏览器使用
.参数 UserAgent, 文本型, , 



.子程序 剪辑板_取文件, 整数型, , 取已经复制到剪贴板的文件名，返回文件个数。
.参数 文件数组, 文本型, 可空 数组, 用于存放文件路径的数组,留空则只返回文件数量。
.参数 状态, 逻辑型, 参考 可空, 返回=真,对文件执行了剪切操作；返回=假,对文件执行了复制操作



.子程序 剪辑板_置文本, 空白型, , 设置指定文本到系统剪辑板
.参数 要置的文本, 文本型, , 



.子程序 剪辑板_取文本, 文本型, , 取出系统剪辑板中存放的文本


.子程序 编码_编码转换对象, 字节集, , 默认“UTF-8”到“GBK”解码
.参数 待转换数据, 字节集, , 
.参数 转换前编码, 文本型, 可空, utf-8；unicode；GBK 等
.参数 转换后编码, 文本型, 可空, utf-8；unicode；GBK 等
.参数 转换后数据开始位置, 整数型, 可空, 位置从0开始。unicode编码标识占2个字节，utf-8编码标识占3个字节



.子程序 编码_运行JS代码, 文本型, , 失败返回“JS代码运行失败”，如果此命令用于线程内，请在线程子程序里的第一行加上 线程_初始化COM库 ()
.参数 JS代码, 文本型, , 
.参数 函数名, 文本型, , 要运行的Js函数名
.参数 参数一, 文本型, 可空, 
.参数 参数二, 文本型, 可空, 
.参数 参数三, 文本型, 可空, 
.参数 参数四, 文本型, 可空, 



.子程序 编码_URL解码, 文本型, , 将网页返回的数据解码
.参数 URL, 文本型, , 
.参数 是否UTF8, 逻辑型, 可空, 先将文本串解码为文本,再从UTF8转成GBK编码



.子程序 编码_URL编码, 文本型, , 将指定文本编码
.参数 欲编码的文本, 文本型, , 
.参数 不编码字母数字, 逻辑型, 可空, 不需要编码【字母数字.-】可以把此参数设置为真
.参数 是否UTF8, 逻辑型, 可空, 先把文本转换成UTF8编码,再编码成URL



.子程序 编码_BASE64编码, 文本型, , BASE64编码处理；成功返回编码后的文本；
.参数 待编码数据, 字节集, , 待编码字节集



.子程序 编码_BASE64解码, 字节集, , BASE64解码处理；成功返回解码后的字节集数据；
.参数 编码文本, 文本型, , 待解码的文本
.参数 去除右边空白字节集, 逻辑型, 可空, 



.子程序 编码_简体到繁体, 文本型, , 将简体中文转换成繁体中文；成功返回转换后的繁体内容；
.参数 简体文本, 文本型, , 欲转换的文本内容



.子程序 编码_繁体到简体, 文本型, , 将繁体中文转换成简体中文；成功返回转换后的简体内容；
.参数 繁体文本, 文本型, , 欲转换的文本内容



.子程序 编码_usc2到ansi, 文本型, , 将usc2转变成ansi  如 %u0031%u0032%u0033 转换后为 123 失败返回空文本
.参数 欲转换的文本, 文本型, , \u %u \u25 等3种格式,如果是其它格式,请先用子文本替换成这三种的任意一种才能正常转换



.子程序 编码_ansi到usc2, 文本型, , 将ansi转变成usc2  如 123 转换后为 %u0031%u0032%u0033 失败返回空文本
.参数 欲转换的文本, 文本型, , 
.参数 是否不转换括号, 逻辑型, 可空, 可空。默认为假，转换。 真 = 不转换 { }[ ]( ) 等括号，注意；不处理全角字符串
.参数 是否不转换符号, 逻辑型, 可空, 可空。默认为假，转换。 真 = 不转换:," 等符号
.参数 分割符, 文本型, 可空, 可空。默认为：%u  如填：%u,返回的数据如:%u0031%u0032%u0033，填\u，返回的数据如:\u0031\u0032\u0033



.子程序 编码_usc2到ansi_EX, 文本型, , 将usc2转变成ansi  如 %u0031%u0032%u0033 转换后为 123 失败返回空文本
.参数 欲转换的文本, 文本型, , 
.参数 分割符, 文本型, , 如:%u0031%u0032%u0033，分隔符填：%u



.子程序 编码_ansi到usc2_EX, 文本型, , 将ansi转变成usc2   如 123 转换后为 %u0031%u0032%u0033 失败返回空文本
.参数 欲转换的文本, 文本型, , 
.参数 分割符, 文本型, , 如填：%u,返回的数据如:%u0031%u0032%u0033
.参数 是否不转换括号, 逻辑型, 可空, 可空。默认为假，转换。 真 = 不转换 { }[ ]( ) 等括号
.参数 是否不转换符号, 逻辑型, 可空, 可空。默认为假，转换。 真 = 不转换:," 等符号



.子程序 编码_utf8到gb2312, 文本型, , 
.参数 欲转换的源码, 文本型, , 



.子程序 编码_gb2312到utf8, 文本型, , 
.参数 欲转换的源码, 文本型, , 



.子程序 编码_ASCII到Unicode, 字节集, , 将ASCII码转换为Unicode码；成功返回转换后的字节集；
.参数 ASCII文本, 文本型, , 欲转换的ASCII文本



.子程序 编码_U编码转换, 文本型, , 默认转换类型为to16un
.参数 要转的文本, 文本型, , 
.参数 转换类型, 文本型, 可空, to16on to16un to10on to10un



.子程序 编码_Unicode到Ansi, 文本型, , 将Unicode码转换为Ansi码；成功返回转换后的文本；
.参数 Unicode, 字节集, , 欲转换的Unicode字节集



.子程序 编码_Ansi到Unicode, 字节集, , 将Ansi码转换为Unicode码；成功返回转换后的字节集；
.参数 Ansi, 文本型, , 欲转换的Ansi文本
.参数 非标准Unicode编码, 逻辑型, 可空, 默认为假，为标准Unicode编码



.子程序 编码_Unicode到Ansi_文本型, 文本型, , 将Unicode码转换为Ansi码，成功返回转换后的文本。
.参数 UniCode文本, 文本型, , 欲转换的Unicode文本，如：“&#31934&#26131&#-29766&#22363”



.子程序 编码_Ansi到Unicode_文本型, 文本型, , 将Ansi码转换为Unicode码，如：将“精易论坛”转换后将返回格式如：“&#31934&#26131&#-29766&#22363”
.参数 Ansi, 文本型, , 欲转换的文本，如：“精易论坛”。



.子程序 编码_Utf8到Unicode, 字节集, , 将UTF8数据转换到Unicode
.参数 utf8字节集, 字节集, , 



.子程序 编码_Unicode到Utf8, 字节集, , 将Unicode转换到UTF8
.参数 Unicode字节集, 字节集, , 



.子程序 编码_Ansi到Utf8, 字节集, , 
.参数 ansi文本, 文本型, , 



.子程序 编码_Utf8到Ansi, 文本型, , 
.参数 utf8字节集, 字节集, , 



.子程序 编码_BIG5到繁体, 文本型, , 
.参数 待转换文本, 文本型, , 



.子程序 编码_BIG5到简体, 文本型, , 
.参数 待转换文本, 文本型, , 



.子程序 编码_繁体到BIG5, 文本型, , 
.参数 待转换文本, 文本型, , 



.子程序 编码_简体到BIG5, 文本型, , 
.参数 待转换文本, 文本型, , 



.子程序 进制_二到十, 整数型, , 将二进制转换成十进制(返回十进制整数)  @福仔
.参数 二进制文本, 文本型, , 欲转换的二进制



.子程序 进制_八到十, 整数型, , 将八进制转换成十进制(返回十进制整数)
.参数 八进制文本, 文本型, , 欲转换的八进制文本



.子程序 进制_十到八, 文本型, , 将十进制转换成八进制(返回八进制文本)
.参数 十进制数, 长整数型, , 欲转换的十进制数



.子程序 进制_二八十六到十, 整数型, , 将非十进制的标准格式文本转换成十进制整数值
.参数 欲转换的值, 文本型, , 欲转换的值，文本型！
.参数 数值类型, 整数型, 可空, 0，#十六进制；1，#十进制（默认）；2，#八进制；3，#二进制



.子程序 校验_取md5, 文本型, , 取数据MD5
.参数 字节集数据, 字节集, , 要取数据摘要的字节集
.参数 返回值转成大写, 逻辑型, 可空, 可空，默认为假。假=小写  真=大写
.参数 是否取16位, 逻辑型, 可空, 可空，默认为32位



.子程序 校验_取md5_文本, 文本型, , 取文本MD5，支持中文。
.参数 欲取MD5的文本串, 文本型, , 要取数据摘要的字节集
.参数 是否包含中文, 逻辑型, 可空, 如果“欲取MD5的文本”中包含有汉字，设置为空，返回的MD5将不一样。
.参数 返回值转成大写, 逻辑型, 可空, 可空，默认为假。假=小写  真=大写
.参数 是否取16位, 逻辑型, 可空, 可空，默认为32位



.子程序 校验_取md4, 文本型, , 
.参数 字节集数据, 字节集, , 要取数据摘要的字节集



.子程序 校验_取md2, 文本型, , 
.参数 字节集数据, 字节集, , 要取数据摘要的字节集



.子程序 校验_取rc4, 字节集, , RC4校验，与易的输出形式一样，可能和其它校验程序输出形式不一样，可自行进行相应调整。
.参数 原文, 字节集, , 需要加、解密的字节集
.参数 密码, 文本型, , 输入相应的密码



.子程序 校验_取sha1, 文本型, , 返回40位的校验数据
.参数 字节集数据, 字节集, , 要取数据摘要的字节集



.子程序 校验_取crc32, 文本型, , 用于取crc32，结果为16进制文本
.参数 字节集数据, 字节集, , 要取CRC32数据字节集
.参数 是否在前端补零, 逻辑型, 可空, 如果为真，则自动在前面补0，补足8位数。如果为假，则不补零；默认为假



.子程序 窗口_是否置顶, 逻辑型, , 判断指定窗口的是否在最前面；如果是返回真,否则返回假；
.参数 句柄, 整数型, , 欲判断窗口句柄



.子程序 窗口_是否禁止, 逻辑型, , 判断指定窗口的是否被禁止；如果是返回真,否则返回假；
.参数 窗口句柄, 整数型, , 欲判断窗口句柄



.子程序 系统_置屏幕分辨率, 整数型, , 设置屏幕分辨率;返回值说明:0设置成功;1重启后生效;-2不支持的分辨率;-1驱动无效或不支持
.参数 色深, 短整数型, 可空, 新的色深 留空为不改变原先设定
.参数 屏幕宽度, 短整数型, 可空, 新的屏幕宽度 留空为不改变原先设定
.参数 屏幕高度, 短整数型, 可空, 新的屏幕高度 留空为不改变原先设定
.参数 屏幕刷新率, 短整数型, 可空, 新的屏幕刷新率 留空为不改变原先设定
.参数 设置模式, 整数型, 可空, 1:临时,退出软件或重启后恢复原来的配置;2:全局,设置后将一直使用新分辨率.



.子程序 时间_取现行时间戳, 文本型, , 生成一个13位或者10位的现行时间戳，默认生成13位时间戳。13位：1325252169718，10位：1325252169
.参数 是否取十位时间戳, 逻辑型, 可空, 本参数为真时，将生成10位时间戳返回



.子程序 时间_取随机时间戳, 文本型, , 生成一个随机的时间戳。如：0.842703761170252


.子程序 IP_转至10进制, 长整数型, , 把IP地址转换至10进制的IP，如：“192.168.1.1”转换后为 “3232235777”
.参数 IP地址, 文本型, , 如：“192.168.1.1”



.子程序 IP_10进制转IP, 文本型, , 把10进制的IP转换至文本型IP，如：“3232235777”转换后为“192.168.1.1”
.参数 十进制IP, 长整数型, , 如：“3232235777”



.子程序 外部超级列表框_保存数据_NEW, 逻辑型, , BUG命令已弃用,如果要读入的话,直接 超级列表框.表项=读入文件(C:\001.ebb) 即可
.参数 超级列表框句柄, 整数型, , 超级列表框句柄
.参数 要保存的位置, 文本型, , 如: C:\001.ebb 即可
.参数 列表类型, 整数型, 可空, 默认为"报表列表框"  0=报表列表框 1=大图标列表框
.参数 不保存指定列的索引, 整数型, 可空, 输入不保存指定列的索引,如:我不保存第1列,直接输入0,因为索引是多0开始的



.子程序 文本_转拼音, 文本型, , 把一段文本转换到拼音
.参数 欲转拼音的文本, 文本型, , 
.参数 是否加空格, 逻辑型, 可空, 可空,默认为假,不加;
.参数 是否全角, 逻辑型, 可空, 可空，默认为假，半角
.参数 是否正则, 逻辑型, 可空, 是否正则方式判断，可以判断生僻的汉字，可空，默认为假 



.子程序 文件_取配置项名数组1, 整数型, , 返回指定配置文件中所有已有节名的文本数组。本命令为初级命令。
.参数 配置文件名, 文本型, , 
.参数 节名称, 文本型, , 
.参数 返回的配置项名数组, 文本型, 数组, 



.子程序 编码_Utf8到Ansi_对象, 文本型, , 
.参数 欲转换的文本, 字节集, , 



.子程序 编码_Ansi到Utf8_对象, 字节集, , 
.参数 文本, 文本型, , 



.子程序 时间_转为GMT格式1, 文本型, , 感谢会员shituo提供代码，将日期时间型数据转换为GMT格式 Greenwich Mean Time
.参数 待转换时间, 日期时间型, 可空, 可为空，默认即现行时间。



.子程序 时间_GMT转为时间, 日期时间型, , 感谢会员shituo提供代码，将GMT文本时间 转换成日期时间型
.参数 GMT时间, 文本型, , 



.子程序 时间_转为GMT格式2, 文本型, , 将日期时间型数据转换为GMT格式 Greenwich Mean Time
.参数 Time, 日期时间型, 可空, 可空，默认即现行时间。



.子程序 时间_GMT转为时间1, 日期时间型, , 将GMT文本时间 转换成日期时间型
.参数 GMT时间, 文本型, , 



.子程序 网页_取编码, 文本型, , 用于取出指定网页地址的编码
.参数 网页地址, 文本型, , 



.子程序 文件_取尺寸, 文本型, , 直接大于2G以上超大文件
.参数 参_文件名, 文本型, , 文件的完整路径
.参数 参_格式化, 逻辑型, 可空, 格式化以B、KB、GB返回



.子程序 系统_处理事件1, 空白型, , 暂时转让控制权，以便让 Windows 操作系统有机会处理其它的如用户键盘或鼠标输入等事件。直到操作系统处理并发送完程序队列中的所有事件后，命令才会返回。


.子程序 文件_搜索, 空白型, , 可以设置显示标签和自动加入到列表框,可以当成枚举文件命令
.参数 欲寻找的目录, 文本型, , 如：C:,表示C盘,记得C字后面两点一定要写，目录不以\结尾会自动添加
.参数 加入的列表框, 列表框, , 
.参数 文件类型, 文本型, 可空, 可空：默认为*.*,也就是全部类型。 如填 *.txt只找txt类型的文件
.参数 文件名包含的关键字, 文本型, 可空, 搜索文件名中 包含的关键字。如： 精易论坛.exe 只需要 精易就可以了
.参数 显示标签, 标签, 可空, 用来显示搜索路径的标签
.参数 是否带路径, 逻辑型, 可空, 默认为假； 真=带目录路径，如C:\012.txt； 假=不带，如 012.txt；



.子程序 文件_搜索_深度, 空白型, , 无返回值，可以根据目录深度进行回调搜索，从而提高运行效率。
.参数 欲寻找的目录, 文本型, , 如：C:,表示C盘,记得C字后面两点一定要写，目录不以\结尾会自动添加
.参数 装载函数, 子程序指针, , 需要一个参数接收回调，名称为;文件路径[文本型].
.参数 文件类型, 文本型, 可空, 可空：默认为*.*,也就是全部类型。 如填 *.txt只找txt类型的文件
.参数 目录深度, 整数型, 可空, 可空：默认为-1，即不限制目录深度。



.子程序 系统_取字体名, 文本型, , 获取字体名称，如“simsun.ttc”显示字体名称为“宋体”。
.参数 字体文件名, 文本型, , 可以输入字体文件名，如“STXINWEI.TTF”,默认在系统字体目录下搜索该文件。



.子程序 系统_取CPU占用率, 整数型, , 取当前CPU占用率。成功返回CPU占用率；失败返回-1。Win98系统下使用本方法取得的数值可能会有误。


.子程序 系统_关电源, 空白型, , 无返回值，实现快速关机。


.子程序 窗口_闪动Ex, 逻辑型, , 闪烁指定窗口，可选闪烁标题、任务栏、次数、速度，成功返回真，失败返回假。
.参数 窗口句柄, 整数型, , 指定闪动的窗口句柄 
.参数 闪烁类型, 整数型, 可空, 可为空,默认为标题闪烁,可选参数(多个值可相加);0=停止;1=标题;2=任务栏;3=标题与任务栏;4=连续
.参数 闪烁次数, 整数型, 可空, 可为空,默认即1次.
.参数 闪烁速度, 整数型, 可空, 可为空,即默认速度.单位为"毫秒"



.子程序 系统_关联右键菜单带图标, 空白型, , 在win7系统中的右键菜单最上方添加一个带图标的菜单
.参数 右键名称, 文本型, , 
.参数 程序路径, 文本型, 可空, 可空，留空为程序自身
.参数 图标路径, 文本型, 可空, 留空为程序的图标
.参数 是否删除, 逻辑型, 可空, 真为删除指定右键名称



.子程序 程序_加入IE工具栏, 空白型, , 把程序加入到IE工具栏,重启IE生效
.参数 程序名称, 文本型, , 
.参数 程序路径, 文本型, 可空, 留空为自身程序路径
.参数 显示图标, 文本型, 可空, 留空为系统默认程序图标
.参数 是否删除, 逻辑型, 可空, 真=删除



.子程序 时间_北京转格林威治, 长整数型, , 将【北京标准时间】转换成【格林威治的标准时间】，13位的时间戳可用“时间_取现行时间戳（）”获得
.参数 欲转换的时间, 日期时间型, 可空, 如果为空则取当前时间，如: 1970-01-01 08:00:00 或 2009年2月9日12时36分36秒



.子程序 目录_枚举子目录1, 整数型, , 取一个文件夹下级子目录；成功返回子目录数量，失败返回0；通过是否枚举子目录参数，可以枚举所有的子目录
.参数 父文件夹路径, 文本型, , 如：D:\Program Files；目录分割符请用\，路径不以\结尾会自动添加
.参数 子目录数组, 文本型, 参考 可空 数组, 用来装载返回的子目录路径；
.参数 是否带路径, 逻辑型, 可空, 可为空默认为真,假=不带，真=带;
.参数 是否继续向下枚举, 逻辑型, 可空, 为空，默认不枚举。



.子程序 COM_bstr_t, 整数型, , 
.参数 _bstr_t, 文本型, , 



.子程序 COM_QueryInterface, 整数型, , 
.参数 this_, 整数型, , 
.参数 refiid_, 整数型, , 
.参数 pvoid_, 整数型, 参考, 



.子程序 COM_AddRef, 整数型, , 
.参数 this_, 整数型, , 



.子程序 COM_Release, 整数型, , 
.参数 this_, 整数型, , 



.子程序 COM_调用COM方法, 整数型, , 
.参数 pThis, 整数型, , 
.参数 Index, 整数型, , 索引从1开始
.参数 arg1, 整数型, 可空, 
.参数 arg2, 整数型, 可空, 
.参数 arg3, 整数型, 可空, 
.参数 arg4, 整数型, 可空, 
.参数 arg5, 整数型, 可空, 
.参数 arg6, 整数型, 可空, 
.参数 arg7, 整数型, 可空, 
.参数 arg8, 整数型, 可空, 
.参数 arg9, 整数型, 可空, 
.参数 arg10, 整数型, 可空, 



.子程序 COM_StringToCLSID, GUID, , 
.参数 参数_文本, 文本型, , 



.子程序 COM_StringtoIID, GUID, , 把COM中的接口名转换成接口标识GUID结构
.参数 接口类型, 文本型, , 



.子程序 文本_指针到文本A, 文本型, , 返回指定内存指针所指向地址处的文本，注意调用本命令前一定要确保所提供的内存指针真实有效，且指向一个以零字符结束的文本串。
.参数 内存文本指针, 整数型, , 



.子程序 文本_指针到文本W, 文本型, , 取内存中Unicode字符串文本。返回指定内存指针所指向地址处的文本，注意调用本命令前一定要确保所提供的内存指针真实有效，且指向一个以零字符结束的文本串。 
.参数 Unicode内存指针, 整数型, , 



.子程序 系统_取时区, 文本型, , 获取系统时区


.子程序 系统_取货币符号, 文本型, , 获取系统货币符号


.子程序 系统_取日期格式, 文本型, , 获取系统日期格式


.子程序 系统_取时间格式, 文本型, , 获取系统时间格式


.子程序 窗口_是否激活, 逻辑型, , 判断指定窗口是否激活状态，是则返回真，否则返回假。
.参数 窗口句柄, 整数型, , 



.子程序 窗口_取矩形, 精易_矩形, , 返回指定窗口的矩形信息
.参数 窗口句柄, 整数型, , 



.子程序 窗口_取客户区矩形, 精易_矩形, , 返回指定窗口的矩形信息
.参数 窗口句柄, 整数型, , 



.子程序 窗口_取样式, 整数型, , 返回指定窗口的窗口样式
.参数 窗口句柄, 整数型, , 



.子程序 窗口_取扩展样式, 整数型, , 返回指定窗口的扩展样式
.参数 窗口句柄, 整数型, , 



.子程序 窗口_取边框宽度, 整数型, , 返回指定窗口的宽度
.参数 窗口句柄, 整数型, , 



.子程序 窗口_取边框高度, 整数型, , 返回指定窗口的高度
.参数 窗口句柄, 整数型, , 



.子程序 文本_到小写m, 文本型, , 将文本中的大写英文字母变换为小写，返回变换后的结果文本。本命令为初级命令。
.参数 欲变换的文本, 文本型, , 



.子程序 文本_取右边, 文本型, , 从文本的右边按 欲寻找的文本 开始寻找, 取行右边 (“1234567890”, “5”, 1, 真)
.参数 被查找的文本, 文本型, , 被查找的文本
.参数 欲寻找的文本, 文本型, , 欲寻找的文本
.参数 起始寻找位置, 整数型, 可空, 可为空，默认为1，从右往左寻找，如果为负数，则从左往右寻找。
.参数 是否不区分大小写, 逻辑型, 可空, 默认为假,区分大小写



.子程序 目录_创建, 逻辑型, , 创建多级目录，成功返回真，失败返回假。如果指定目录存在也会返回真，不覆盖目录内容。
.参数 目录路径, 文本型, , 



.子程序 文件_定位, 逻辑型, , 成功则打开文件所在目录并选中文件，失败返回假,本命令为初级命令！
.参数 文件路径, 文本型, , 需提供文件绝对路径
.参数 编辑模式, 逻辑型, 可空, 重命名模式。



.子程序 目录_定位, 逻辑型, , 成功则打开文件所在目录并选中文件，失败返回假,本命令为初级命令！
.参数 文件路径, 文本型, , 需提供文件绝对路径
.参数 编辑模式, 逻辑型, 可空, 重命名模式。



.子程序 文件_句柄取路径, 文本型, , 根据文件句柄获取文件所在路径，失败返回空文本。
.参数 文件句柄, 整数型, , 



.子程序 文件_取属性, 整数型, , 返回一个文件或目录的属性。此属性值由以下常量或其和构成： 1、#只读文件； 2、#隐藏文件；  4、#系统文件； 16、#子目录；32、#存档文件 。要判断是否设置了某个属性，在返回值与想要得知的属性值之间使用“位与”命令进行比较。如果所得的结果不为零，则表示设置了这个属性值。如果取文件属性失败，将返回 -1。
.参数 文件名, 文本型, , 



.子程序 文件_取类型, 文本型, , 获取文件类型，如.exe文件，则返回“应用程序”，失败则返回空。
.参数 文件路径, 文本型, , 



.子程序 系统_取网络主机名, 文本型, , 取当前网络上登记的主机名，详细请参考CMD命令ipconfig /all 中的Windows IP 配置。


.子程序 系统_取网络主DNS后缀, 文本型, , 取当前网络主DNS后缀，详细请参考CMD命令ipconfig /all 中的Windows IP 配置。


.子程序 系统_取网络节点类型, 整数型, , 返回值：1=广播；2=点对点；4=混杂；8=混合。详细请参考CMD中的ipconfig /all Windows IP 配置。


.子程序 系统_IP路由是否启用, 逻辑型, , 判断当前网络连接中的IP路由是否启用，详细请参考CMD中的ipconfig /all Windows IP 配置。


.子程序 系统_WINS代理是否启用, 逻辑型, , 判断当前网络连接中的WINS代理是否启用，详细请参考CMD中的ipconfig /all Windows IP 配置。


.子程序 线程_关闭句柄, 逻辑型, , 关闭一个线程句柄，关闭后线程继续运行，但无法对该句柄进行操作。
.参数 线程句柄, 整数型, , 



.子程序 系统_取IE版本, 文本型, , 获取IE浏览器的版本


.子程序 进程_取优先级, 整数型, , 特殊进程需要特权，检索指定的进程的优先级。返回值：0=最高,1=高于标准,2=实时,3=标准,4=低于标准,5=低,返回-1表示无权限访问进程。
.参数 进程ID, 整数型, 可空, 欲设置的进程标识符,可为空，即自身进程。



.子程序 进程_置优先级, 逻辑型, , 特殊进程需要特权，设置一个进程的优先级别,成功返回真，失败返回假。
.参数 进程ID, 整数型, 可空, 欲设置的进程标识符,可为空，即自身进程。
.参数 进程级别, 整数型, 可空, 可为空，默认即0最高。0=最高,1=高于标准,2=实时,3=标准,4=低于标准,5=低



.子程序 窗口_取激活句柄, 整数型, , 取激活的窗口句柄。


.子程序 进程_取句柄数, 整数型, , 特殊进程需要特权，获取指定进程句柄数量,与XP系统任务管理器功能一样，失败返回-1。
.参数 进程ID, 整数型, 可空, 可为空，默认即当前进程。



.子程序 进程_取IO读取计数, 长整数型, , 特殊进程需要特权，获取指定进程IO读取计数,与XP系统任务管理器功能一样，失败返回-1。
.参数 进程ID, 整数型, 可空, 可为空，默认即当前进程。



.子程序 进程_取IO读取字节, 长整数型, , 特殊进程需要特权，获取指定进程IO读取字节数,与XP系统任务管理器功能一样，失败返回-1。
.参数 进程ID, 整数型, 可空, 可为空，默认即当前进程。



.子程序 进程_取IO其它计数, 长整数型, , 特殊进程需要特权，获取指定进程IO其它计数,与XP系统任务管理器功能一样，失败返回-1。
.参数 进程ID, 整数型, 可空, 可为空，默认即当前进程。



.子程序 进程_取IO其它字节, 长整数型, , 特殊进程需要特权，获取指定进程IO其它字节,与XP系统任务管理器功能一样，失败返回-1。
.参数 进程ID, 整数型, 可空, 可为空，默认即当前进程。



.子程序 进程_取IO写入计数, 长整数型, , 特殊进程需要特权，获取指定进程IO写入计数,与XP系统任务管理器功能一样，失败返回-1。
.参数 进程ID, 整数型, 可空, 可为空，默认即当前进程。



.子程序 进程_取IO写入字节, 长整数型, , 特殊进程需要特权，获取指定进程IO写入字节,与XP系统任务管理器功能一样，失败返回-1。
.参数 进程ID, 整数型, 可空, 可为空，默认即当前进程。



.子程序 字节集_到文本, 文本型, , 
.参数 字节集, 字节集, , 



.子程序 字节集_到整数, 整数型, , 
.参数 字节集, 字节集, , 
.参数 位置, 整数型, 可空, 默认为1



.子程序 字节集_取左边, 字节集, , 
.参数 字节集, 字节集, , 
.参数 欲取出字节的数目, 整数型, , 



.子程序 字节集_取右边, 字节集, , 
.参数 字节集, 字节集, , 
.参数 欲取出字节的数目, 整数型, , 



.子程序 字节集_取空白, 字节集, , 
.参数 零字节数目, 整数型, , 



.子程序 字节集_取长度, 整数型, , 
.参数 字节集, 字节集, , 



.子程序 字节集_取指定位置字节集, 字节集, , 
.参数 字节集, 字节集, , 
.参数 起始取出位置, 整数型, , 
.参数 欲取出字节的数目, 整数型, , 



.子程序 字节集_替换, 字节集, , 将指定字节集的某一部分用其它的字节集替换,然后返回替换后的结果.
.参数 欲替换其部分的字节集, 字节集, , 
.参数 起始替换位置, 整数型, , 替换的起始位置,1为首位置,2为第2个位置,如此类推.
.参数 替换长度, 整数型, , 
.参数 用作替换的字节集, 字节集, 可空, 可以被省略.如果本参数被省略,则删除字节集中的指定部分.



.子程序 字节集_寻找, 整数型, , 返回一字节集在另一字节集中最先出现的位置,位置值从 1 开始.如果未找到,返回 -1.
.参数 被搜寻的字节集, 字节集, , 
.参数 欲寻找的字节集, 字节集, , 
.参数 起始搜寻位置, 整数型, 可空, 1为首位置,2为第2个位置,如此类推,如果被省略,则“寻找字节集”命令默认从首部开始,“倒找字节集”命令默认从尾部开始.



.子程序 字节集_取指针, 整数型, , 
.参数 字节集, 字节集, , 



.子程序 类回调_取类地址, 整数型, , [只能在类里调用]
.参数 函数序号, 整数型, , 从1开始,[_初始化][_销毁],[xx]
.参数 参数个数, 整数型, 可空, 
.参数 push_ecx, 逻辑型, 可空, 附加到第一个参数;默认为假
.参数 cdecl方式, 逻辑型, 可空, 默认为假



.子程序 类回调_释放回调, 空白型, , 用于释放生成代码后的返回指针，若你确定你的回调已经停用了才能释放
.参数 ptr, 整数型, , 



.子程序 系统_调用帮助, 整数型, , 调用系统帮助设置
.参数 窗口句柄, 整数型, , hwnd
.参数 帮助文件, 文本型, , lpHelpFile
.参数 命令编号, 整数型, , wCommand



.子程序 编码_Ansi到ASCII_文本型, 文本型, , 此代码由易友【菜虫】提供， 将Ansi码转换为ASCII码，如：将“精易论坛”转换后将返回格式如：“&#48811&#53975&#49883&#52403”
.参数 Ansi, 文本型, , 欲转换的文本，如：“精易论坛”。



.子程序 取对象指针, 整数型, , 
.参数 对象数据, 对象, , 



.子程序 取变体型指针, 整数型, , 
.参数 变体型, 变体型, , 



.子程序 目录_取运行目录, 文本型, ,  取当前被执行的易程序文件所处的目录。


.子程序 窗口_限制尺寸, 逻辑型, , 限制窗口拉伸最小尺寸与最大尺寸，超出则无法拉伸。注意：不支持外部窗口。
.参数 窗口句柄, 整数型, , 
.参数 最小宽度, 整数型, 可空, 
.参数 最小高度, 整数型, 可空, 
.参数 最大宽度, 整数型, 可空, 
.参数 最大高度, 整数型, 可空, 



.子程序 窗口_取消尺寸限制, 逻辑型, , 取消 [窗口_限制尺寸] 的限制
.参数 窗口句柄, 整数型, , 
.参数 是否取消限制, 逻辑型, , 



.子程序 进程_取同名ID, 整数型, , 取相同名称进程，成功返回进程id数量。返回-1表示失败。
.参数 进程名, 文本型, , 
.参数 进程ID数组, 整数型, 可空 数组, 返回的进程ID 数组



.子程序 系统_信息框Ex, 整数型, , 消息规定时间内超时自动关闭，成功返回单击按钮ID，失败返回0
.参数 标题, 文本型, , 
.参数 内容, 文本型, , 
.参数 超时时间, 整数型, , 1000限1秒
.参数 按钮类型, 整数型, , 1 确定+取消 2 终止+重试+忽略  3 是+否+取消 4 是+否 5 重试+取消 　6 取消+重试+继续  16 红X+确定 17 红X+确定+取消 18 红X+终止+重试+忽略  19 红X+是+否+取消 20 红X+是+否  21 红X+重试+取消  32 蓝问号+确定  33 蓝问号+确定+取消   34 蓝问号+终止+重试+忽略   35 蓝问号+是+否+取消  36 蓝问号+是+否  37 蓝问号+重试+取消  48 黄叹号+确定 49 黄叹号+确定+取消 50 黄叹号+终止+重试+忽略  51 黄叹号+是+否+取消  52 黄叹号+是+否  53 黄叹号+重试+取消    64 蓝叹号+确定  65 蓝叹号+确定+取消  66 蓝叹号+终止+重试+忽略  67 蓝叹号+是+否+取消   68 蓝叹号+是+否   69 蓝叹号+重试+取消 



.子程序 文本_是否为字母, 逻辑型, , 中间不能有空格
.参数 文本字符, 文本型, , 



.子程序 目录_取桌面目录, 文本型, , 获取系统桌面的路径


.子程序 网页_创建快捷方式, 逻辑型, , 创建网页快捷方式
.参数 快捷方式文件名, 文本型, , 扩展名为.url全路径
.参数 网页地址, 文本型, , 
.参数 ico图标, 文本型, 可空, 
.参数 快捷键, 文本型, 可空, 如"CTRL+SHIFT+F"



.子程序 网页_取网络文件名, 文本型, , 取特殊网络文件名，如{35419830/13139680144000128.mp3?xcode=91d07544}，取出文件名为“我可以抱你吗.mp3”
.参数 网址, 文本型, , 



.子程序 网页_是否为网页, 逻辑型, , 判断输入的地址是否为URL地址。
.参数 网页地址, 文本型, , 



.子程序 网页_取网络文件尺寸, 长整数型, , 
.参数 欲取网络文件地址, 文本型, , 



.子程序 数组_取次数, 整数型, , 取指定数组成员出现相同数量，源码由易友【C盘是头猪】提供。
.参数 参数_数组, 文本型, 数组, 
.参数 参数_成员, 文本型, , 



.子程序 进程_取线程数, 整数型, , 通过进程ID或进程名获取指定进程线程数。
.参数 进程ID或进程名, 文本型, , 不区分大小写



.子程序 时间_取身份证判断, 逻辑型, , 判断身份证号是否正确，检测1900年到2030年中15位或18位身份证，正确返回真，错误返回假。
.参数 身份证号, 文本型, , 



.子程序 进程_枚举, 整数型, , 失败返回0，成功返回进程数量
.参数 进程名数组, 文本型, 参考 可空 数组, 返回的进程名 数组
.参数 进程ID数组, 整数型, 参考 可空 数组, 返回的进程ID 数组



.子程序 窗口_是否被遮挡, 逻辑型, , 判断一个窗口是否被置顶窗口遮挡，是否返回真，否则返回假。
.参数 窗口句柄, 整数型, , 



.子程序 文本_加密c, 字节集, , 支持密钥加密，成功返回加密后文本，失败返回空。
.参数 欲加密文本, 文本型, , 
.参数 密码, 文本型, 可空, 可为空，默认为 “bbs.125.la”



.子程序 文本_解密c, 文本型, , 支持密钥解密，成功返回解密后文本，失败返回空。
.参数 加密后文本, 字节集, , 
.参数 密码, 文本型, 可空, 可为空，默认为 “bbs.125.la”



.子程序 文本_加密, 文本型, , 失败返回空文本
.参数 参数_待加密文本, 文本型, , 待加密文本
.参数 参数_加密的密码, 文本型, , 加密的密码<建议5位以上的数字>



.子程序 文本_解密, 文本型, , 失败返回空文本
.参数 参数_待解密文本, 文本型, , 待解密文本
.参数 参数_解密的密码, 文本型, , 解密的密码<建议5位以上的数字>



.子程序 外部组合框_关闭列表, 空白型, , 关闭组合框下拉列表
.参数 句柄, 整数型, , 组合框句柄



.子程序 COM_连接命名空间, 整数型, , 成功返回一个IWbemServices类指针，失败返回零。
.参数 名字空间, 文本型, , 如“root\CIMV2”



.子程序 时间_WMI时间转日期, 日期时间型, , 失败返回  [100年1月1日]
.参数 WMI数据时间, 文本型, , 如“20140926001639.000000+480”



.子程序 线程_枚举, 整数型, , 枚举指定进程ID中所有线程列表，成功返回线程数量，失败返回零。
.参数 进程ID, 整数型, , 
.参数 线程列表, 整数型, 数组, 变量储存返回值。



.子程序 文本_取随机数字, 文本型, , 汇编_取随机数字，可选单或双！
.参数 字符数, 整数型, , 要取字符个数
.参数 单双选择, 整数型, 可空, 0为单双，1为单，其他数值为双；默认单双一起



.子程序 音乐_播放, 逻辑型, , 真=播放成功,假=播放失败。可用于同时播放多首音乐，只要标识不同
.参数 文件名, 文本型, , 支持格式:mp3,wav,其他格式没有测试..也可以是网络地址
.参数 标识, 文本型, , 不可以含有空格，用于标识播放了哪个歌曲,可用来控制该音乐。比如:mysong



.子程序 音乐_暂停, 逻辑型, , 暂时后，可调用 音乐_播放() 继续播放
.参数 标识, 文本型, , 音乐_播放中使用的标识



.子程序 音乐_停止, 逻辑型, , 禁止指定标识正在播放的音乐
.参数 标识, 文本型, , 音乐_播放中使用的标识，即使播放完毕也记得调用一次



.子程序 系统_转换为主机名, 文本型, , 将指定的 IP 地址转换为其主机名。如果失败返回空文本。
.参数 欲转换IP地址, 文本型, , 



.子程序 系统_转换为IP地址, 文本型, , 将指定的主机名转换为其 IP 地址。如果失败返回空文本。
.参数 欲转换主机名, 文本型, , 



.子程序 系统_通信测试, 整数型, ,  测试与指定主机是否能够正常通讯。返回被测试主机的通讯响应时间。如果无法通讯或者测试失败，返回 -1。
.参数 被测试主机地址, 文本型, , 可以为主机名、IP地址等。
.参数 最长等待时间, 整数型, 可空, 可以被省略。指定最长等待被测试主机响应的时间，单位为毫秒。超过此时间即认为无法与被测试主机通讯。如果省略本参数，则默认为 10 * 1000 毫秒，即 10 秒。



.子程序 编码_Unicode到Ansi_对象, 文本型, , 带BOM头信息编码转换。
.参数 欲转换的文本, 字节集, , 



.子程序 文件_取图标句柄, 整数型, , 获取文件的图标句柄
.参数 路径, 文本型, , 



.子程序 窗口_是否存在, 整数型, , 根据指定窗口句柄或窗口标题，查询一个窗口是否存在，成功返回窗口句柄，否则返回0。
.参数 参_句柄或标题, 文本型, , 支持窗口句柄与模糊标题



.子程序 窗口_等待出现, 整数型, , 等待指定窗口出现，成功返回窗口句柄，失败返回0，本命令类似于AU3脚本中WinWait命令。
.参数 参_标题, 文本型, , 支持模糊标题
.参数 参_内容, 文本型, 可空, 如果窗口标题相同，可以比较窗口内文本，支持模糊内容。
.参数 参_超时, 整数型, 可空, 单位为毫秒,超过此时间等待还没结果则返回0,留空则一直等待



.子程序 目录_取当前目录, 文本型, , 返回一个文本，用来代表当前的目录。如果失败，返回空文本。


.子程序 时间_格式化, 文本型, , 格式化指定日期与时间，失败返回空文本   GetTimeFormatA 该函数支持的最早时间是1600.1.1
.参数 参_欲格式化时间, 日期时间型, , 
.参数 参_日期格式, 文本型, 可空, 可以为空，格式：yyyy [年]，M [月],d [日],dddd [星期]，如;yyyy/M/d dddd(年/月/日 星期几)
.参数 参_时间格式, 文本型, 可空, 可以为空，格式：tt [上午或下午],h [小时],m [分钟], s [秒] 。如;hh:mm:ss(小时:分钟:秒),tt hh:mm:ss(上午或下午 小时:分钟:秒)
.参数 参_是否为24小时制, 逻辑型, 可空, 



.子程序 系统_取CPU序列号, 文本型, , 获取CPU序列号


.子程序 文件_取实际大小, 长整数型, , 获取一个文件在磁盘上实际占据的字节数，如文件右键属性中的大小，显示就是实际压缩过的尺寸
.参数 文件路径, 文本型, , 



.子程序 系统_取远程机器名, 文本型, ,  根据指定的IP地址取远程机器名称。失败返回空。
.参数 参_IP地址, 文本型, , 注；指定IP地址必需和本机在同一个域



.子程序 系统_远程关机, 逻辑型, , 可关闭本机或局域网指定计算机系统，成功返回真，失败返回假。
.参数 参_关闭方式, 整数型, 可空, 可为空，默认即关闭系统，0=注销 ，1=关机，2=重启，8=关闭电源(电源支持)
.参数 参_是否强制执行, 逻辑型, 可空, 默认非强制执行
.参数 参_计算机名, 文本型, 可空, 必须是局域网内计算机,为空则为本机,可以用 系统_取远程机器名(IP)
.参数 参_用户名, 文本型, 可空, 当参数 【参_计算机名】 为空时，可以忽略此参数
.参数 参_密码, 文本型, 可空, 当参数 【参_计算机名】 为空时，可以忽略此参数



.子程序 系统_取IE代理, 逻辑型, , 带参返回IE相关代理地址，详细请参考IE属性窗口代理中高级代理属性，成功返回真，失败返回假。
.参数 参_代理类型, 整数型, 参考 可空, 变量储存返回值,返回常量类型 INTERNET_OPEN_TYPE_PRECONFIG=0；INTERNET_OPEN_TYPE_DIRECT=1；INTERNET_OPEN_TYPE_PROXY=2
.参数 参_HTTP地址, 文本型, 参考 可空, 变量储存返回值
.参数 参_HTTPS安全地址, 文本型, 参考 可空, 变量储存返回值
.参数 参_FTP地址, 文本型, 参考 可空, 变量储存返回值
.参数 参_套接字地址, 文本型, 参考 可空, 变量储存返回值
.参数 参_例外地址, 文本型, 参考 可空, 变量储存返回值



.子程序 时间_取制式, 整数型, , 取当前系统时间制式，返回值；0表示12小时制，1表示24小时制


.子程序 进程_取父ID, 整数型, , 根据进程名或进程ID取出进程父ID，失败返回-1。
.参数 参_ID或名称, 文本型, , 进程PID或进程名称



.子程序 字节集_子替换, 字节集, , 将所有的预被替换的字节集用 用作替换的子字节集 替换
.参数 欲被替换的字节集, 字节集, , 
.参数 欲被替换的子字节集, 字节集, , 
.参数 用作替换的子字节集, 字节集, 可空, 可以被省略。如果省略本参数，则默认为空字节集。
.参数 进行替换的起始位置, 整数型, 可空, 可以被省略。被替换子字节集的起始搜索位置。如果省略，默认从1开始。
.参数 替换进行的次数, 整数型, 可空, 可以被省略。对子字节集进行替换的次数。如果省略，默认进行所有可能的替换。



.子程序 字节集_寻找子, 整数型, , 查找所有欲寻找的字节集 ，将每个位置放入 结果数组
.参数 被搜寻的字节集, 字节集, , 
.参数 欲寻找的字节集, 字节集, , 
.参数 结果数组, 整数型, 数组, 
.参数 开始偏移, 整数型, 可空, 



.子程序 编码_RC4加密, 字节集, , 
.参数 明文, 字节集, , 
.参数 密钥, 文本型, , 



.子程序 编码_RC4解密, 字节集, , 
.参数 密文, 字节集, , 
.参数 密钥, 文本型, , 



.子程序 汇编_取随机数, 整数型, , 返回一个指定范围内的随机数值。在使用本命令取一系列的随机数之前，应该先使用“置随机数种子”命令为随机数生成器初始化一个种子值。本命令为初级命令。
.参数 欲取随机数的最小值, 整数型, 可空, 参数必须大于或等于零。本参数如果被省略，默认为 0。
.参数 欲取随机数的最大值, 整数型, 可空, 参数必须大于或等于零。本参数如果被省略，默认为无限。



.子程序 时间_时间戳转文本, 文本型, , 把一个13位的时间戳，如：1325252169718 转成 2011-12-30 21:36:09
.参数 时间戳, 文本型, , 



.子程序 时间_到时间戳, 文本型, , 把指定日期时间转换为10位或13位时间戳,默认生成13位时间戳。13位：1325252169718，10位：1325252169
.参数 参_时间, 日期时间型, 可空, 可为空，默认为现行时间
.参数 参_十位时间戳, 逻辑型, 可空, 本参数为真时，将生成10位时间戳返回
.参数 参_是否取满10位, 逻辑型, 可空, 如果参数为真，则保证一定取出至少10位，如果不足10位，在前面补0. 如果为假，则直接取出



.子程序 线程_置CPU, 整数型, , 设置线程在指定CPU上运行
.参数 参_线程句柄, 整数型, , 
.参数 参_CPU序号, 整数型, , CPU序号的或运算值：1（0001）代表只运行在CPU1，2（0010）代表只运行在CPU2，3（0011）代表可以运行在CPU1和CPU2，以此类推。



.子程序 时间_同步校时, 日期时间型, , 调用http://www.baidu.com网址接口,win8以上系统需要管理员权限
.参数 参_是否同步, 逻辑型, 可空, 是否同步到北京时间，为空默认不同步



.子程序 系统_是否为管理员, 逻辑型, , 判断当前程序是否在管理员模式下运行，是返回真，否返回假。


.子程序 程序_禁止重复运行, 空白型, , 禁止当前程序多开运行
.参数 标识文本, 文本型, 可空, 尽量输复杂一点的文本
.参数 是否弹出信息框提示, 逻辑型, 可空, 默认为假,不弹出提示;
.参数 消息框提示文本, 文本型, 可空, 第二个参数设置为假,该参数则无效
.参数 消息框提示图标, 整数型, 可空, 默认为信息图标，如：#信息图标
.参数 是否前端显示程序, 逻辑型, 可空, 如果已重复运行,是否将程序在前端显示



.子程序 线程_取状态, 整数型, , 0=线程已结束  1=线程正在运行  -1=线程句柄已失效或销毁
.参数 参_线程句柄, 整数型, , 



.子程序 编码_BASE64编码A, 字节集, , Api版，编码_BASE64编码
.参数 待编码数据, 字节集, , 



.子程序 编码_BASE64解码A, 字节集, , Api版，编码_BASE64解码
.参数 待解码数据, 字节集, , 



.子程序 窗口_句柄取进程路径, 文本型, , 根据指定窗口句柄获取程序文件路径，失败返回空！
.参数 窗口句柄, 整数型, , 



.子程序 文本_是否为数字, 逻辑型, , 中间不能有空格,判断指定文本是否是数字
.参数 参_文本, 文本型, , 



.子程序 数组_合并, 文本型, , 连接数组，类似VB中的join方法,合并一个文本数组到字符串。
.参数 文本数组, 文本型, 数组, 
.参数 合并字符, 文本型, 可空, 可空，默认为,



.子程序 文本_倒取出中间文本, 文本型, , 比如：欲取全文本为“0012345”,现在要取出“123”，<123>的右边为“4”，<123>的左边为“0”，注意这里是倒取
.参数 欲取全文本, 文本型, , 比如：欲取全文本为“0012345”
.参数 右边文本, 文本型, , 123的右边为“4”，引号直接用 #引号，如："<font color=#引号red#引号>" 注意左右
.参数 左边文本, 文本型, , 123的左边为“0”，引号直接用 #引号，如："<font color=#引号red#引号>" 注意左右
.参数 倒数搜寻位置, 整数型, 可空, 可空,这里是指搜寻 参数二 右边文本的开始位置
.参数 是否不区分大小写, 逻辑型, 可空, 默认为假：区分大小写 真：不区分大小写



.子程序 进制_十到二, 文本型, , 将十进制转换成二进制  @福仔
.参数 十进制数, 整数型, , 



.子程序 时间_取月初, 日期时间型, , 源码由论坛用户【ds9660】雕哥提供。
.参数 参_指定时间, 日期时间型, 可空, 



.子程序 时间_取月末, 日期时间型, , 源码由论坛用户【ds9660】雕哥提供。
.参数 参_指定时间, 日期时间型, 可空, 



.子程序 时间_取某年天数, 整数型, , 阳历。
.参数 某时间, 日期时间型, , 



.子程序 时间_取月总天数, 整数型, , 阳历。
.参数 输入_年, 整数型, , 
.参数 输入_月, 整数型, , 



.子程序 时间_取第几周, 空白型, , 查询指定日期是第几周
.参数 参_指定日期, 日期时间型, 可空, 
.参数 参_当月第几周, 整数型, 参考 可空, 
.参数 参_当年第几周, 整数型, 参考 可空, 



.子程序 进程_守护, 逻辑型, , 前台版会在运行目录下生成AutoRunApp.vbs隐藏文件，后台版会在运行目录下生成AutoRunApp.bat隐藏文件,注意：后台版需手动结束wscript.exe进程
.参数 参_程序路径, 文本型, , 目标程序的完整路径
.参数 参_后台守护, 逻辑型, 可空, 为假则以控制台前台显示



.子程序 文本_自动补零, 文本型, , 当指定文本长度不足时前面自动补零，通用用于数据库序列号
.参数 参_欲补齐文本, 文本型, , 
.参数 参_补齐长度, 整数型, , 



.子程序 时间_格林威治转北京, 日期时间型, , 将【格林威治的标准时间】转换成【北京标准时间】,源码修改至官方用户
.参数 要转换的格林威治时间, 长整数型, , 要转换的格林威治时间



.子程序 时间_取月份, 文本型, , 返回一个月份,源码由论坛用户【shandmail 】提供
.参数 目标时间, 日期时间型, 可空, 如果空或为零时取下面时间的返回月份
.参数 是否英文, 逻辑型, 可空, 



.子程序 进制_十到十六, 文本型, , 十进制到十六进制（支持负数）@LLJ
.参数 十进制长整数, 长整数型, , 不支持无符号长整数型，易BUG，超过15位长整数型，不能直接使用，必须 用 到长整数()转换
.参数 是否在前端补零, 逻辑型, 可空, 如果为真，则自动在前面补0，补足位数。如果为假，则不补零；默认为假



.子程序 文本_逐字分割, 整数型, , 将指定文本,逐字分割成数组,保存为指定的变量数组中,返回成员个数,可识别换行符及全半角字符和汉字
.参数 文本, 文本型, , 需要分割的文本
.参数 返回的数组, 文本型, 参考 可空 数组, 保存分割结果的数组变量



.子程序 窗口_挂起, 整数型, , 成功返回挂起计数，失败返回-1
.参数 参_窗口句柄, 整数型, , 
.参数 参_是否挂起, 逻辑型, 可空, 



.子程序 系统_取系统版本, 文本型, , 支持获取win98、win2000 、winXP、win2003 、win2008 、win7 、win8 、win2012、win8.1 、win10 系统版本。
.参数 参_主版本, 整数型, 参考 可空, 变量储存返回值
.参数 参_次版本, 整数型, 参考 可空, 变量储存返回值
.参数 参_是否带名称, 逻辑型, 可空, 是否带版本名称描述，如 专业版，企业版等
.参数 参_是否取位数, 逻辑型, 可空, 操作系统位数，如32位或64位
.参数 参_取SP版本号, 逻辑型, 可空, 
.参数 参_取内部版本, 逻辑型, 可空, build内部版本



.子程序 文本_是否小写字母, 逻辑型, , 中间不能有空格,By:邓学彬(泪闯天涯)
.参数 字符串, 文本型, , 



.子程序 文本_是否大写字母, 逻辑型, , 中间不能有空格,By:邓学彬(泪闯天涯)
.参数 字符串, 文本型, , 



.子程序 字节集_文本转字节集, 字节集, , 将“字节集_字节集转文本”得到的文本字节集重新转换为字节集。感谢【御风软件】提供代码
.参数 文本字节集, 文本型, , 



.子程序 时间_取北京时间戳, 文本型, , 生成一个13位或者10位的北京时间戳，默认生成13位时间戳。13位：1325252169718，10位：1325252169。使用网站：【http://www.114time.com/】接口。
.参数 是否取十位时间戳, 逻辑型, 可空, 本参数为真时，将生成10位时间戳返回



.子程序 指针_到整数, 整数型, , 
.参数 整数指针, 整数型, , 



.子程序 文件_路径是否规范, 逻辑型, , 用于【严格】检查完整路径是否规范。检查规则：盘符:\目录名\二级目录名\文件名.文件后缀
.参数 要检查的完整路径, 文本型, , 
.参数 是否不检查后缀, 逻辑型, 可空, 用于指定是否检查文件的后缀，如果为假，则忽略文件后缀。默认为真



.子程序 目录_是否符合规范, 逻辑型, , 【严格】检查目录是否合规范，不和规范的目录返回假。判断标准:盘符:\目录
.参数 要检查的目录, 文本型, , 需要检查的完整的目录路径，不接受相对路径
.参数 是否禁止为根目录, 逻辑型, 可空, 如果设置为真，如果是盘符根目录返回假。默认为真。



.子程序 网页_Cookie合并更新, 文本型, , 返回更新后的Cookie
.参数 旧Cookie, 文本型, 参考, 
.参数 新Cookie, 文本型, , 



.子程序 进程_是否被挂起, 逻辑型, , 检测进程是否被暂停，亦可用于窗口是否假死
.参数 进程PID, 整数型, , 
.参数 超时时间, 整数型, 可空, 检测窗口的响应时间，超时则为假死，单位：毫秒；可空，默认100毫秒



.子程序 窗口_取窗口属性, 整数型, , 如果函数成功，返回值是所需的32位值；如果函数失败，返回值是0。若想获得更多错误信息请调用 GetLastError函数。
.参数 窗口句柄, 整数型, , 获取指定的窗口风格属性
.参数 类型, 整数型, , 参考常量GWL相关



.子程序 窗口_置窗口属性, 整数型, , 如果函数成功，返回值是指定的32位整数的原来的值。如果函数失败，返回值为0。若想获得更多错误信息，请调用GetLastError函数。
.参数 窗口句柄, 整数型, , 设置指定的窗口风格属性，如将有边框窗口设置为无边框窗口
.参数 属性, 整数型, , 参考常量GWL相关
.参数 新样式, 整数型, , 调用 窗口_取窗口属性 获取对应属性值并设置对应属性值



.子程序 程序_取文件版本号, 文本型, , 取某程序的版本号信息，若为易语言程序，该版本号可以在配置里修改，如果在调试中，则返回空文本。一个易语言程序会获取到版本号和创建号，比如1.1.0.0，如果只需要1.1的部分，第三个参数设置为真即可。如果第一个参数不为空，则获取其他文件的版本号信息。源码由雪山凌狐提供
.参数 程序路径, 文本型, 可空, 取出指定程序的版本号信息，如果留空，则取当前执行文件的版本号
.参数 错误信息, 文本型, 参考 可空, 用于返回错误信息的
.参数 忽略创建号, 逻辑型, 可空, 默认为真，忽略创建号，比如获取到的版本号为1.1.0.0，会返回1.1



.子程序 文件_取文件版本号, 文本型, , 返回指定文件的版本号
.参数 FullFileName, 文本型, , 
.参数 错误信息, 文本型, 参考 可空, 



.子程序 文件_枚举EX, 空白型, , 遍历特定目录特定后缀名的所有文件，结果在回调函数中输出，源码由雪山凌狐提供
.参数 查找的目录, 文本型, , 程序内部会自动给目录结尾加上“\”
.参数 后缀名, 文本型, 可空, 默认为“*”，即查找所有后缀名文件，如果传入空文本参数，则同样视为遍历所有后缀名文件
.参数 是否遍历子目录, 逻辑型, 可空, 默认为假，即仅遍历根目录的文件
.参数 回调函数, 子程序指针, 可空, 指定一个外部的子程序可以在每次找出一个文件的时候运行，该函数的第一个参数为查找到的文件名，第二个参数为文件的完整路径



.子程序 网页_访问_对象, 字节集, , 使用WinHttp的对象方式访问网页
.参数 网址, 文本型, , 完整的网页地址,必须包含http://或者https://
.参数 访问方式, 整数型, 可空, 0=GET 1=POST 2=HEAD 3=PUT  4=OPTIONS  5=DELETE  6=TRACE  7=CONNECT
.参数 提交信息, 文本型, 可空, "POST"专用   自动UTF8编码
.参数 提交Cookies, 文本型, 参考 可空, 设置提交时的cookie
.参数 返回Cookies, 文本型, 参考 可空, 返回的Cookie
.参数 附加协议头, 文本型, 可空, 一行一个请用换行符隔开
.参数 返回协议头, 文本型, 参考 可空, 返回的协议头
.参数 返回状态代码, 整数型, 参考 可空, 网页返回的状态代码，例如：200；302；404等
.参数 禁止重定向, 逻辑型, 可空, 默认不禁止网页重定向
.参数 字节集提交, 字节集, 可空, 提交字节集数据
.参数 代理地址, 文本型, 可空, 代理地址，格式为 8.8.8.8:88
.参数 超时, 整数型, 可空, 秒|默认为15秒,-1为无限等待
.参数 代理用户名, 文本型, 可空, 用户名
.参数 代理密码, 文本型, 可空, 密码
.参数 代理标识, 整数型, 可空, 代理标识，默认为1，0为路由器
.参数 对象继承, 对象, 可空, 此处可自行提供对象，不再主动创建
.参数 是否自动合并更新Cookie, 逻辑型, 可空, 默认为真，自动合并更新
.参数 是否补全必要协议头, 逻辑型, 可空, 当附件协议头为空时自动添加必要的UA协议头 默认为真，假将不再添加非传入协议头
.参数 是否处理协议头大小写, 逻辑型, 可空, 将协议头中的键名首字母处理为大写  默认为真



.子程序 网页_访问, 字节集, , 使用WinInet的API方式访问网页
.参数 网址, 文本型, , 完整的网页地址,必须包含http://或者https://
.参数 访问方式, 整数型, 可空, 0=GET 1=POST 2=HEAD 3=PUT  4=OPTIONS  5=DELETE  6=TRACE  7=CONNECT
.参数 提交信息, 文本型, 可空, POST专用
.参数 提交Cookies, 文本型, 参考 可空, 设置提交时的cookie
.参数 返回Cookies, 文本型, 可空, 返回的Cookie
.参数 附加协议头, 文本型, 可空, 一行一个请用换行符隔开,建议填写常量值或文本值,防止因传参引发错误
.参数 返回协议头, 文本型, 参考 可空, 返回的协议头
.参数 禁止重定向, 逻辑型, 可空, 默认不禁止网页重定向
.参数 字节集提交, 字节集, 可空, 提交字节集数据
.参数 代理地址, 文本型, 可空, 代理地址，格式为:ip:port,例如:8.8.8.8:88
.参数 是否自动合并更新Cookie, 逻辑型, 可空, 默认为真，自动合并更新
.参数 是否补全必要协议头, 逻辑型, 可空, 当附件协议头为空时自动添加必要的UA协议头 默认为真，假将不再添加非传入协议头
.参数 是否处理协议头大小写, 逻辑型, 可空, 将协议头中的键名首字母处理为大写  默认为真



.子程序 rar_压缩, 文本型, , 压缩文件或文件夹，若成功返回空文本，失败则返回错误提示。
.参数 被压缩的文件, 文本型, , 文件或文件夹都可以
.参数 压缩到的路径, 文本型, , 全路径和rar/zip文件名，填入完整的路径，该路径所在文件夹必须存在，否则会失败
.参数 压缩密码, 文本型, 可空, 设置压缩密码
.参数 注释地址, 文本型, 可空, 注释文本文件的完整路径，以txt结尾
.参数 是否等待, 逻辑型, 可空, 默认为假，不等待，为真则为等待压缩完毕
.参数 是否显示压缩过程, 逻辑型, 可空, 默认为假，不显示
.参数 压缩程度, 整数型, 可空, 范围为1-5,1的压缩程度最小，5压缩程度最大，但时间最久。默认为3，如果传值不正确也为3



.子程序 rar_解压, 文本型, , 解压压缩包，成功返回空文本，失败返回错误提示。
.参数 压缩文件完整路径, 文本型, , 全路径带上rar/zip文件名
.参数 解压到的文件夹, 文本型, , 文件夹全路径
.参数 解压密码, 文本型, 可空, 压缩时设定的解压密码
.参数 是否覆盖已存在的文件, 逻辑型, 可空, 默认为假
.参数 是否等待, 逻辑型, 可空, 是否等待解压完毕，默认为假，为真则解压完成后才运行后面的代码
.参数 是否显示解压过程, 逻辑型, 可空, 默认为假，不显示



.子程序 rar_添加文件注释, 文本型, , 给已经压缩好的压缩文件添加注释 成功返回空文本，失败返回错误提示。
.参数 压缩文件完整路径, 文本型, , 压缩文件全路径，rar/zip
.参数 注释文件地址, 文本型, , 以txt结尾的完整路径
.参数 是否等待, 逻辑型, 可空, 默认为假，不等待
.参数 是否显示过程, 逻辑型, 可空, 默认为假，不显示



.子程序 rar_删除压缩包内的文件, 文本型, , 删除压缩包里面的文件，成功返回空文本，失败返回错误提示。
.参数 压缩文件, 文本型, , 压缩文件全路径 rar/zip
.参数 要删除的文件名, 文本型, , 文件名不能带路径，但是要带后缀，如果是最后一个文件，那么整个压缩包会被删除
.参数 是否等待, 逻辑型, 可空, 默认为假，不等待
.参数 是否显示过程, 逻辑型, 可空, 默认为假，不显示



.子程序 时间_格式化EX, 文本型, , 将易语言中默认获取到的含有汉字的时间格式化为不含汉字的时间，源码由雪山凌狐提供
.参数 未格式化时间, 日期时间型, , 使用易语言自带命令：取现行时间()等获取到的含汉字的时间
.参数 日期间间隔, 文本型, 可空, 默认为“-”
.参数 时间间间隔, 文本型, 可空, 默认为“:”
.参数 返回模式, 整数型, 可空, 模式1为只返回时间（时分秒），模式为2为只返回日期（年月日），模式3为两者都返回，模式4为都返回，但日期与时间之间没有空格。如果为空，默认为1，如果不符合要求，返回为空



.子程序 目录_处理, 文本型, , 检测最后一个字符是否为“\”如果不是则加上，某些支持库或组件要求必须结尾有\等符号才能识别为目录。源码由雪山凌狐提供
.参数 要处理的目录, 文本型, , 传入要检测和处理的目录路径



.子程序 到逻辑型, 逻辑型, , 为了方便将文本型的真假二字转换成逻辑型数据或整数型转换为逻辑型编写的子程序，如果输入空值会默认返回假.源码由雪山凌狐提供
.参数 欲转换的文本型数据, 文本型, 可空, 正常的文本型数据为“真”字或者“假”字，其他情况一律返回假，为空时默认返回假，跟整数型数据二选其一
.参数 欲转换的整数型数据, 整数型, 可空, 传入0返回假，其他整数都返回真，若为空，默认传入0，返回假，跟文本型数据二选其一
.参数 转换模式, 整数型, 可空, 模式1为文本型，模式2为整数型，传入其他或为空则默认为模式1



.子程序 编码_Ansi到Utf8_无BOM文件, 逻辑型, , 将文本内容写出保存成utf8无BOM格式编码文件。成功返回真，失败返回假。源码由雪山凌狐提供
.参数 文本, 文本型, , 请输入要转换的文本
.参数 保存路径, 文本型, , 请输入保存到的文件的完整路径



.子程序 进制_三十六到十, 长整数型, , 将三十六进制文本转换为十进制长整数，暂不支持负数。源码由雪山凌狐提供
.参数 三十六进制文本, 文本型, , 传入三十六进制的文本，必须为字母或者数字，字母无论大小写，但最好大写



.子程序 进制_十到三十六, 文本型, , 将十进制数转换为三十六进制文本，暂不支持负数，返回的三十六进制文本若有字母默认为大写字母。源码由雪山凌狐提供
.参数 十进制数, 长整数型, , 传入十进制数



.子程序 进程_取命令行, 文本型, , 取指定进程ID的命令行.64位系统专用
.参数 PID, 整数型, , 



.子程序 文件_取文件信息, 文本型, , 取指定文件相关信息，默认取备注
.参数 文件路径, 文本型, , 
.参数 类型, 整数型, 可空, “1备注”, “2公司名”, “3描述”, “4文件版本”, “5内部名称”, “6版权”, “7合法商标”, “8原文件名”, “9个人用编译版说明”, “10产品名称”, “11产品版本”, “12特殊编译版说明”



.子程序 进程_取用户名, 文本型, , 获取指定进程的用户名
.参数 进程PID, 整数型, , 



.子程序 字节集_取中间, 字节集, , 取指定字节集中 指定前后字节集中间的数据，用法与”文本_取出中间文本“类似
.参数 要操作的字节集, 字节集, , 
.参数 前面字节集, 字节集, , 
.参数 后面字节集, 字节集, , 
.参数 起始搜寻位置, 整数型, 可空, 可空。1为首位置，2为第2个位置，如此类推，如果被省略，则“寻找字节集”命令默认从首部开始，“倒找字节集”命令默认从尾部开始。



.子程序 进程_取命令行32, 文本型, , 取指定进程ID的命令行.32位系统专用
.参数 进程ID, 整数型, , 



.子程序 进程_内存使用, 双精度小数型, , 查看指定进程ID的内存使用情况
.参数 PID, 整数型, , 
.参数 返回单位, 整数型, 可空, 0=Byte，1=KB，2=MB，3=GB，默认为1



.子程序 进程_ID取窗口句柄EX, 整数型, , 通过枚举窗口信息对比来获取指定进程ID的窗口句柄
.参数 进程ID, 整数型, , 



.子程序 系统_是否为默认字体, 逻辑型, , 返回屏幕字体大小，如果字体不是较小默认值，返回假


.子程序 校验_取sha512, 文本型, , 
.参数 数据, 字节集, , 



.子程序 校验_取sha256, 文本型, , 
.参数 数据, 字节集, , 



.子程序 对称加密, 字节集, , 支持 RC2/4，AES，DES，3DES
.参数 数据, 字节集, , 
.参数 密钥, 字节集, , 如果不是RC2和RC4，则密钥长度必须为块大小,否则会填充{0}或截取
.参数 算法, 文本型, 可空, 
.参数 填充, 整数型, 可空, 见：数据填充_*** 默认为 PKCS5_PADDING，如果是RC2和RC4，无需提供
.参数 IV, 字节集, 可空, 如果是RC2和RC4，无需提供，否则默认为16个{0}字节



.子程序 对称解密, 字节集, , 支持 RC2/4，AES，DES，3DES
.参数 数据, 字节集, , 
.参数 密钥, 字节集, , 如果不是RC2和RC4，则密钥长度必须为块大小,否则会填充{0}或截取
.参数 算法, 文本型, 可空, 
.参数 填充, 整数型, 可空, 见：数据填充_*** 默认为 PKCS5_PADDING，如果是RC2和RC4，无需提供
.参数 IV, 字节集, 可空, 如果是RC2和RC4，无需提供，否则默认为16个{0}字节



.子程序 AES_DES_算法, 字节集, , 参考常量  #对称算法_
.参数 对称算法, 文本型, , 参考常量  #对称算法_
.参数 数据, 字节集, , 
.参数 密钥, 字节集, , 
.参数 是否加解, 逻辑型, , 真=加密



.子程序 校验_取hmac_md5, 文本型, , 
.参数 数据, 字节集, , 
.参数 密钥, 文本型, , 



.子程序 目录_取特定目录EX, 文本型, , 1 AppDat局_项名数据 2 IE临时目录  3 局_项数组DBurning  4 局_项数组ookies  5 桌面  6 收藏夹  7 字体  8 历史记录  9 Lo局_项数组alAppDat局_项名数据 10 Lo局_项数组alSettings  11 我的音乐  12 我的图片  13 我的视频  14 NetHood  15 我的文档  16 PrintHood  17 开始_程序  18 我最近的文档  19 发送到  20 开始菜单  21 启动文件夹  22 Templates  23 所有用户_管理工具  24 所有用户_AppDat局_项名数据 25 所有用户_桌面  26 所有用户_文档  27 所有用户_收藏夹  28 所有用户_开始_程序  29 所有用户_开始菜单  30 所有用户_启动文件夹  31 所有用户_Templates  32 所有用户_音乐  33 所有用户_图片  34 所有用户_视频  35 临时目录  36 安装目录  37 系统目录  38 用户目录  39 所有用户  40 程序文件  41 所有用户_程序文件  42 系统盘  43 软件安装目录
.参数 选择类型, 整数型, 可空, [beineimao]



.子程序 文件_取MP3播放时间, 文本型, , Mp3文件的全曲时间,仅支持MP3文件,如果文件不存在，将返回空
.参数 文件名, 文本型, , 
.参数 类型, 整数型, 可空, 0；总长度  1；分+秒  2；秒



.子程序 键鼠_锁定, 整数型, , 阻塞键盘及鼠标事件到达应用程序【beineimao】
.参数 状态, 逻辑型, , 真=锁定



.子程序 文件_取图标, 字节集, , 返回指定文件路径文件的图标
.参数 窗口句柄, 整数型, , 当前程序的窗口句柄
.参数 文件路径, 文本型, , 文件的完整路径
.参数 宽度, 整数型, , 
.参数 高度, 整数型, , 
.参数 背景色, 整数型, 可空, 



.子程序 窗口_取父句柄EX, 整数型, , 获取指定窗口句柄的父句柄
.参数 窗口句柄, 整数型, , 
.参数 超时, 整数型, 可空, 为空则无限循环



.子程序 鼠标_删除鼠标移入移出事件, 整数型, , 本命令由【不想说话的树】提供
.参数 组件句柄, 整数型, , 



.子程序 鼠标_删除所有鼠标移入移出事件, 空白型, , 


.子程序 鼠标_添加鼠标移入移出事件, 空白型, , 添加鼠标移入移出事件
.参数 句柄, 整数型, , 指定控件句柄可以是任何组件
.参数 移入事件, 子程序指针, , 
.参数 移出事件, 子程序指针, , 



.子程序 信号量_创建, 整数型, , 创建一个信号量。成功返回信号量句柄，失败返回0 。
.参数 初始数值, 整数型, 可空, 
.参数 最大数值, 整数型, 可空, 如果留空 默认为1
.参数 标识, 文本型, 可空, 



.子程序 信号量_打开, 整数型, , 打开一个信号量。成功返回信号量句柄，失败返回0 。
.参数 标识, 文本型, 可空, 



.子程序 信号量_销毁, 逻辑型, , 销毁指定信号量。
.参数 句柄, 整数型, , 



.子程序 信号量_增加, 逻辑型, , 成功返回真，失败返回假。
.参数 句柄, 整数型, , 
.参数 递增数值, 整数型, 可空, 留空为1 要增加的值，这个值必须大于0。
.参数 返回递增前的值, 整数型, 参考 可空, 返回信号量上次的值（被增加前的值）。



.子程序 信号量_递减, 逻辑型, , 成功返回真，失败返回假。
.参数 句柄, 整数型, , 
.参数 超时值, 整数型, 可空, 



.子程序 编码_URL编码_JS, 文本型, , 
.参数 参_待编码文本, 文本型, , 
.参数 参_类型, 整数型, 可空, 默认：0     0=encodeURI 1=encodeURIComponent  



.子程序 自绘窗口_鼠标点击, 空白型, , 对指定窗口指定坐标进行鼠标操作
.参数 主窗口句柄, 整数型, 可空, 可空:为桌面超级列表框句柄 接收鼠标消息窗口句柄
.参数 横坐标, 整数型, 可空, 可空:为原水平坐标不变 移动目标鼠标水平坐标 (注:坐标为参数一窗口句柄中的坐标)
.参数 纵坐标, 整数型, 可空, 可空:为原垂直坐标不变 移动目标鼠标垂直坐标
.参数 鼠标键, 整数型, 可空, 可空:为左键 1 #左键 2 #右键 3 #中键 4 #中键上滚动 5 #中键下滚动(滚动前后请按下放开中键)
.参数 键状态, 整数型, 可空, 可空:为单击 1 #单击 2 #双击 3 #按下 4 #放开



.子程序 自绘窗口_投递文本, 空白型, , 往指定的自绘投递文本
.参数 主窗口句柄, 整数型, , 
.参数 投递内容, 文本型, , 



.子程序 自绘窗口_取信息, 文本型, , 通过名称，状态，类型来获取相关的元素信息，如果需要更多信息请使用【自绘窗口_解析】 线程中调用请在线程头部加上  线程_初始化com库
.参数 窗口句柄, 整数型, , 自绘窗口句柄
.参数 控件名称, 文本型, , 自绘控件的名称
.参数 控件状态, 文本型, , 自绘控件的状态
.参数 控件类型, 文本型, , 自绘控件的类型
.参数 获取类型, 整数型, 可空, 默认：0  0=控件描述，1=控件值，2控件大小，3控件相对主窗口位置，4=状态标识，5=类型标识
.参数 返回索引, 整数型, 可空, 如果返回多个相同信息的，按传入索引返回信息，默认为1



.子程序 自绘窗口_格式化信息, 精易_详细信息, , 获取指定对象下的相关元素信息  线程中调用请在线程头部加上  线程_初始化com库
.参数 参_对象, 类_Accessible, , 指定自绘窗口的元素对象



.子程序 自绘窗口_解析, 逻辑型, , 枚举指定自绘窗口元素信息  线程中调用请在线程头部加上  线程_初始化com库
.参数 窗口句柄, 整数型, , 
.参数 类型标识, 文本型, 可空, 指定自绘窗口的类型标识  支持多类型 | 间隔与结尾 如：“42|16|”   单个标识“42|”
.参数 状态标识, 文本型, 可空, 指定自绘窗口的状态标识  支持多类型 | 间隔与结尾 如：“0|32768|” 单个标识“32768|”
.参数 是否可见, 逻辑型, 可空, 如果传入的状态标识包含 32768 与 32769 此参数请留空
.参数 元素信息, 精易_详细信息, 参考 数组, 返回解析的元素控件所有信息数组



.子程序 进度条_模拟S, 空白型, , 画板高度调个20就行了。宽度自己看着调,源码由【yangyitzzg】提供
.参数 画板, 画板, , 
.参数 最大位置, 整数型, , 
.参数 当前位置, 整数型, , 
.参数 进度条颜色, 整数型, 可空, 可人，默认为红色；比如 生命值 一般都用红色，真气值一般都用蓝色
.参数 提示文本, 文本型, 可空, 比如 生命值 或者 真气值。留空不显示。和[是否显示百分比]二选一
.参数 提示文本位置, 整数型, 可空, 默认:画板.宽度 ÷ 2 － 40
.参数 输出百分比, 整数型, 参考 可空, 用一个变量来接收百分比;不用的话可以留空；
.参数 是否显示百分比, 逻辑型, 可空, 是否显示百分比；如 80%。。留空不显示。和[提示文本]二选一



.子程序 程序_生成GUID, 文本型, , 生成标准的GUID格式：635897F8-2A48-4882-B3E1-823B8E5B6DF8


.子程序 文本_取随机Ip, 文本型, , 返回一个随机的IP地址
.参数 只取国内, 逻辑型, 可空, 可空，默认为真



.子程序 系统_加入域, 逻辑型, , 加入指定系统域，成功返回真，失败返回假，重启后生效。
.参数 域名称, 文本型, , 
.参数 用户名, 文本型, , 
.参数 密码, 文本型, , 



.子程序 系统_退出域, 逻辑型, , 退出指定系统域，成功返回真，失败返回假，重启后生效。
.参数 域名称, 文本型, , 
.参数 用户名, 文本型, , 
.参数 密码, 文本型, , 



.子程序 系统_创建还原点, 整数型, , 创建系统还原点，成功返回还原点ID，失败返回Null，系统还原服务必须开启或还原服务打开，更新信息请参考[控制面板—>系统属性->系统保护页。
.参数 描述, 文本型, , 
.参数 类型, 整数型, 可空, 可为空，默认即程序安装，参数 1＝程序安装；2＝程序卸载；3＝驱动安装；4＝系统。



.子程序 系统_删除还原点, 逻辑型, , 删除指定还原点，成功返回真，失败返回假。
.参数 还原点ID, 长整数型, , 由“创建还原点()”返回。



.子程序 系统_修改用户名, 逻辑型, , 修改系统用户名
.参数 新用户名, 文本型, , 



.子程序 网页_eval解密, 文本型, , 
.参数 原JS文本, 文本型, , 需要加密\解密的JS源文本



.子程序 网页_eval加密, 文本型, , 
.参数 原JS文本, 文本型, , 需要加密\解密的JS源文本



.子程序 程序_COM生成GUID, 文本型, , 生成返回一个新的全球唯一的随机GUID文本值
.参数 GUID, GUID, 参考 可空, 保存生成的GUID到此参数变量中



.子程序 系统_添加计划任务, 文本型, , 向系统中增加一个计划任务，该操作在WIN7上面需要管理员权限
.参数 计划任务名, 文本型, , 用于显示在系统中的计划任务的名称
.参数 计划任务执行文件路径, 文本型, , 执行文件的路径，可以EXE也可以BAT
.参数 计划任务执行方式, 整数型, , 方式有以下几种：6=一次，7=在系统启动时，8=在用户登录时，9=在系统空闲时。
.参数 执行任务的用户名, 文本型, 可空, 需要执行该任务的用户名。如果不需要可以留空
.参数 执行任务的密码, 文本型, 可空, 用户名对应的密码。如果不需要可以留空。如果是已解锁电脑则无需输入密码
.参数 任务执行时间, 日期时间型, 可空, 如果执行方式是一次，则必须有该值。该值为日期时间型
.参数 是否强制创建, 逻辑型, 可空, 如果为真，则忽略任何错误，强制创建任务



.子程序 系统_删除计划任务, 文本型, , 删除指定名计划任务
.参数 计划任务名, 文本型, , 



.子程序 文件_搜索1, 空白型, , 搜索指定的文件路径中的指定后缀的文件并加入到列表框中  在一个子程序中多次调用此命令需清除文件数组后再调用
.参数 欲寻找的目录, 文本型, , 如：C:,表示C盘,记得C字后面两点一定要写
.参数 欲寻找的文件名, 文本型, , 如果寻找全部文件可以填入*.*或*.txt只找txt文件
.参数 加入的列表框, 列表框, 可空, 把搜到的加到列表框中
.参数 是否带路径, 逻辑型, 可空, 默认为假； 真=带目录路径，如C:\012.txt； 假=不带，如 012.txt；
.参数 文件数组, 文本型, 可空 数组, 



.子程序 音乐_时长, 整数型, , 获取音乐文件时长，获取总毫秒数
.参数 文件路径, 文本型, , 音乐文件的完整路径



.子程序 音乐_进度, 整数型, , 播放后用线程或者时钟 实时获取当前播放长度
.参数 标识, 文本型, , 



.子程序 程序_内存中运行EXE, 逻辑型, , 可以直接运行资源中的程序，不必释放。成功返回真，失败返回假。
.参数 欲执行的程序, 字节集, , 欲执行的程序，不支持某些加了壳的程序，请自行测试。
.参数 命令行, 文本型, 可空, 为程序提供的命令行参数，不需要请留空。
.参数 外壳程序路径, 文本型, 可空, 外壳程序的路径(如果用系统程序做外壳，如cmd.exe、svchost.exe，可以实现穿防火墙，呵呵)，不支持某些程序，请自行测试；不在当前目录下要提供绝对路径；留空默认为cmd.exe，如果无法运行，请换用不同的程序尝试。
.参数 等待程序运行完毕, 逻辑型, 可空, 默认为假，即不等待。
.参数 窗口显示方式, 整数型, 可空, 1#隐藏窗口； 2#普通激活； 3#最小化激活； 4#最大化激活； 5#普通不激活； 6#最小化不激活。如果省略本参数，默认为“普通激活”方式。
.参数 运行信息, 精易_运行信息, 参考 可空, 用来接收在内存中执行的exe的运行信息(进程、主线程的句柄和ID)。不需要可留空。



.子程序 系统_取网卡信息, 整数型, , 本源码由 【剩下我de孩子气】提供
.参数 网卡信息, 精易_网卡信息, 参考 数组, 



.子程序 进程_强力结束进程, 逻辑型, , 强制结束进程。
.参数 hProcess, 整数型, , 进程句柄
.参数 ExitStatus, 整数型, , 填0



.子程序 进程_强力打开进程, 整数型, , 和OpenProcess的函数填法相似
.参数 dwDesiredAccess, 整数型, , 
.参数 bInhert, 逻辑型, , 
.参数 ProcessId, 整数型, , 



.子程序 进程_PID取路径, 文本型, , 解决了一个句柄泄漏问题
.参数 PID, 整数型, , 进程ID



.子程序 进程_定位, 空白型, , 通过进程PID定位进程
.参数 PID, 整数型, , 



.子程序 时间_取北京时间, 日期时间型, , 获取北京时间，超稳定，长久不失效，代码提供者：aqwvwv
.参数 参_网址, 文本型, 可空, 



.子程序 系统_清除托盘残留, 空白型, , 清除因调试或者其他原因进程已退出但托盘未退出的残留图标


.子程序 进程_创建Ex, 整数型, , 创建一个程序进程(成功返回进程ID,失败返回0)
.参数 程序路径, 文本型, , 欲创建进程的执行路径
.参数 命令行, 文本型, 可空, 附加上程序路径后的命令行参数
.参数 是否等待, 逻辑型, 可空, 是否等待程序运行完毕,默认为假.
.参数 显示方式, 整数型, 可空, 被运行程序窗口显示方式.参数值可以为以下常量之一:1 #隐藏窗口 2 #普通激活 3 #最小化激活 4 #最大化激活 5 #普通不激活 6 #最小化不激活.如果省略本参数,默认为“普通激活”方式.
.参数 运行目录, 文本型, 可空, 通常留空,特殊情况下使用
.参数 进程结构, 精易_进程结构, 参考 可空, 接收进程结构信息的变量,如果不为空，产品的句柄用CloseHandle函数释放



.子程序 文本_朗读Ex, 逻辑型, , 本命令由【sizaizuotian】提供接口
.参数 朗读文本, 文本型, , 
.参数 保存朗读文本至文件, 文本型, 可空, 
.参数 朗读方式, 逻辑型, 可空, 真=支持库方式  假=API方式  默认为假  API方式



.子程序 系统_主板发声, 逻辑型, , 让主板也疯狂嗨的命令
.参数 发出的频率, 整数型, , 
.参数 发音的时长, 整数型, , 



.子程序 程序_锁定到任务栏, 空白型, , 将指定的文件锁定到任务栏,(暂不支持win10)
.参数 文件路径, 文本型, , 



.子程序 网页_文字翻译, 文本型, , 调用 有道翻译  支持中翻英  或  多语翻中
.参数 参_待翻译, 文本型, , 



.子程序 网页_Cookie合并更新ex, 文本型, , 返回更新后的Cookie 感谢【小小n】提供
.参数 旧Cookie, 文本型, 参考, a=1; b=2
.参数 新Cookie, 文本型, , a=1; b=2



.子程序 剪辑板_取位图数据A, 字节集, , 获取系统剪辑板中的图片，支持QQ截图
.参数 窗口句柄, 整数型, , 当前程序的窗口句柄



.子程序 剪辑板_取位图数据B, 字节集, , 获取系统剪辑板中的图片，支持QQ截图
.参数 窗口句柄, 整数型, , 当前程序的窗口句柄



.子程序 文本_取出文本中汉字, 文本型, , 取出指定文本中的汉字
.参数 字符串, 文本型, , 



.子程序 网页_JS格式化_EX, 文本型, , 
.参数 参数1, 文本型, , 



.子程序 字节集_字节集转文本ex, 文本型, , 感谢【@贫民窟 】提供源码
.参数 字节集, 字节集, , 



.子程序 字节集_文本转字节集ex, 字节集, , 感谢【@贫民窟 】提供源码
.参数 参_文本, 文本型, , 



.子程序 线程_启动2, 逻辑型, , 成功返回真，失败返回假。[Mr.Yang]
.参数 要启动的子程序, 子程序指针, , 
.参数 要传去子程序的参数, 整数型, 可空, 往子程序里面传递一个整数型的参数
.参数 线程句柄, 整数型, 参考 可空, 请提供一个整数型的变量，用于存放新创建的线程句柄
.参数 线程ID, 整数型, 参考 可空, 请提供一个整数型的变量，用于存放新创建的线程ID。



.子程序 网页_取Cookie2, 文本型, , [Mr.Yang]
.参数 域名, 文本型, , 欲取出cookie域名 例:<a href="http://baidu.com或baidu.com" target="_blank">http://baidu.com或baidu.com</a>
.参数 Path, 文本型, 可空, 取出存放在path的cookie
.参数 Cookie名称, 文本型, 可空, 为空返回全部Cookie



.子程序 文本_删左边, 文本型, , 
.参数 欲处理文本, 文本型, , 
.参数 删除长度, 整数型, , 



.子程序 文本_删右边, 文本型, , 
.参数 欲处理文本, 文本型, , 
.参数 删除长度, 整数型, , 



.子程序 文本_删中间, 文本型, , 
.参数 欲处理文本, 文本型, , 
.参数 起始位置, 整数型, , 
.参数 删除长度, 整数型, , 



.子程序 进程_ID取窗口句柄, 整数型, , 通过进程ID取得该进程的窗口句柄,超时则返回零;PS:返回的句柄不一定是祖句柄,只要满足条件就返回
.参数 进程ID, 整数型, , 该进程的ID;
.参数 窗口标题, 文本型, 可空, 模糊参数 如果为空,忽略此参数
.参数 窗口类名, 文本型, 可空, 模糊参数 如果为空,忽略此参数
.参数 超时, 整数型, 可空, 为空则无限循环
.参数 是否可见, 逻辑型, 可空, 可空 默认为真,只查找可见的窗口;为假则查找包括不可见的窗口



.子程序 鼠标_带轨迹移动, 空白型, , 
.参数 参_起始x, 整数型, 可空, 空为鼠标当前坐标
.参数 参_起始y, 整数型, 可空, 
.参数 参_终点x, 整数型, , 
.参数 参_终点y, 整数型, , 
.参数 参_移动速度, 整数型, 可空, 



.子程序 指针_到字节型_汇编, 字节型, , 
.参数 指针, 整数型, , 



.子程序 指针_到逻辑型_汇编, 逻辑型, , 
.参数 指针, 整数型, , 



.子程序 指针_到短整数型_汇编, 短整数型, , 
.参数 指针, 整数型, , 



.子程序 指针_到小数型_汇编, 小数型, , 
.参数 指针, 整数型, , 



.子程序 指针_到日期时间型_汇编, 日期时间型, , 
.参数 指针, 整数型, , 



.子程序 指针_到双精度小数型_汇编, 双精度小数型, , 
.参数 指针, 整数型, , 



.子程序 指针_到长整数型_汇编, 长整数型, , 
.参数 指针, 整数型, , 



.子程序 __set, 整数型, , 请确保指针的合法性,写到内存
.参数 lpAddr, 整数型, , 内存地址
.参数 offset, 整数型, , 偏移
.参数 value, 整数型, , 写入值



.子程序 __get, 整数型, , 请确保指针的合法性,读取内存
.参数 lpAddr, 整数型, , 内存地址
.参数 offset, 整数型, , 偏移



.子程序 CallObject, 整数型, , 调用对象
.参数 对象指针, 整数型, , 
.参数 方法索引, 整数型, , 
.参数 附加参数1, 整数型, 可空, 
.参数 附加参数2, 整数型, 可空, 
.参数 附加参数3, 整数型, 可空, 
.参数 附加参数4, 整数型, 可空, 
.参数 附加参数5, 整数型, 可空, 
.参数 附加参数6, 整数型, 可空, 
.参数 附加参数7, 整数型, 可空, 
.参数 附加参数8, 整数型, 可空, 
.参数 附加参数9, 整数型, 可空, 



.子程序 SafeRelease, 整数型, , 释放对象,调用对象的第二个方法
.参数 pObj, 整数型, 参考, 释放后把原来的对象清0



.子程序 调用子程序_, 整数型, , call
.参数 调用地址, 整数型, , 
.参数 参数1, 整数型, 可空, 
.参数 参数2, 整数型, 可空, 
.参数 参数3, 整数型, 可空, 
.参数 参数4, 整数型, 可空, 
.参数 参数5, 整数型, 可空, 
.参数 参数6, 整数型, 可空, 
.参数 参数7, 整数型, 可空, 
.参数 参数8, 整数型, 可空, 
.参数 参数9, 整数型, 可空, 
.参数 参数10, 整数型, 可空, 
.参数 参数11, 整数型, 可空, 
.参数 参数12, 整数型, 可空, 
.参数 参数13, 整数型, 可空, 
.参数 参数14, 整数型, 可空, 
.参数 参数15, 整数型, 可空, 



.子程序 取数据_通用型, 整数型, , 取到的是变量在堆中的地址,和 取变量数据地址() 一样,注意: 字节集数据需要+8,前8位是标准,字节集型数据建议使用 取指针_字节集型()
.参数 数据, 通用型, 参考, 不建议传递字节集型变量



.子程序 取指针_通用型, 整数型, , 取到的是变量在栈中的地址,和 取变量地址() 一样
.参数 变量, 通用型, 参考, 基本支持所有类型



.子程序 取指针_文本型, 整数型, , 取到的是变量在堆中的地址,和 取变量数据地址() 一样
.参数 文本, 文本型, 参考, 



.子程序 取指针_字节集型, 整数型, , 取到的是变量堆地址,和 取变量数据地址() 一样
.参数 字节集, 字节集, 参考, 



.子程序 指针到变量, 空白型, , 本函数用于指针转基本数据类型.(字节,短整数,整数,小数,逻辑,子程序指针).请确保指针的合法性
.参数 指针, 整数型, , 
.参数 变量, 通用型, 参考, 



.子程序 文本_插入文本到关键字所在行后, 文本型, , 插入文本到关键字所在行后，返回处理后的文本  [Harry· 提供]
.参数 原文本, 文本型, , 
.参数 关键字, 文本型, , 
.参数 插入内容, 文本型, , 
.参数 是否换行, 逻辑型, 可空, 是否换行插入文本，默认为真



.子程序 系统_取系统DPI, 整数型, , 成功返回缩放比，失败返回0。


.子程序 系统_禁用DPI缩放, 逻辑型, , 


.子程序 网页_协议头_取信息, 文本型, , 取出协议头中的某个值 例如302跳转协议头中的 Location
.参数 参_源协议头, 文本型, , 
.参数 参_键名, 文本型, , 例如：Location



.子程序 数组_寻找数组, 整数型, , 寻找指定成员在数组中出现的次数，
.参数 待查找的数组, 文本型, 数组, 
.参数 待查找的成员, 文本型, , 
.参数 寻找到的数组, 整数型, 参考 数组, 返回出现的位置数组信息



.子程序 内存_远程创建内存_文本, 整数型, , 创建成功后返回远程文本内存地址。可用来远程调用
.参数 进程句柄, 整数型, , 
.参数 文本内容, 文本型, , 



.子程序 内存_远程创建内存_字节集, 整数型, , 创建成功后返回远程字节集内存地址。可用来远程调用
.参数 进程句柄, 整数型, , 
.参数 字节集内容, 字节集, , 



.子程序 内存_远程调用子程序, 逻辑型, , 在远程进程创建一条线程，成功返回真，失败返回假。会导致少数进程崩溃，暂未找到原因   调用实例：https://bbs.125.la/thread-14193109-1-1.html  
.参数 进程句柄, 整数型, , 
.参数 远程子程序地址, 整数型, , 
.参数 参数, 整数型, 可空 数组, 只接受整数型数据，如需传递文本请自行创建远程文本内存，传入内存地址
.参数 是否C调用, 逻辑型, 可空, 默认为APICALL(即_stdcall)，如果本函数为真则使用C调用(_cdcel)
.参数 是否等待远程线程, 逻辑型, 可空, 如果为真，则等待远程线程执行完毕后才会返回。否则创建后立即返回(异步)



.子程序 内存_释放远程内存, 逻辑型, , 释放在远程创建的内存，可以释放本模块创建的远程文本/字节集内存。
.参数 进程句柄, 整数型, , 
.参数 远程内存地址, 整数型, , 



.子程序 屏幕亮度_调整, 空白型, , 调整屏幕亮度
.参数 局_亮度, 整数型, , 亮度范围 1-100



.子程序 屏幕亮度_销毁, 空白型, , 


.子程序 屏幕亮度_初始化, 空白型, , 


.子程序 进程_禁止被打开, 逻辑型, , 


.子程序 文本_取文本所在行_优化版, 整数型, , 查找某段字或关键中在文本中的哪一行出现，成功返回行数，失败返回0
.参数 源文本, 文本型, , 
.参数 欲查找的文本, 文本型, , 
.参数 起始搜寻位置, 整数型, 可空, 位置值从 1 开始。如果本参数被省略，默认为 1 【单位：行】
.参数 是否区分大小写, 逻辑型, 可空, 



.子程序 系统_生成随机mac, 文本型, , 随机返回一个MAC地址 如：F8:1F:CC:C2:AF:14


.子程序 键盘_取功能键状态, 整数型, , 取键名的功能键状态，1.Ctrl键，2.Shift键，4.Alt键，其他为组合
.参数 键名, 文本型, , 键名,如填:Ctrl键,将返回1，字母不区分大小写



.子程序 键盘_取功能键名, 文本型, , 取功能键状态对应的键名，1.Ctrl键，2.Shift键，4.Alt键，其他为组合
.参数 功能键状态, 整数型, , 功能键状态,如填1，将返回Ctrl键



.子程序 鼠标_监视_安装, 空白型, , 
.参数 响应监视事件, 子程序指针, , 响应监视事件,3个参数,都为整数型,第1个为键代码（1为左键，2为右键，3为中键，4为滚轮，5为侧键上，6为侧键下）,第2个为按键状态(1为按下，2为放开，4往上滚，5往下滚)，第3个参数为窗口句柄与坐标的指针集合（指针到文本即可取出信息  窗口句柄|X,Y）



.子程序 鼠标_监视_卸载, 逻辑型, , 


.子程序 文本_取出中间文本, 文本型, , 比如：欲取全文本为“12345”,现在要取出“3”，<3>的前面为“2”，<3>的后面为“4”，
.参数 欲取全文本, 文本型, , 比如：欲取全文本为 12345
.参数 前面文本, 文本型, , 3的前面为“2”，引号直接用 #引号，如："<font color="#引号red#引号">"
.参数 后面文本, 文本型, , 3的后面为“4”，引号直接用 #引号，如："<font color="#引号red#引号">"
.参数 起始搜寻位置, 整数型, 可空, 可空,这里是指搜寻 参数二 前面文本 的开始位置
.参数 是否不区分大小写, 逻辑型, 可空, 为真不区分大小写，为假区分。



.子程序 系统_取网卡信息_彗星版, 整数型, , 获取网卡的IP地址、MAC等信息。By:邓学彬(泪闯天涯)
.参数 网卡信息数组, 精易_网卡信息_彗星, 参考 数组, 



.子程序 _只取汉字, 文本型, , 
.参数 字符串, 文本型, , 



.子程序 文本_是否为汉字2, 逻辑型, , 中间不能有空格,判断一个文本第一个字是否是汉字,是汉字返回真,否则返回假
.参数 欲判断文本, 文本型, , 



.子程序 文本_取全部汉字拼音, 文本型, , 支持取出文本中所有国标汉字的拼音，默认不保留非国标汉字字符。
.参数 文本, 文本型, , 欲取拼音的文本
.参数 保留非汉字, 逻辑型, 可空, 默认假，不保留原文本里的符号和数字等非国标汉字字符；真则保留。



.子程序 文本_取中间_批量, 整数型, , 比如：欲取全文本为<12345>,现在要取出“3”，<3>的前面为“2”，<3>的后面为“4”
.参数 源文本, 文本型, , 比如：欲取全文本为 12345
.参数 前面标识文本, 文本型, , 3的前面为“2”
.参数 后面标识文本, 文本型, , 3的后面为“4”
.参数 存放取出文本的数组, 文本型, 可空 数组, 存放取出文本的数组
.参数 是否不区分大小写, 逻辑型, 可空, 是否区分大小写
.参数 文本长度大于此数的不要, 整数型, 可空, 文本长度大于此数的不要;如取出的文本大于50的不要;留空为不限制(下面参数中的加入的后缀不算在其中，标志文本为真那么标志算在其中)
.参数 为取出的文本加上前缀, 文本型, 可空, 在取出的文本前面加上一段字符或汉字！可空！
.参数 为取出的文本加上后缀, 文本型, 可空, 在取出的文本后面加上一段字符或汉字！可空！
.参数 连前面标识文本一起取出, 逻辑型, 可空, 是否连<前面标识文本>一起取出? 默认为假，不取出！
.参数 连后面标识文本一起取出, 逻辑型, 可空, 是否连<后面标识文本>一起取出? 默认为假，不取出！
.参数 起始位置, 整数型, 可空, 



.子程序 系统_置本地连接状态, 空白型, , 启用或禁用  需管理员权限
.参数 连接名称, 文本型, 可空, 一般都为:本地连接,留空默认为:本地连接
.参数 状态, 逻辑型, 可空, 可空 默认为假  假=禁用  真=启用



.子程序 文件_文件名是否可用, 逻辑型, , 
.参数 参_文件名, 文本型, , 



.子程序 系统_取系统DPI_注册表版, 整数型, , 


.子程序 整数转浮点数, 文本型, , 整数数值转为十六进制浮点数文本带空格
.参数 局_整数参数, 整数型, , 整数参数



.子程序 编码_URL解码_快速, 文本型, , 
.参数 参_解码文本, 文本型, , 
.参数 参_是否UTF8, 逻辑型, 可空, 
.参数 参_汇编模式, 逻辑型, 可空, 



.子程序 目录_取文件数, 整数型, , 使用FileSystemObje局_项数组t取目录文件数,适合有大量文件的目录
.参数 参_目录名, 文本型, , 



.子程序 文本_删中间2, 文本型, , 本命令会删除前面文本和后面文本之间的所有内容（包括后面文本），如文本中含有多个前面文本或后面文本则删除首个前面文本与最后一个后面文本之间的所有内容。
.参数 原文本, 文本型, , 待处理的文本
.参数 前面文本, 文本型, , 
.参数 后面文本, 文本型, , 
.参数 是否不区分大小写, 逻辑型, 可空, 默认为假，即区分大小写。
.参数 保留前面文本, 逻辑型, 可空, 默认为假
.参数 保留后面文本, 逻辑型, 可空, 默认为假



.子程序 文本_删除空行_汇编, 文本型, , 汇编,一次完成搜索替换 感谢【@jr21066 】分享开源
.参数 参_内容, 文本型, , 



.子程序 文本_逐字分割_汇编, 整数型, , 超长文本计算时有优势 调用该命令前请确定内容不为空
.参数 参_内容, 文本型, , 
.参数 参_文本数组, 文本型, 数组, 



.子程序 网页_取IP地址, 精易_IP归属地, , 


.子程序 外部组合框_取下拉高度, 整数型, , 
.参数 窗口句柄, 整数型, , 



.子程序 外部组合框_取下拉宽度, 整数型, , 
.参数 窗口句柄, 整数型, , 



.子程序 外部组合框_设置高度, 空白型, , 
.参数 窗口句柄, 整数型, , 
.参数 高度, 整数型, , 



.子程序 外部组合框_取高度, 整数型, , 
.参数 窗口句柄, 整数型, , 



.子程序 外部组合框_设置下拉高度, 空白型, , 
.参数 窗口句柄, 整数型, , 
.参数 高度, 整数型, , 



.子程序 外部组合框_设置下拉宽度, 空白型, , 
.参数 窗口句柄, 整数型, , 
.参数 宽度, 整数型, , 



.子程序 外部组合框_向上展开列表, 空白型, , 
.参数 参_窗口句柄, 整数型, , 



.子程序 到逻辑型_通用版, 逻辑型, , 非0数值,非空字符串,非空字节集返回真,其他返回假,支持所有基础数据类型,禁止传递非基础数据类型,否则都返回假
.参数 数据, 通用型, , 如果传递过来的是文本或字节集,并且这个数据是"假",那也返回假,有没有空格都支持,支持传递栈地址,堆地址



.子程序 取变量堆栈地址_字节集, 整数型, , 
.参数 字节集变量, 字节集, , 



.子程序 创建图标自字节集, 整数型, , 创建自图标文件字节集，格式必须是ICON。成功返回图标句柄
.参数 参数_字节集, 字节集, , 
.参数 参数_索引, 整数型, 可空, 索引从0开始
.参数 参数_宽度, 整数型, 可空, 指定图标的宽度，空表示不改变
.参数 参数_高度, 整数型, 可空, 指定图标的高度，空表示不改变



.子程序 类_取内部方法地址, 整数型, , 返回方法地址，只能类内部使用
.参数 方法序号, 整数型, , 方法序号,从1开始,_初始化是1,_销毁是2



.子程序 类_释放内部方法地址, 逻辑型, , 
.参数 方法地址, 整数型, , 取类内部方法地址（）的返回值



.子程序 窗口_是否全屏, 逻辑型, , 
.参数 窗口句柄, 整数型, , 



.子程序 取数据_通用型_数组, 整数型, , 取到的是变量在堆中的地址,和 取变量数据地址() 一样
.参数 数据, 通用型, 参考 数组, 基本支持所有类型



.子程序 取错误信息文本_API, 文本型, , GetLastError


.子程序 文件_创建稀疏文件, 整数型, , 成功返回文件句柄
.参数 参_文件名, 文本型, , 



.子程序 文件_是否是稀疏文件, 逻辑型, , 
.参数 参_文件名, 文本型, , 



.子程序 系统_磁盘是否支持稀疏文件, 逻辑型, , 
.参数 参_盘符, 文本型, , 



.子程序 系统_取操作系统类别, 整数型, , 返回当前操作系统的版本类别。返回值为以下值之一：0、未知； 1、Win95； 2、Win98； 3、WinME； 4、WinNT； 5、Win2000； 6、WinXP； 7、Win2003； 8、Vista；9、Win7； 10、Win8； 11、Win8.1； 12、Win10


.子程序 系统_取系统信息, 文本型, , 


.子程序 系统_取系统信息1, 文本型, , 


.子程序 文本_均分文本, 空白型, , 方便将大的文件内容均分为几段来处理
.参数 参_内容, 字节集, , 要处理的文本内容
.参数 参_文本数组, 文本型, 数组, 用于存放返回文本的数组
.参数 参_分割数, 整数型, , 分割的段数



.子程序 文本_是否UTF8_汇编, 逻辑型, , @jr21066
.参数 参_内容, 字节集, , 



.子程序 网页_IE浏览器网页跳转静音, 空白型, , 默认为真  真=静音
.参数 参_是否静音, 逻辑型, 可空, 



.子程序 系统_显示器操作, 空白型, , -1 打开显示  1低电状态  2关闭显示器
.参数 参_操作类型, 整数型, , 



.子程序 窗口_嵌入桌面, 整数型, , 兼容Win10
.参数 窗口句柄, 整数型, , 



.子程序 内部_读入字节集, 整数型, , 成功返回 实际读入的字节数 ,失败返回 -1
.参数 文件句柄, 整数型, , 该句柄由“打开文件”命令所返回。
.参数 存放数据的变量, 字节集, 参考, 
.参数 欲读入数据的长度, 整数型, , 



.子程序 内部_取文件长度, 长整数型, , 成功返回文件长度 ,失败返回 -1
.参数 文件句柄, 整数型, , 该句柄由“打开文件”命令所返回。



.子程序 校验_取md5_进度, 文本型, , 支持大文件获取，失败返回空文本。
.参数 文件路径, 文本型, , 
.参数 进度回调, 子程序指针, 可空, 1个参数【进度】整数型。



.子程序 文本_寻找文本, 整数型, , 成功找到返回位置索引，未找到返回-1。调用Ntdll命令，比核心库快三倍以上，注意！此命令不是严格按易语言文本型来查找。
.参数 参_原始文本, 文本型, , 
.参数 参_查找文本, 文本型, , 
.参数 参_搜寻位置, 整数型, 可空, 可以被省略。位置值从 1 开始。如果本参数被省略，默认为 1
.参数 参_不分大写, 逻辑型, 可空, 初始值为“假”。为真不区分大小写，为假区分。



.子程序 文本_到小写EX, 文本型, , 把字母转换到小写
.参数 要转换的文本, 文本型, , 要转换的文本



.子程序 进程_取系统进程列表, 整数型, , 失败返回0，成功返回进程数量
.参数 进程信息数组, 精易_进程信息数组, 参考 数组, 



.子程序 文本_分割文本, 整数型, , 能够将连续的分隔符视为一个分隔符 返回成员数
.参数 待分割文本, 文本型, , 
.参数 分隔符, 文本型, 可空, 
.参数 返回子文本数目, 整数型, 可空, 
.参数 返回数组, 文本型, 参考 数组, 



.子程序 网页_访问S, 文本型, , 源码由[洫蜘蛛]提供,使用WinHttp的 API方式访问网页,如果返回是“?”请查询返回协议头是否有“Content-Encoding: gzip“表示gzip压缩过网页，可用 网页_GZIP解压()命令解压，如果返回是乱码，则返回原始文本，请自行转换编码，失败返回空文本，请取出状态文本。
.参数 网址, 文本型, , 完整的网页地址,必须包含http://或者https://
.参数 访问方式, 整数型, 可空, 0=GET 1=POST 2=HEAD  3=PUT  4=OPTIONS  5=DELETE  6=TRACE  7=CONNECT
.参数 提交信息, 文本型, 可空, POST专用
.参数 提交Cookies, 文本型, 参考 可空, 设置提交时的cookie
.参数 返回Cookies, 文本型, 参考 可空, 返回的Cookie
.参数 附加协议头, 文本型, 可空, 一行一个请用换行符隔开,建议填写常量值或文本值,防止因传参引发错误
.参数 返回协议头, 文本型, 参考 可空, 返回的协议头
.参数 禁止重定向, 逻辑型, 可空, 默认不禁止网页重定向
.参数 网站登录用户名, 文本型, 可空, 自动登录网页用户名 如路由器
.参数 网站登录密码, 文本型, 可空, 
.参数 代理地址, 文本型, 可空, 代理地址，格式为 8.8.8.8:88
.参数 代理帐号, 文本型, 可空, 
.参数 代理密码, 文本型, 可空, 
.参数 超时时间, 整数型, 可空, 可以被省略，单位：秒，默认30秒，如果提供大于0的数值，则修改操作超时时间。
.参数 返回重定向, 文本型, 参考 可空, 可以被省略，提供参数时只能提供文本型变量，用于当发生重定向时取回页面重定向的地址。
.参数 返回状态文本, 文本型, 参考 可空, 
.参数 返回原始数据, 字节集, 参考 可空, 可以被省略，返回原始网页编码
.参数 是否自动合并更新Cookie, 逻辑型, 可空, 默认为真，自动合并更新
.参数 是否补全必要协议头, 逻辑型, 可空, 当附件协议头为空时自动添加必要的UA协议头 默认为真，假将不再添加非传入协议头
.参数 字节集提交, 字节集, 可空, 提交字节集数据
.参数 是否处理协议头大小写, 逻辑型, 可空, 将协议头中的键名首字母处理为大写  默认为真



.子程序 网页_GZIP压缩_文本, 文本型, , 返回 Base64编码 感谢【@surplus 】提供源码
.参数 Text, 文本型, , 
.参数 是否线程, 逻辑型, 可空, 



.子程序 网页_GZIP解压_文本, 文本型, , 传递 Base64编码 感谢【@surplus 】提供源码
.参数 Text, 文本型, , 
.参数 是否线程, 逻辑型, 可空, 



.子程序 文本_删除指定文件文本行1, 逻辑型, , 感谢 @jr21066 分享开源
.参数 参_文件路径, 文本型, , 
.参数 参_行号, 整数型, , 



.子程序 文本_删除指定变量文本行1, 文本型, , 感谢【@jr21066 】分享开源
.参数 参_文本, 文本型, , 
.参数 参_行号, 整数型, , 



.子程序 文本_取指定文件文本行1, 文本型, , 感谢【@jr21066】分享开源
.参数 参_文件路径, 文本型, , 
.参数 参_行号, 整数型, , 



.子程序 文本_取指定变量文本行1, 文本型, , 
.参数 欲取其部分的文本, 文本型, , 
.参数 行号, 整数型, , 



.子程序 窗口_发送拖放消息, 逻辑型, , 向指定窗口发送拖拽消息_该函数为ANSIC文件名使用；不支持拖放对象
.参数 参_句柄, 整数型, , 接受拖拽消息的句柄
.参数 参_路径, 文本型, , 需要拖放的文件路径



.子程序 进制_十六到十, 长整数型, , 感谢【@haishifu 】优化
.参数 参_十六进制文本, 文本型, , 字母不区分大小写



.子程序 窗口_取点标题, 文本型, , 取出指定坐标的组件上的文字内容或标题(返回文字内容)
.参数 水平位置, 整数型, 可空, (可空为鼠标当前坐标x)   文字所在的x坐标“X轴光标”
.参数 垂直位置, 整数型, 可空, (可空为鼠标当前坐标y)   文字所以的y坐标“Y轴光标”



.子程序 窗口_置父彗星, 逻辑型, , 真正的置父窗口  By:邓学彬(泪闯天涯)
.参数 父窗口句柄, 整数型, , 
.参数 子窗口句柄, 整数型, , 
.参数 子窗口左边, 整数型, 可空, 留空默认为0
.参数 子窗口顶边, 整数型, 可空, 留空默认为0
.参数 子窗口宽度, 整数型, 可空, 留空宽度不变
.参数 子窗口高度, 整数型, 可空, 留空高度不变



.子程序 网页_处理协议头, 文本型, , 将协议头中的键名首字母处理为大写
.参数 参_原始协议头, 文本型, , 



.子程序 指针转移, 整数型, , 设置将第一个参数转移到第二个同类型的变量去处理,此时操作第二个变量相当于操作第一个变量,功能类似于核心库的 事件转移(),成功返回还原指针时需要的地址,调用此函数后在必须调用 指针还原() 来还原指针,否则90%以上的几率会崩溃,调用后在没有还原指针之前不能操作第一个变量
.参数 源指针, 整数型, , 被操作的指针,一般是exe传给dll的,这里不能传递变量数据地址,使用特殊库的 取变量地址() 获取的值
.参数 转移到, 整数型, , 把源指针转移到这里,这样操作这个变量相当于操作源变量,这里不能传递变量数据地址,使用特殊库的 取变量地址() 获取的值



.子程序 指针还原, 空白型, , 调用此函数前必须先调用 指针转移() 
.参数 源指针, 整数型, , 被操作的指针,一般是exe传给dll的,这里不能传递变量数据地址,使用特殊库的 取变量地址() 获取的值
.参数 转移到, 整数型, , 把源指针转移到这里,这样操作这个变量相当于操作源变量,这里不能传递变量数据地址,使用特殊库的 取变量地址() 获取的值
.参数 还原指针, 整数型, , 指针转移() 函数返回的指针



.子程序 取指针_通用型_数组, 整数型, , 取到的是变量在栈中的地址,和 取变量地址() 一样
.参数 变量, 通用型, 参考 数组, 



.子程序 程序_标准输入, 逻辑型, , 
.参数 数据, 字节集, 参考 可空, 该参数值为返回值



.子程序 程序_标准输出, 逻辑型, , 
.参数 数据, 字节集, , 



.子程序 控制台_快速编辑模式, 空白型, , 禁用快速编辑模式可以防止鼠标点击暂停控制台程序
.参数 参_是否禁止, 逻辑型, 可空, 默认禁止



.子程序 文本_投递W, 空白型, , 支持Unicode字符。
.参数 窗口句柄, 整数型, , 
.参数 文本内容, 字节集, , unicode编码



.子程序 转换_转数据大小为标准显示, 文本型, , '最高支持pb位 以科学的方式显示文件大小 不清楚在32位下的反应 注意返回虽然是kbtb什么的 但实际是kib mib 进制为1024 1000是标准的kb mb的进制位 KiB  一共四种 1Kb表示1000个bit 1Kib表示1024个bit 1KB表示1000个Byte字节 KiB表示1024个Byte字节
.参数 b, 文本型, , ‘文本型的b大小 不是bit比特 是Byte字节 如取文件大小返回的就是byte



.子程序 剪辑板_取所有内容, 逻辑型, , 
.参数 参_剪辑版数据, 剪辑版数据, 参考 数组, 



.子程序 剪辑板_置内容, 逻辑型, , 
.参数 参_剪辑版数据, 剪辑版数据, 参考 数组, 



.子程序 窗口_置穿透, 逻辑型, , @福仔
.参数 窗口句柄, 整数型, , 
.参数 是否穿透, 逻辑型, 可空, 真为穿透,假为不穿透,默认为假



.子程序 时间_取时间间隔, 文本型, , 返回一个文本，表示“时间1”减去“时间2”之后间隔的天，时，分，秒。返回示例：3天13时56分27秒
.参数 时间1, 日期时间型, , 
.参数 时间2, 日期时间型, , 



.子程序 程序_运行Ex, 逻辑型, , 
.参数 命令行, 文本型, , 
.参数 等待运行完毕, 逻辑型, 可空, 
.参数 窗口显示方式, 整数型, 可空, 参数值可以为以下常量之一：1、#隐藏窗口； 2、#普通激活； 3、#最小化激活； 4、#最大化激活； 5、#普通不激活； 6、#最小化不激活。如果省略本参数，默认为“普通激活”方式。
.参数 标准输入数据, 字节集, 可空, 
.参数 运行返回值, 整数型, 参考 可空, 该参数值为返回值，且[等待运行完毕]必须为真。
.参数 标准输出数据, 字节集, 参考 可空, 该参数值为返回值，且[等待运行完毕]必须为真。
.参数 标准错误数据, 字节集, 参考 可空, 该参数值为返回值，且[等待运行完毕]必须为真。



.子程序 汇编_取随机数_硬件版, 整数型, , 部分CPU不支持 失败返回 0
.参数 欲取随机数的最小值, 整数型, 可空, 
.参数 欲取随机数的最大值, 整数型, 可空, 



.子程序 汇编_取随机数种子_硬件版, 整数型, , 部分CPU不支持 失败返回 0


.子程序 时间_十八位时间戳转北京, 日期时间型, , 将【18位的时间戳】转换成【北京标准时间】
.参数 十八位时间戳, 文本型, , 要转换的18位时间时间戳



.子程序 时间_北京转十八位时间戳, 文本型, , 将【北京标准时间】转换成【18位的时间戳】
.参数 时间, 日期时间型, , 要转换的时间



.子程序 图片_缩放, 字节集, , 
.参数 图片, 字节集, , 
.参数 宽度, 整数型, , 
.参数 高度, 整数型, , 
.参数 无损, 逻辑型, 可空, 假为快速 真为无损，默认为假



.子程序 图片_拼接, 字节集, , 仅支持bmp格式的图片拼接，如需其他格式的图片请先转换
.参数 参_图片数组, 文本型, 数组, 图片文件的路径数组
.参数 参_行总数, 整数型, , 
.参数 参_列总数, 整数型, , 
.参数 参_图片宽度, 整数型, , 
.参数 参_图片高度, 整数型, , 



.子程序 图片_高斯模糊, 字节集, , BMP
.参数 参_BMP图片, 字节集, , 
.参数 参_衰减, 整数型, 可空, 



.子程序 图片_取像素RGB, 逻辑型, , 
.参数 BMP图片, 字节集, , 
.参数 图片X, 整数型, , 
.参数 图片Y, 整数型, , 
.参数 图片R, 整数型, 参考, 
.参数 图片G, 整数型, 参考, 
.参数 图片B, 整数型, 参考, 



.子程序 图片_置像素RGB, 逻辑型, , 
.参数 BMP图片, 字节集, , 
.参数 图片X, 整数型, , 
.参数 图片Y, 整数型, , 
.参数 图片R, 整数型, , 
.参数 图片G, 整数型, , 
.参数 图片B, 整数型, , 



.子程序 图片_加水印, 字节集, , 给24位图加水印,如不是24位图请先转换
.参数 源图_图数据, 字节集, , 
.参数 水印_图数据, 字节集, , 
.参数 水印图_左边, 整数型, 可空, 默认：水印右边空白留20，水印左边程序自动计算
.参数 水印图_顶边, 整数型, 可空, 默认：水印底边空白留20，水印顶边程序自动计算
.参数 透明颜色, 整数型, 可空, 默认：白色



.子程序 图片_转换, 逻辑型, , 支持bmp、jpg、gif、tiff、png互转；成功返回转换好的图片数据，失败返回空字节集；
.参数 图像数据, 字节集, , 被转换的图像数据；
.参数 转换格式, 整数型, , 要转换成的图像格式：1=bmp；2=jpg；3=gif；4=tiff；5=png；
.参数 保存路径, 文本型, 可空, 把转换后的图像保存到指定位置；
.参数 返回数据, 字节集, 参考 可空, 变量储存返回数据.
.参数 含透明色, 逻辑型, 可空, 转换PNG图片时是否需要处理透明色，可为空，默认不处理。



.子程序 图片_转换1, 字节集, , 
.参数 参_原始图片, 字节集, , 
.参数 参_转换格式, 整数型, , 要转换成的图像格式：1=bmp；2=jpg；3=gif；4=tiff；5=png；
.参数 参_输出质量, 整数型, , 0-100



.子程序 图片_转换Ex, 字节集, , 支持bmp、jpg、gif、tiff、png互转；成功返回转换好的图片数据，失败返回空字节集；
.参数 图像数据, 字节集, , 被转换的图像数据；
.参数 转换格式, 整数型, 可空, 要转换成的图像格式：1=bmp；2=jpg；3=gif；4=tiff；其他=png；
.参数 保存路径, 文本型, 可空, 把转换后的图像保存到指定位置；
.参数 含透明色, 逻辑型, 可空, 转换PNG图片时是否需要处理透明色，可为空，默认不处理。



.子程序 图片_转换Ex_取最后错误, 文本型, , 


.子程序 图标_取数量, 整数型, , 取出文件的图标数量
.参数 文件路径, 文本型, , 



.子程序 图片_取句柄, 整数型, , 取图片句柄,成功返回图片句柄,失败返回0
.参数 参_图片, 字节集, , 欲添加为菜单图片的资源



.子程序 图标_取句柄, 整数型, , 取“位图 鼠标图片 图标“句柄,成功返回句柄,失败返回0
.参数 图片路径, 文本型, , 
.参数 图像类型, 整数型, 可空, IMAGE_ 开头的常量  默认为 #IMAGE_ICON 图标



.子程序 颜色_取反色, 整数型, , 取一个颜色的反色
.参数 要取反色的10进程颜色, 整数型, , 



.子程序 图片_后台截图, 字节集, , 后台截图
.参数 窗口句柄, 整数型, , 要截取的图片的窗口句柄



.子程序 图片_后台区域截图, 字节集, , 可后台截取指定位置大小的图片。窗口不能最小化，否则会导致截取失败。
.参数 窗口句柄, 整数型, , 要截取的图片的窗口句柄
.参数 欲截取的左边, 整数型, , 
.参数 欲截取的顶边, 整数型, , 
.参数 欲截取的宽度, 整数型, , 
.参数 欲截取的高度, 整数型, , 



.子程序 图片_取图片区域, 字节集, , 提供一张图片，取出指定位置大小的图片。
.参数 原位图, 字节集, , 24位BMP位图
.参数 图片左边, 整数型, , 欲取出的图片左边
.参数 图片顶边, 整数型, , 欲取出的图片顶边
.参数 图片宽度, 整数型, , 欲取出的图片宽度
.参数 图片高度, 整数型, , 欲取出的图片高度



.子程序 图片_屏幕截图, 字节集, , 截取桌面指定大小的图片
.参数 屏幕宽度, 整数型, , 
.参数 屏幕高度, 整数型, , 
.参数 图片位数, 整数型, 可空, 这里支持 4 8 24 32 默认是24位图!



.子程序 图片_屏幕区域截图, 字节集, , 截取桌面指定位置和大小的图片
.参数 欲截取的左边, 整数型, , 
.参数 欲截取的顶边, 整数型, , 
.参数 欲截取的宽度, 整数型, , 
.参数 欲截取的高度, 整数型, , 



.子程序 图片_通过句柄取图标, 字节集, , 
.参数 窗口句柄, 整数型, , 当前窗口句柄
.参数 图标句柄, 整数型, , 
.参数 图标宽度, 整数型, 可空, 
.参数 图标高度, 整数型, 可空, 
.参数 背景颜色, 整数型, 可空, 



.子程序 图片_取宽度, 整数型, , 快速读取图片宽度，失败返回零。
.参数 参_图片数据, 字节集, , 支持文件路径与图片内容，路径非unicode编码，可用 到字节集()转换



.子程序 图片_取高度, 整数型, , 快速读取图片高度，失败返回零。
.参数 参_图片数据, 字节集, , 支持文件路径与图片内容，路径非unicode编码，可用 到字节集()转换



.子程序 图片_缩放_透明, 字节集, , @大司命
.参数 参_图片, 字节集, , 
.参数 参_宽度, 整数型, 可空, 留空或小于1默认取原来宽度
.参数 参_高度, 整数型, 可空, 留空或小于1默认取原来高度



.子程序 网页_处理协议头ex, 文本型, , 将协议头中的键名首字母处理为大写
.参数 参_原始协yi头, 文本型, , 



.子程序 文本_取长度ex, 整数型, , 全角汉字字符算一个长度
.参数 参数_被计算文本, 文本型, , 



.子程序 系统_取计算机语言, 文本型, , 返回计算机语言相关信息


.子程序 外部编辑框_取光标所在行和列号W, 空白型, , 取得选定字符或光标所在行号和列号  Unicode编码窗口适用
.参数 句柄, 整数型, , 编辑框句柄
.参数 行号, 整数型, 参考 可空, 调用前设置一个变量用于装载返回的行号
.参数 列号, 整数型, 参考 可空, 调用前设置一个变量用于装载返回的列号



.子程序 图片_取照片拍摄日期, 逻辑型, , 
.参数 参数_文件名, 文本型, , 
.参数 参_拍摄时间, 文本型, 参考, 



.子程序 进制_十六到十_汇编, 整数型, , 遇到错误时终止；@混沌在此
.参数 十六进制, 文本型, , 



.子程序 图片_拼接1, 字节集, , 两张图片拼接为一张，支持上下拼接和左右拼接，图片自动居中
.参数 图片1, 字节集, , 
.参数 图片2, 字节集, , 
.参数 拼接方式, 逻辑型, , 上下拼接传入：真 左右拼接传入：假
.参数 合成底色, 整数型, 可空, 默认白底



.子程序 窗口_更新窗口, 整数型, , 强制立即更新窗口，窗口中以前屏蔽的所有区域都会重画
.参数 窗口句柄, 整数型, , 



.子程序 图片_分割, 逻辑型, , 
.参数 参_原图片, 字节集, , 
.参数 参_横向分割数量, 整数型, 可空, 默认：2
.参数 参_纵向分割数量, 整数型, 可空, 默认：2
.参数 参_图片数组, 字节集, 数组, 



.子程序 内存_修复堆内存重释放, 逻辑型, , 由于重释放会产生崩溃，因此修复


.子程序 程序_取函数地址_API, 整数型, , 取得函数地址，api版
.参数 参_模块名, 文本型, , 
.参数 参_命令名, 文本型, , 



.子程序 内存_修改内存, 逻辑型, , 非高段地址可使用 内存_写到内存（） 或 内存_写到内存_dw
.参数 参_目的地址, 整数型, , 目的地址的缓冲区长度需大于或等于长度
.参数 参_字节集, 字节集, , 用于写入到目的地址的 数据
.参数 参_长度, 整数型, , 需要写入的长度



.子程序 内存_写到内存, 空白型, , 高段地址可使用 内存_修改内存（）
.参数 参_目的地址, 整数型, , 目的地址的缓冲区长度需大于或等于长度
.参数 参_源地址, 整数型, , 用于写入到目的地址的 数据的指针
.参数 参_长度, 整数型, , 需要写入的长度



.子程序 内存_取指令对其长度, 整数型, , 返回大于或等于给定长度的理想值。
.参数 参_预算长度, 整数型, , 
.参数 参_被扫描的字节集, 字节集, , 



.子程序 内存_跳转偏移处理, 字节集, , 返回 偏移call  jmp  转成成绝对call  jmp后的代码集 
.参数 参_字节集, 字节集, , 
.参数 参_函数地址, 整数型, , 函数基址



.子程序 内存_拷贝字节集, 整数型, , 拷贝一段字节集并返回内存指针,自动释放（申请内存与写到内存的结合。）
.参数 参_字节集, 字节集, , 需要拷贝的字节集



.子程序 内存_申请内存, 整数型, , 返回指针  自动释放，属性：不使用连续加填充0
.参数 参_长度, 整数型, , 字节



.子程序 程序_取参数个数, 整数型, , 【扫描函数 勿频繁】取得函数参数个数，4字节对齐。特殊情况下，个数不等同于实际个数。仅用于计算栈平衡数值。
.参数 参_被扫描函数指针, 整数型, , 



.子程序 程序_取子程序地址, 整数型, , 【扫描函数 勿频繁】动态扫描子程序真实地址，勿频繁调用  失败返回0
.参数 参_子程序指针, 子程序指针, , 



.子程序 内存_取calljmp地址, 整数型, , 将代码集中的偏移地址 转成绝对地址保存在数组里  并 返回成员数 
.参数 参_字节集, 字节集, , 
.参数 参_函数地址, 整数型, , 函数基址
.参数 参_存放数组, 整数型, 参考 数组, 存放已经转为绝对地址的偏移地址



.子程序 取子程序字节集代码, 字节集, , 返回 子程序头部到第一个返回处的代码集
.参数 参_子程序指针, 子程序指针, , 



.子程序 图片_到24位图, 字节集, , 把非24位BMP、JPG、GIF的图片转化为24位图
.参数 参_原图片, 字节集, , 
.参数 参_执行结果, 逻辑型, 参考 可空, 可以被省略，提供参数数据时只能提供变量。如果提供本参数，其中将被写入本命令的执行结果——执行成功时为真，执行失败时为假。



.子程序 图片_平铺拉伸, 字节集, , 按指定宽高  平铺/拉伸  成功返回图片字节集  失败返回空字节集
.参数 参_原图片, 字节集, , 
.参数 参_设定宽度, 整数型, 可空, 默认：1920
.参数 参_设定高度, 整数型, 可空, 默认：1080
.参数 参_处理类型, 整数型, 可空, 可空，默认0=平铺  1=拉伸



.子程序 文本_寻找出文本并删除, 文本型, , 比如：欲寻找的全文本为<12345789>,现在要删除2到5之间的全部字符，包括2跟5,成功返回删除后的结果文本，失败返回原文本！
.参数 欲寻找的全文本, 文本型, , 比如：欲寻找的全文本为 12345789
.参数 前面文本, 文本型, , 前面为“2”
.参数 后面文本, 文本型, , 后面为“5”
.参数 是否保留前后文本, 逻辑型, 可空, 默认不保留



.子程序 窗口_剔除风格, 整数型, , 返回值是指定的32位整数的原来的值。如果函数失败，返回值为0。若想获得更多错误信息，请调用GetLastError函数。
.参数 参_句柄, 整数型, , 
.参数 参_待剔除风格, 整数型, , 参考常量值 #窗口风格_  



.子程序 系统_取系统版本_汇编, 整数型, ,  0=未知.50=2k.51=XP.52=2k3.60=vista.61=win7.62=win8  63=winblue


.子程序 窗口_取光标坐标, 逻辑型, , 将插入标记的位置（按客户区坐标）信息拷贝到指定的POINT结构中
.参数 参_坐标, 精易_坐标, 参考, 



.子程序 窗口_剔除扩展风格, 整数型, , 返回值是指定的32位整数的原来的值。如果函数失败，返回值为0。若想获得更多错误信息，请调用GetLastError函数。
.参数 参_句柄, 整数型, , 
.参数 参_待剔除扩展风格, 整数型, , 参考常量值 #窗口扩展_  



.子程序 文本_取长度W, 整数型, , 取一段文本的长度，中文和字母都算一个长度
.参数 源文本, 字节集, , Unicode字节集



.子程序 外部组合框_查找, 整数型, , 返回-1表示没有找到。否则将返回找到的项目索引，索引从0开始。
.参数 参_组合框句柄, 整数型, , 
.参数 参数_欲查找文本, 文本型, , 可以是文本前缀，如：查找“易语言4.12”，则可以是“易语言”
.参数 参数_起始位置, 整数型, 可空, 默认为-1:表示从第一项开始查找。索引从0开始。



.子程序 外部组合框_精确查找, 整数型, , 本命令与查找相比，必须文本完全匹配才能找到项目。成功返回项目索引，失败返回-1。
.参数 参_组合框句柄, 整数型, , 
.参数 参数_欲查找文本, 文本型, , 必须全字匹配
.参数 参数_起始位置, 整数型, 可空, 默认为-1:表示从第一项开始查找。索引从0开始。



.子程序 网络_取网络文件大小_对象版, 长整数型, , 
.参数 url, 文本型, , 
.参数 代理IP, 文本型, 可空, 



.子程序 rar_测试文件, 逻辑型, , 测试压缩包密码是否正确
.参数 压缩文件, 文本型, , 
.参数 密码, 文本型, 可空, 



.子程序 文件_读入字节集, 整数型, , 成功 = 非0    失败 = 0
.参数 参_文件号, 整数型, , 
.参数 参_读入的字节集, 字节集, , 
.参数 参_读入长度, 整数型, 可空, 调用 文件_取实际大小 获取
.参数 参_读入字符数, 整数型, 可空, 默认1024



.子程序 时间_转为GMT格式3, 文本型, , 将日期时间型数据转换为GMT格式 Greenwich Mean Time
.参数 lpDateTime, 日期时间型, 可空, 



.子程序 窗口_重画, 逻辑型, , InvalidateRect
.参数 窗口句柄, 整数型, , 
.参数 清除背景, 逻辑型, 可空, 



.子程序 BASE64编码_ASM, 文本型, , 调用前务必调用 BASE64编解码_ASM_初始化   自动选择版本：AVX2、80386
.参数 参_字节集, 字节集, , 



.子程序 BASE64解码_ASM, 字节集, , 调用前务必调用 BASE64编解码_ASM_初始化   自动选择版本：AVX2、80386
.参数 参_文本, 文本型, , 



.子程序 取文本长度_ASM, 整数型, , 调用前务必调用 BASE64编解码_ASM_初始化    取文本型数据的长度，不包含结束0。自动选择版本：AVX2、SSE2、80386
.参数 参_文本, 通用型, 参考, 文本变量或文本指针



.子程序 BASE64编解码_ASM_初始化, 空白型, , 


.子程序 窗口_是否响应, 逻辑型, , 返回 真=窗口有效且能及时响应.假=窗口无效或已死掉失去了响应
.参数 窗口句柄, 整数型, , 



.子程序 窗口_隐藏任务按钮, 空白型, , 顶级窗口,会在任务条里显示一个按钮.通过本功能可以将其隐藏
.参数 窗口句柄, 整数型, , 



.子程序 数组_去重复_整数型, 整数型, , 返回剩余不重复数组的成员数量
.参数 整数数组, 整数型, 数组, 要去重复的 整数数组



.子程序 编码_URL解码_JS, 文本型, , 
.参数 参_待编码文本, 文本型, , 
.参数 参_类型, 整数型, 可空, 默认：0     0=decodeURI 1=decodeURIComponent  



.子程序 编码_URL编码_局部, 文本型, , 一般含有中文或#%&+符号的GET或POST表单参数才需要进行编码..不要对整个网址域名和页面文件名称进行编码
.参数 参_URL, 文本型, , 注意:不要编码整个网址,如 http://www.baidu.com/s?wd=精易模块 只需要编码 精易模块 文本
.参数 参_是否UTF8, 逻辑型, 可空, 采用UFT_8编码     示例代码如  "http://www.baidu.com/s?wd=" + URL编码 ( "精易模块" )



.子程序 编码_URL解码_局部, 文本型, , 
.参数 参_URL, 文本型, , 待解码的密文URL地址
.参数 参_是否UTF8, 逻辑型, 可空, 采用UFT_8解码



.子程序 编码_UTF8编码, 字节集, , 把一段窄文本型或宽文本数据转换成UTF8格式数据
.参数 文本数据, 文本型, 可空, 本函数的两个参数根据需要只可提供其中之一个参数
.参数 宽文本型, 字节集, 可空, 本函数的两个参数根据需要只可提供其中之一个参数



.子程序 编码_UTF8解码, 字节集, , 直接返回宽字节  参考返回窄字节
.参数 UTF8数据, 字节集, , 待解码的UTF8格式编码数据
.参数 文本数据, 文本型, 参考 可空, 参考返回 文本数据



.子程序 系统_取屏幕数量, 整数型, , 


.子程序 进制_十六进制转有符号的十进制, 整数型, , D0 -> -48
.参数 十六进制, 文本型, , 



.子程序 进制_有符号的十进制转十六进制, 文本型, , -48 -> D0
.参数 有符号的十进制, 整数型, , 



.子程序 rar_取压缩包内的文件数量, 整数型, , 
.参数 压缩文件, 文本型, , 
.参数 密码, 文本型, 可空, 



.子程序 窗口_设为无焦点, 整数型, , 设置窗口为无焦点窗口（类似输入法窗口不会获取焦点）
.参数 窗口句柄, 整数型, , 



.子程序 窗口_复制到剪贴板, 整数型, , 程序发送此消息给一个编辑框或combobox来复制当前选择的文本到剪贴板
.参数 窗口句柄, 整数型, , 



.子程序 窗口_隐藏小图标, 空白型, , 隐藏标题左上角的小图标
.参数 窗口句柄, 整数型, , 



.子程序 文本_取某位置文本, 文本型, , 取某位置下的文本，如果指定位置超出文本长度，返回空文本。
.参数 文本, 文本型, , 
.参数 位置, 整数型, , 
.参数 取出文本类型, 逻辑型, 参考 可空, 得到指定位置的文本类型，全角为真，半角为假。



.子程序 文件_是否被占用, 逻辑型, , 
.参数 文件路径, 文本型, , 



.子程序 窗口_取句柄_递归, 整数型, , 成功返回控件的句柄，失败返回0
.参数 句柄, 整数型, , 
.参数 指定类名, 文本型, , 



.子程序 窗口_取顶端文件夹路径, 文本型, , 成功返回路径，失败返回空文本


.子程序 程序_取安装目录, 文本型, , 成功返回目录，以“\”结尾。失败返回空文本。
.参数 程序名称, 文本型, , 如：e.exe



.子程序 rar_初始化, 逻辑型, , 使用解压缩前先调用一次该命令初始化获取rar.exe所在路径，成功初始化返回真，失败返回假。
.参数 rar所在路径, 文本型, 可空, 请传入完整路径，如果传入为空，则检测当前目录是否存在rar.exe文件，若不存在，则返回假。该文件可以在此地址下载：http://ec.125.la/source/plugin/plugin1/upload/rar.exe
.参数 rar主程序文件名, 文本型, 可空, 默认文件名为“rar.exe”，如果你想自定义文件名可以传入内容，比如传入“myrar.exe”，同时修改主程序的文件名，否则留空即可。



.子程序 时间_JSON转为时间, 日期时间型, , 把JSON数据格式的日期（YYYY-MM-DDTHH:mm:ss.sssZ）转北京时间
.参数 JSON时间, 文本型, , JSON数据格式的日期（YYYY-MM-DDTHH:mm:ss.sssZ）



.子程序 时间_时间转为JSON, 文本型, , 格式化为JSON数据格式（YYYY-MM-DDTHH:mm:ss.sssZ）
.参数 时间, 日期时间型, 可空, 留空时间默认取系统UTC时间格式。不为空请先减8个小时（东8区）。



.子程序 编码_Ansi到Unicode_JS, 文本型, , 
.参数 待转文本, 文本型, , 



.子程序 编码_Unicode到Ansi_JS, 文本型, , 
.参数 待转文本, 文本型, , 



.子程序 剪贴板_监听, 空白型, , 把指定的窗口句柄加入到剪贴板查看器链中
.参数 窗口句柄, 整数型, , 
.参数 回调函数, 子程序指针, , WndProc(整数型 hwnd, 整数型 uMsg, 整数型 wParam, 整数型 lParam)，返回1拦截。



.子程序 剪贴板_停止监听, 空白型, , 从剪贴板查看器链中删除指定的窗口句柄
.参数 窗口句柄, 整数型, , 



.子程序 进度条_滚动, 整数型, , 设置成功返回1，失败返回0。需要使用Windows通用组件库。
.参数 进度条句柄, 整数型, , 
.参数 滚动速度, 整数型, 可空, 滚动速度默认为30，0为停止滚动。数值越大速度越慢，称之为滚动延迟应该是比较合适的。



.子程序 时间_判断二十四节气, 文本型, , 返回文本型：若节气日，返回节气名称；不是节气日返回空。注：判断日期范围为1901年1月1日—2099年12月31日
.参数 日期, 日期时间型, , 



.子程序 系统_重启资源管理器, 逻辑型, , 重启资源管理器


.子程序 外部组合框_取结构信息, COMBOBOXINFO, , 返回组合框的结构信息
.参数 组合框句柄, 整数型, , 



.子程序 进程_终止进程, 逻辑型, , 一个或多个任务进程结束
.参数 进程名, 文本型, , 
.参数 完整路径, 文本型, 可空, 只终止指定路径的进程



.子程序 窗口_注册窗口热键, 逻辑型, , 注册窗口级热键,只有在窗口被激活时才有效
.参数 窗口句柄, 整数型, , 要注册热键那个窗口的句柄
.参数 功能键状态, 整数型, 可空, 请使用常量 #MOD_ALT、#MOD_CONTROL、#MOD_SHIFT 若要两个或以上的状态键按则把它们的值相加
.参数 键代码, 整数型, , 请使用 #A键、#B键、#F1键、#F2键... 等常量
.参数 热键响应类型, 整数型, 可空, 请使用常量:1.热键类型_键盘按下 2.热键类型_键盘松开;留空或传递0默认为键盘按下
.参数 子程序指针, 子程序指针, , 热键事件调用的子程序
.参数 允许继续输入, 逻辑型, 可空, 热键响应之后,是否允许继续输入该热键的文字(WM_CHAR),默认为假.不允许.



.子程序 窗口_撤销窗口热键, 逻辑型, , 撤销窗口级热键
.参数 窗口句柄, 整数型, , 要撤销热键那个窗口的句柄
.参数 键代码, 整数型, , 请使用 #A键、#B键、#F1键、#F2键... 等常量



.子程序 进程_端口取PID, 整数型, , 通过本地端口取出进程PID
.参数 端口号, 整数型, , 



.子程序 外部列表框_查找表项, 整数型, , 查找匹配字符串，忽略大小写，从指定开始表项序号开始查找，当查到某表项的文本字符串的前面包括指定的字符串则结束，找不到则转到列表框第一项继续查找，直到查完所有表项，如果起始查找位置为-1则从列表框第一项开始查找，如果找到则返回表项序号，否则返回 -1 。
.参数 列表框句柄, 整数型, , 
.参数 标题, 文本型, , 本参数指定欲查找表项的标题文本。
.参数 起始查找位置, 整数型, 可空, 本参数指定查找表项的起始位置。如果本参数被省略，默认值为 -1 ，即从首项开始查找。
.参数 是否精确匹配, 逻辑型, 可空, 本参数指定匹配标题文本时是否为精确匹配，如果本参数为假，则只要表项标题首部包含指定文本即认为匹配成功。如果本参数被省略，默认值为真。



.子程序 文件_取文本编码, 整数型, , 获取指定路径的txt文档的编码格式。成功返回（1：UTF-8，2：Unicode；3：Unicode big endian；4：ANSI），默认返回 4。注：请确保文件能被正常读入。
.参数 参_文件路径, 文本型, , 



.子程序 程序_等待窗口出现, 整数型, , 如果目标窗口出现则返回窗口句柄，否则将一直等待，超时返回 -1 。
.参数 父句柄, 整数型, 可空, 父窗口句柄
.参数 窗口标题, 文本型, 可空, 指定窗口标题。二选一
.参数 窗口类名, 文本型, 可空, 指定窗口类名。二选一
.参数 超时返回, 整数型, 可空, 单位为毫秒，超过此时间等待还没结果则返回假，留空则一直等待
.参数 是否顶端, 逻辑型, 可空, 默认为假。如果为真，顶端窗口的标题或类名和指定的相同才返回窗口句柄。



.子程序 时间_秒到时分秒格式, 文本型, , 返回指定格式的时间文本
.参数 秒, 整数型, , 
.参数 格式, 文本型, 可空, 默认:d天h小时m分s秒
.参数 自动补零, 逻辑型, 可空, 不足2位数自动前面补0



.子程序 时间_星期几取日期, 日期时间型, , 返回指定时间段里指定星期几的日期
.参数 参_时间, 日期时间型, 可空, 留空默认取当前时间
.参数 参_星期几, 整数型, , 1-7，分别代表星期一到星期日



.子程序 系统_修改DNS, 逻辑型, , 如果首选DNS跟备用DNS都不填则默认设置成自动获取,成功返回真,失败返回假
.参数 连接名称, 文本型, 可空, 为空则自动获取单前连接的网络名称
.参数 首选DNS, 文本型, 可空, 格式：1.1.1.1
.参数 备用DNS, 文本型, 可空, 格式：1.1.1.1
.参数 错误原因, 文本型, 参考 可空, 可以提供一个文本变量,接收当修改失败时的错误信息



.子程序 编码_URL编码_快速, 文本型, , 与PHP的 urlencode() 函数功能相同
.参数 数据, 字节集, , 
.参数 大写, 逻辑型, 可空, 



.子程序 网址_取所有参数, 整数型, , 取出指定网址中所有的键名和键值，返回取到的数量。
.参数 参_网址, 文本型, , 
.参数 参_名称, 文本型, 参考 可空, 返回名称；如：http://www.baidu.com/nihao?id=123456&name=hello，其中nihao就是名称
.参数 参_键名数组, 文本型, 参考 可空 数组, 
.参数 参_键值数组, 文本型, 参考 可空 数组, 



.子程序 程序_任务栏窗口图标状态, 逻辑型, , 设置或获取指定窗口的任务栏图标状态
.参数 窗口句柄, 整数型, , 
.参数 参数, 整数型, , 1、隐藏图标；2、显示图标；3、取得当前显示状态



.子程序 地址_取API地址, 整数型, , 返回API地址
.参数 动态链接库名, 文本型, , 
.参数 函数名, 文本型, , 



.子程序 剪辑板_置字节集, 空白型, , 设置指定宽字符到系统剪辑板
.参数 欲置剪辑版的数据, 字节集, , Unicode文本格式



.子程序 网页_参数Ascii排序, 文本型, , 对传入的请求参数按参数名的字典序（ASCII码)排序
.参数 请求参数, 文本型, , url键值对格式(即key1=value1&key2=value2)
.参数 排序方式, 整数型, 可空, 0.升序排序 1.降序排序  留空默认 0.升序



.子程序 线程_启动_文本型, 整数型, , 成功返回线程句柄，失败返回0；只允许传入文本或字节集，堆指针。
.参数 欲执行的子程序, 整数型, , 到整数 (&欲执行的子程序)
.参数 创建后是否挂起线程, 逻辑型, 可空, 默认为假
.参数 线程ID, 整数型, 参考 可空, 接收线程ID
.参数 参数1, 通用型, 参考 可空, 只允许传入文本或字节集
.参数 参数2, 通用型, 参考 可空, 只允许传入文本或字节集
.参数 参数3, 通用型, 参考 可空, 只允许传入文本或字节集
.参数 参数4, 通用型, 参考 可空, 只允许传入文本或字节集
.参数 参数5, 通用型, 参考 可空, 只允许传入文本或字节集
.参数 参数6, 通用型, 参考 可空, 只允许传入文本或字节集
.参数 参数7, 通用型, 参考 可空, 只允许传入文本或字节集
.参数 参数8, 通用型, 参考 可空, 只允许传入文本或字节集
.参数 参数9, 通用型, 参考 可空, 只允许传入文本或字节集
.参数 参数10, 通用型, 参考 可空, 只允许传入文本或字节集



.子程序 调用子程序_数组, 整数型, , 
.参数 调用地址, 整数型, , 
.参数 参数数组, 整数型, 可空 数组, 
.参数 是否为C调用, 逻辑型, 可空, 



.子程序 线程_启动_8字节, 整数型, , 成功返回线程句柄，失败返回0；只允许传入双精度小数型、日期时间型、长整数型，所有参数必须是8字节。
.参数 欲执行的子程序, 整数型, , 到整数 (&欲执行的子程序)
.参数 创建后是否挂起线程, 逻辑型, 可空, 默认为假
.参数 线程ID, 整数型, 参考 可空, 接收线程ID
.参数 参数1, 通用型, 参考 可空, 只允许传入双精度小数型、日期时间型、长整数型，所有参数必须是8字节
.参数 参数2, 通用型, 参考 可空, 只允许传入双精度小数型、日期时间型、长整数型，所有参数必须是8字节
.参数 参数3, 通用型, 参考 可空, 只允许传入双精度小数型、日期时间型、长整数型，所有参数必须是8字节
.参数 参数4, 通用型, 参考 可空, 只允许传入双精度小数型、日期时间型、长整数型，所有参数必须是8字节
.参数 参数5, 通用型, 参考 可空, 只允许传入双精度小数型、日期时间型、长整数型，所有参数必须是8字节
.参数 参数6, 通用型, 参考 可空, 只允许传入双精度小数型、日期时间型、长整数型，所有参数必须是8字节
.参数 参数7, 通用型, 参考 可空, 只允许传入双精度小数型、日期时间型、长整数型，所有参数必须是8字节
.参数 参数8, 通用型, 参考 可空, 只允许传入双精度小数型、日期时间型、长整数型，所有参数必须是8字节
.参数 参数9, 通用型, 参考 可空, 只允许传入双精度小数型、日期时间型、长整数型，所有参数必须是8字节
.参数 参数10, 通用型, 参考 可空, 只允许传入双精度小数型、日期时间型、长整数型，所有参数必须是8字节



.子程序 线程_启动_4字节, 整数型, , 成功返回线程句柄，失败返回0；只允许传入整数型、短整数型、字节型、逻辑型、子程序指针、小数型，所有参数必须是4字节。
.参数 欲执行的子程序, 整数型, , 到整数 (&欲执行的子程序)
.参数 创建后是否挂起线程, 逻辑型, 可空, 默认为假
.参数 线程ID, 整数型, 参考 可空, 接收线程ID
.参数 参数1, 通用型, 参考 可空, 只允许传入整数型、短整数型、字节型、逻辑型、子程序指针、小数型，所有参数必须是4字节。
.参数 参数2, 通用型, 参考 可空, 只允许传入整数型、短整数型、字节型、逻辑型、子程序指针、小数型，所有参数必须是4字节。
.参数 参数3, 通用型, 参考 可空, 只允许传入整数型、短整数型、字节型、逻辑型、子程序指针、小数型，所有参数必须是4字节。
.参数 参数4, 通用型, 参考 可空, 只允许传入整数型、短整数型、字节型、逻辑型、子程序指针、小数型，所有参数必须是4字节。
.参数 参数5, 通用型, 参考 可空, 只允许传入整数型、短整数型、字节型、逻辑型、子程序指针、小数型，所有参数必须是4字节。
.参数 参数6, 通用型, 参考 可空, 只允许传入整数型、短整数型、字节型、逻辑型、子程序指针、小数型，所有参数必须是4字节。
.参数 参数7, 通用型, 参考 可空, 只允许传入整数型、短整数型、字节型、逻辑型、子程序指针、小数型，所有参数必须是4字节。
.参数 参数8, 通用型, 参考 可空, 只允许传入整数型、短整数型、字节型、逻辑型、子程序指针、小数型，所有参数必须是4字节。
.参数 参数9, 通用型, 参考 可空, 只允许传入整数型、短整数型、字节型、逻辑型、子程序指针、小数型，所有参数必须是4字节。
.参数 参数10, 通用型, 参考 可空, 只允许传入整数型、短整数型、字节型、逻辑型、子程序指针、小数型，所有参数必须是4字节。



.子程序 目录_是否存在W, 逻辑型, , 判断路径是否存在
.参数 欲判断的目录名称, 字节集, , 要判断的路径



.子程序 系统_刷新, 空白型, , 立即刷新系统，让注册表新的设置立即生效。


.子程序 窗口_毛玻璃特效, 逻辑型, , 仅Win10有效，成功返回真，失败返回假。
.参数 窗口句柄, 整数型, , 



.子程序 网址_取指定参数值, 文本型, , 成功返回键值，失败返回空。
.参数 网址, 文本型, , 
.参数 参数名, 文本型, , 



.子程序 进程_PID取端口, 整数型, , 通过进程PID取出本地端口
.参数 PID, 整数型, , 进程ID



.子程序 时间_取间隔_开始, 空白型, , 取微秒级时间间隔.[Mr.Yang提供]
.参数 标记, 文本型, 可空, 用于区分不同的时间.与"时间_取间隔_结束"对应.



.子程序 时间_取间隔_结束, 文本型, , 取微秒级时间间隔.返回间隔时间.[Mr.Yang提供]
.参数 标记, 文本型, 可空, 用于区分不同的时间.与"时间_取间隔_开始"对应.



.子程序 网页_更改IE版本, 逻辑型, , 需要XP以上系统支持，且IE版本不低于8，写入后永久生效。多数情况需获取管理员权限，详情参阅：https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/general-info/ee330730(v=vs.85)#browser-emulation
.参数 类型, 整数型, 可空, 为空或0移除写入的版本  1=ie7  2=ie8   3=ie9   4=ie10   5=ie11
.参数 是否使用所有用户, 逻辑型, 可空, 默认为假！使用当前用户，为真则使用所有用户。



.子程序 文本_是否为双字节字符, 逻辑型, , By 火威网络 如果为双字节返回真，否则返回假。如果指定位置超出文本长度，返回0
.参数 欲检查文本, 字节集, , 
.参数 欲检查的字符位置, 整数型, , 0为首位置，1为第2个位置，如此类推，必须是大于0。



.子程序 文本_是否为双字节字符Ex, 逻辑型, , By 火威网络 如果为双字节返回真，否则返回假。如果指定位置超出文本长度，返回0
.参数 欲检查文本, 字节集, , 
.参数 欲检查的字符位置, 整数型, , 0为首位置，1为第2个位置，如此类推，必须是大于0。



.子程序 外部选择框_点击, 空白型, , 会触发选择框选中与取消选中事件
.参数 窗口句柄, 整数型, , 



.子程序 __set_short, 整数型, , 请确保指针的合法性,写到内存
.参数 lpAddr, 整数型, , 内存地址
.参数 offset, 整数型, , 偏移
.参数 value, 短整数型, , 写入值



.子程序 __query_bit, 逻辑型, , 查询一个整数 32位中的某一位是否为 1  @福仔
.参数 num, 整数型, , 
.参数 bit, 字节型, , 只支持 0 - 31, 越界返回假



.子程序 __set_bit_on, 整数型, , 设置一个整数 32位中的某一位为1, 返回设置后的值  @福仔
.参数 num, 整数型, , 
.参数 bit, 字节型, , 只支持 0 - 31, 越界返回0



.子程序 __set_bit_off, 整数型, , 设置一个整数 32位中的某一位为0, 返回设置后的值  @福仔
.参数 num, 整数型, , 
.参数 bit, 字节型, , 只支持 0 - 31, 越界返回0



.子程序 磁盘_取驱动器总线类型, 文本型, , 
.参数 盘符, 文本型, , 



.子程序 系统_禁用文件系统重定向, 逻辑型, , 禁用调用线程的文件系统重定向，默认情况下启用文件系统重定向。此功能对于想要访问本机system32目录的32位应用程序很有用。


.子程序 系统_恢复文件系统重定向, 逻辑型, , 恢复调用线程的文件系统重定向。


.子程序 进程_取路径, 文本型, , 成功返回路径,失败返回空文本
.参数 PID, 整数型, 可空, 



.子程序 格式化文本A, 文本型, , 字节集类型的参数必须传递数据指针, 比如 取指针_字节集型() 
.参数 格式, 文本型, , 
.参数 参数1, 通用型, 参考 可空, 
.参数 参数2, 通用型, 参考 可空, 
.参数 参数3, 通用型, 参考 可空, 
.参数 参数4, 通用型, 参考 可空, 
.参数 参数5, 通用型, 参考 可空, 
.参数 参数6, 通用型, 参考 可空, 
.参数 参数7, 通用型, 参考 可空, 
.参数 参数8, 通用型, 参考 可空, 
.参数 参数9, 通用型, 参考 可空, 
.参数 参数10, 通用型, 参考 可空, 
.参数 参数11, 通用型, 参考 可空, 
.参数 参数12, 通用型, 参考 可空, 
.参数 参数13, 通用型, 参考 可空, 
.参数 参数14, 通用型, 参考 可空, 
.参数 参数15, 通用型, 参考 可空, 
.参数 参数16, 通用型, 参考 可空, 
.参数 参数17, 通用型, 参考 可空, 
.参数 参数18, 通用型, 参考 可空, 
.参数 参数19, 通用型, 参考 可空, 
.参数 参数20, 通用型, 参考 可空, 



.子程序 格式化文本W, 字节集, , Unicode文本必须以\0\0结尾, 字节集类型的参数必须传递数据指针, 比如 取指针_字节集型() 
.参数 格式, 字节集, , 
.参数 参数1, 通用型, 参考 可空, 
.参数 参数2, 通用型, 参考 可空, 
.参数 参数3, 通用型, 参考 可空, 
.参数 参数4, 通用型, 参考 可空, 
.参数 参数5, 通用型, 参考 可空, 
.参数 参数6, 通用型, 参考 可空, 
.参数 参数7, 通用型, 参考 可空, 
.参数 参数8, 通用型, 参考 可空, 
.参数 参数9, 通用型, 参考 可空, 
.参数 参数10, 通用型, 参考 可空, 
.参数 参数11, 通用型, 参考 可空, 
.参数 参数12, 通用型, 参考 可空, 
.参数 参数13, 通用型, 参考 可空, 
.参数 参数14, 通用型, 参考 可空, 
.参数 参数15, 通用型, 参考 可空, 
.参数 参数16, 通用型, 参考 可空, 
.参数 参数17, 通用型, 参考 可空, 
.参数 参数18, 通用型, 参考 可空, 
.参数 参数19, 通用型, 参考 可空, 
.参数 参数20, 通用型, 参考 可空, 



.子程序 格式化文本A_数组, 文本型, , 数组里如果用到字节集参数那这个成员必须指向字节集数据地址, 可以使用 取指针_字节集型() 来获取
.参数 格式, 文本型, , 
.参数 参数, 整数型, 参考 可空 数组, 



.子程序 格式化文本W_数组, 字节集, , 数组里如果用到字节集参数那这个成员必须指向字节集数据地址, 可以使用 取指针_字节集型() 来获取
.参数 格式, 字节集, , 
.参数 参数, 整数型, 参考 可空 数组, 



.子程序 目录_创建W, 空白型, , 创建多级目录
.参数 目录名, 字节集, , 待创建的目录的全路径，Unicode编码



.子程序 系统_取消电源管理, 逻辑型, , 避免睡眠、待机


.子程序 系统_恢复电源管理, 逻辑型, , 


.子程序 系统_去掉屏保, 逻辑型, , 


.子程序 系统_恢复屏保, 逻辑型, , 


.子程序 窗口_监视锁屏_注册, 逻辑型, , 注册指定的窗口以接收会话更改通知。
.参数 窗口句柄, 整数型, , 
.参数 响应监视事件, 子程序指针, , 1个整数型参数，1=锁屏，2=取消锁屏



.子程序 窗口_监视锁屏_卸载, 逻辑型, , 取消注册指定的窗口，以便不接收其他会话更改通知。
.参数 窗口句柄, 整数型, , 



.子程序 编码_Base64转图片, 字节集, , 成功返回图片，失败返回空字节集
.参数 Base64, 文本型, , data:image/xxx;base64,



.子程序 程序_是否在虚拟机中运行, 逻辑型, , 通过BIOS信息检测程序是否在虚拟机中运行（不支持XP）


.子程序 目录_取x86系统目录, 文本型, , 取x86的system文件夹


.子程序 系统_取所有用户名, 整数型, , 获取Windows系统所有用户名
.参数 用户名, 文本型, 参考 数组, 



.子程序 运算_大小端转换, 整数型, , 
.参数 需要转换的值, 整数型, , 



.子程序 窗口_取标题W, 字节集, , 获取指定窗口句柄的Unicode标题
.参数 窗口句柄, 整数型, , 



.子程序 文本_倒取中间_批量, 整数型, , 比如：欲取全文本为<12345>,现在要取出“3”，<3>的后面为“4”，<3>的前面为“2”
.参数 源文本, 文本型, , 比如：欲取全文本为 12345
.参数 后面标识文本, 文本型, , 3的后面为“4”
.参数 前面标识文本, 文本型, , 3的前面为“2”
.参数 存放取出文本的数组, 文本型, 可空 数组, 存放取出文本的数组
.参数 是否不区分大小写, 逻辑型, 可空, 是否区分大小写
.参数 文本长度大于此数的不要, 整数型, 可空, 文本长度大于此数的不要;如取出的文本大于50的不要;留空为不限制(下面参数中的加入的后缀不算在其中，标志文本为真那么标志算在其中)
.参数 为取出的文本加上后缀, 文本型, 可空, 在取出的文本后面加上一段字符或汉字！可空！
.参数 为取出的文本加上前缀, 文本型, 可空, 在取出的文本前面加上一段字符或汉字！可空！
.参数 连后面标识文本一起取出, 逻辑型, 可空, 是否连<后面标识文本>一起取出? 默认为假，不取出！
.参数 连前面标识文本一起取出, 逻辑型, 可空, 是否连<前面标识文本>一起取出? 默认为假，不取出！
.参数 起始位置, 整数型, 可空, 



.子程序 进程_取进程启动时间, 文本型, , 返回进程启动时间，如：20200813145000
.参数 进程ID, 整数型, 可空, PID



.子程序 编码_usc2到Unicode, 字节集, , \uD83D\uDD25\uD83D\uDCE6 => { 61, 216, 37, 221, 61, 216, 230, 220 }
.参数 欲转换的文本, 文本型, , 



.子程序 编码_Unicode到usc2, 文本型, , { 61, 216, 37, 221, 61, 216, 230, 220 } => \uD83D\uDD25\uD83D\uDCE6
.参数 欲转换的Unicode, 字节集, , 



.子程序 程序_删除自身1, 空白型, , 删除程序自身EXE文件


.子程序 进程_终止进程W, 逻辑型, , 一个或多个任务进程结束
.参数 进程名, 字节集, , 进程名->Unicode
.参数 完整路径, 字节集, 可空, 只终止指定路径的进程



.子程序 系统_清除托盘残留1, 空白型, , 清除因调试或者其他原因进程已退出但托盘未退出的残留图标,不支持XP


.子程序 进程_取路径W, 字节集, , 成功返回Unicode路径,失败返回空字节集
.参数 ProcessID, 整数型, 可空, 



.子程序 图片_取格式W, 文本型, , 根据文件头部判断文件格式，成功返回格式名称，失败返回空。
.参数 绝对路径, 字节集, , 绝对路径->Unicode



.子程序 图片_取格式, 文本型, , 根据文件头部判断文件格式，成功返回格式名称，失败返回空。
.参数 绝对路径, 文本型, , 绝对路径



.子程序 文件_枚举W, 整数型, , 枚举某个目录下的指定类型文件，成功返回文件数组。
.参数 欲寻找的目录, 字节集, , 
.参数 欲寻找的文件名, 字节集, , *为寻找全部文件
.参数 文件数组, 字节集, 参考 可空 数组, 
.参数 是否带路径, 逻辑型, 可空, 为真时返回文件为绝对路径
.参数 是否遍历子目录, 逻辑型, 可空, 为真时文件数组不主动清空



.子程序 文本_均分文本1, 文本型, , 按长度给文本加入换行符
.参数 欲均分的文本, 文本型, , 
.参数 每行文本长度, 整数型, , 



.子程序 bin2hex, 文本型, , 字节集转十六进制文本:快速
.参数 src, 字节集, , 



.子程序 hex2bin, 字节集, , 十六进制文本转字节集(未2字节对齐情况下将忽略最后一位):快速
.参数 src, 文本型, , 



.子程序 系统_注册项是否存在W, 逻辑型, , 存在返回真
.参数 根目录, 整数型, , HKEY_*
.参数 全路径注册项名, 字节集, , 
.参数 项名称, 字节集, , 



.子程序 系统_取文本注册项W, 字节集, , 成功返回数据
.参数 根目录, 整数型, , HKEY_*
.参数 全路径注册项名, 字节集, , 
.参数 项名称, 字节集, , 



.子程序 系统_写文本注册项W, 逻辑型, , 成功返回真
.参数 根目录, 整数型, , HKEY_*
.参数 全路径注册项名, 字节集, , 
.参数 注册表值类型, 整数型, , REG_*
.参数 项名称, 字节集, , 
.参数 欲写入值, 字节集, , 



.子程序 系统_取数值注册项W, 整数型, , 成功返回数据
.参数 根目录, 整数型, , HKEY_*
.参数 全路径注册项名, 字节集, , 
.参数 项名称, 字节集, , 



.子程序 系统_写数值注册项W, 逻辑型, , 成功返回真
.参数 根目录, 整数型, , HKEY_*
.参数 全路径注册项名, 字节集, , 
.参数 注册表值类型, 整数型, , REG_*
.参数 项名称, 字节集, , 
.参数 欲写入值, 整数型, , 



.子程序 键盘_键代码取键名1, 文本型, , 成功返回键代码的键名
.参数 键代码, 整数型, , 



.子程序 网页_掩码计算, 整数型, , 例：起始IP：121.224.0.0   结束IP：121.239.255.255   返回12
.参数 起始IP, 文本型, , 
.参数 结束IP, 文本型, , 



.程序集 Api, , , 

.子程序 channel_message, 文本型, , /api/v3/channel/message
.参数 object_name, 整数型, 可空, 消息类型, 见[objectName], 不传默认为 1, 代表文本类型。9 代表 kmarkdown 消息, 10 代表卡片消息。
.参数 channel_id, 文本型, , 目标频道 id
.参数 content, 文本型, , 消息内容
.参数 quote, 文本型, 可空, 回复某条消息的 msgId
.参数 nonce, 文本型, 可空, nonce, 服务端不做处理, 原样返回
.参数 token, 文本型, 可空, 多机器人预留位置 采用文件对应 token=token

.局部变量 url, 文本型, , , 
.局部变量 header, 文本型, , , 
.局部变量 json, 类_json, , , 
.局部变量 result, 类_json, , , 
.局部变量 cont, 类_json, , , 

赋值 (url, 相加 (g_url, “/channel/message”))
赋值 (header, 相加 (header, “Authorization: Bot ”, 选择 (等于 (token, “”), g_token, 读配置项 (相加 (取运行目录 (), “\bot_token.ini”), “token”, token, )), #换行符, “Content-Type: application/json”))
.判断开始 (cont.解析 (content, ))
    json.置属性数值 (“object_name”, 10)
    json.置属性 (“content”, cont.取数据文本 (), )
.判断 (不等于 (寻找文本 (content, “bilibili.com”, , 假), -1))
    json.置属性数值 (“object_name”, 1)
    json.置属性 (“content”, content, )
.判断 (不等于 (寻找文本 (content, “.png”, , 假), -1))
    json.置属性数值 (“object_name”, 2)
    json.置属性 (“content”, content, )
.默认
    json.置属性数值 (“object_name”, 9)
    json.置属性 (“content”, content, )
.判断结束
json.置属性 (“channel_id”, channel_id, )
json.置属性 (“content”, content, )
.如果真 (不等于 (quote, “”))
    json.置属性 (“quote”, quote, )
.如果真结束
 ' 调试输出 (url, header, json.取数据文本 ())
result.解析 (编码_utf8到gb2312 (到文本 (网页_访问 (url, 1, 编码_gb2312到utf8 (json.取数据文本 ()), , , header, , , , , , , ))), )
 ' SystemLog (, “向” ＋ channelId ＋ “推送信息: ” ＋ content, “kaiheila”)
 ' SystemLog (, “返回信息: ” ＋ result.取数据文本 (), “kaiheila”)
日志_输出 (“↑”, 相加 (“向”, channel_id, “推送信息: ”, content))
日志_输出 (“↑”, 相加 (“返回信息: ”, result.取数据文本 ()))
返回 (result.取通用属性 (“data['msg_id']”, ))


.子程序 intimacy_index, 空白型, , 
.参数 userId, 文本型, , 
.参数 token, 文本型, 可空, 

.局部变量 url, 文本型, , , 
.局部变量 header, 文本型, , , 
.局部变量 json, 类_json, , , 
.局部变量 result, 类_json, , , 

赋值 (url, 相加 (g_url, “/intimacy/index”))
赋值 (header, 相加 (“Authorization: Bot ”, 选择 (等于 (token, “”), g_token, 读配置项 (相加 (取运行目录 (), “\bot_token.ini”), “token”, token, )), #换行符, “Content-type: application/json”))
json.置属性 (“user_id”, userId, )
调试输出 (url, header, json.取数据文本 ())
result.解析 (编码_utf8到gb2312 (到文本 (网页_访问 (url, 1, 编码_gb2312到utf8 (json.取数据文本 ()), , , header, , , , , , , ))), )
 ' SystemLog (, “获取用户” ＋ userId ＋ “亲密信息”, “kaiheila”)
 ' SystemLog (, “返回信息: ” ＋ result.取数据文本 (), “kaiheila”)


.子程序 intimacy_update, 空白型, , 
.参数 userId, 文本型, , 
.参数 score, 整数型, , 
.参数 social_info, 文本型, , 
.参数 img_id, 整数型, , 
.参数 token, 文本型, 可空, 

.局部变量 url, 文本型, , , 
.局部变量 header, 文本型, , , 
.局部变量 json, 类_json, , , 
.局部变量 result, 类_json, , , 

赋值 (url, 相加 (g_url, “/intimacy/update”))
赋值 (header, 相加 (“Authorization: Bot ”, 选择 (等于 (token, “”), g_token, 读配置项 (相加 (取运行目录 (), “\bot_token.ini”), “token”, token, )), #换行符, “Content-type: application/json”))
json.置属性 (“user_id”, userId, )
json.置属性数值 (“score”, score)
json.置属性 (“social_info”, social_info, )
json.置属性数值 (“img_id”, img_id)

 ' 调试输出 (baseUrl, header, json.取数据文本 ())
result.解析 (编码_utf8到gb2312 (到文本 (网页_访问 (url, 1, 编码_gb2312到utf8 (json.取数据文本 ()), , , header, , , , , , , ))), )
 ' SystemLog (, “修改” ＋ userId ＋ “亲密度信息”, “kaiheila”)
 ' SystemLog (, “返回信息: ” ＋ result.取数据文本 (), “kaiheila”)


.子程序 gateway_index, 文本型, , /api/v3/gateway/index
.参数 token, 文本型, 可空, 
.参数 compress, 整数型, 可空, 

.局部变量 url, 文本型, , , 
.局部变量 header, 文本型, , , 
.局部变量 result, 类_json, , , 

赋值 (url, 相加 (g_url, “/gateway/index”))
赋值 (header, 相加 (“Authorization: Bot ”, 选择 (等于 (token, “”), g_token, 读配置项 (相加 (取运行目录 (), “\bot_token.ini”), “token”, token, ))))
.如果真 (是否为空 (compress))
    赋值 (compress, 1)
.如果真结束
赋值 (url, 相加 (url, “?compress=”, 到文本 (compress)))
result.解析 (编码_utf8到gb2312 (到文本 (网页_访问 (url, 0, , , , header, , , , , , , ))), )
调试输出 (url, result.取数据文本 ())
返回 (result.取通用属性 (“data.url”, ))
 ' {"code": 0,"message": "操作成功","data": {"url": "wss://xxxx"}}
 ' {"code":0,"message":"操作成功","data":{"url":"wss://ws.kaiheila.cn/gateway?compress=0&token=1234="}

.子程序 guild_index, 文本型, , /api/v3/guild/index
.参数 token, 文本型, 可空, 

.局部变量 header, 文本型, , , 
.局部变量 json, 类_json, , , 
.局部变量 result, 类_json, , , 
.局部变量 url, 文本型, , , 

赋值 (url, 相加 (g_url, “/intimacy/update”))
赋值 (header, 相加 (“Authorization: Bot ”, 选择 (等于 (token, “”), g_token, 读配置项 (相加 (取运行目录 (), “\bot_token.ini”), “token”, token, )), #换行符, “Content-type: application/json”))
 ' json.置属性 (“guild_id”, GuildId, )
 ' 调试输出 (baseUrl, header, json.取数据文本 ())
result.解析 (编码_utf8到gb2312 (到文本 (网页_访问 (url, 1, 编码_gb2312到utf8 (json.取数据文本 ()), , , header, , , , , , , ))), )
 ' SystemLog (, “获取服务器信息”, “kaiheila”)
 ' SystemLog (, “返回信息: ” ＋ result.取数据文本 (), “kaiheila”)
返回 (result.取数据文本 ())
未知函数_37992 () ' *** 缩略程序块 ***
 ' {"code":0,"message":"操作成功","data":[{"id":"4674611826831570","name":"萌动の进击小队","topic":"","user_id":"374797264","is_master":false,"icon":"https://img.kaiheila.cn/icons/2020-07/lGtX0jyRsB0hs0hs.jpg/icon","invite_enabled":1,"notify_type":2,"region":"shanghai","enable_open":1,"open_id":43628314,"default_channel_id":"4920503065903445","default_channel_id_setting":"4920503065903445","welcome_channel_id":"7134649593688386","ws_type":1,"roles":[{"role_id":93153,"name":"屠尽群内欧狗","color":3447003,"position":1,"hoist":0,"mentionable":0,"permissions":143448584},{"role_id":28231,"name":"老家伙了","color":15277667,"position":2,"hoist":1,"mentionable":1,"permissions":198705150},{"role_id":28232,"name":"老权限了","color":15158332,"position":3,"hoist":1,"mentionable":1,"permissions":198180840},{"role_id":91402,"name":"萌动家的崽崽们","color":15158332,"position":4,"hoist":1,"mentionable":0,"permissions":143448584},{"role_id":70039,"name":"老队友了","color":3447003,"position":5,"hoist":0,"mentionable":0,"permissions":147642888},{"role_id":28423,"name":"老朋友了","color":3066993,"position":6,"hoist":0,"mentionable":0,"permissions":135043080},{"role_id":29953,"name":"天启队员","color":12541924,"position":7,"hoist":0,"mentionable":0,"permissions":147642888},{"role_id":77700,"name":"BMLive","color":0,"position":8,"hoist":0,"mentionable":0,"permissions":134217729},{"role_id":92668,"name":"开播啦","color":0,"position":9,"hoist":0,"mentionable":0,"permissions":134217728},{"role_id":0,"name":"@全体成员","color":0,"hoist":0,"mentionable":0,"permissions":143448584}],"channels":[{"id":"9201982985091207","name":"?? 欢迎","guild_id":"4674611826831570","is_category":1,"is_master":false,"level":1,"type":0,"permission_overwrites":[{"role_id":0,"allow":0,"deny":0}],"permission_users":[],"channels":[{"id":"7134649593688386","name":"?? 欢迎","user_id":"374797264","guild_id":"4674611826831570","voice_quality":"1","limit_amount":0,"is_category":0,"is_readonly":false,"parent_id":"9201982985091207","is_private":false,"server_type":1,"server_url":"ws-sh3.kaiheila.cn:443","level":1,"slow_mode":0,"topic":"","is_master":false,"type":1,"permission_overwrites":[{"role_id":0,"allow":0,"deny":266240}],"permission_users":[],"permission_sync":0},{"id":"4671426705846718","name":"?? 规则 & 信息","user_id":"374797264","guild_id":"4674611826831570","voice_quality":"1","limit_amount":0,"is_category":0,"is_readonly":false,"parent_id":"9201982985091207","is_private":false,"server_type":1,"server_url":"ws-sh3.kaiheila.cn:443","level":2,"slow_mode":0,"topic":"频道更新or变动日志","is_master":false,"type":1,"permission_overwrites":[{"role_id":28232,"allow":425000,"deny":0},{"role_id":28231,"allow":425000,"deny":0},{"role_id":0,"allow":2048,"deny":422952}],"permission_users":[],"permission_sync":0},{"id":"6439504774931802","name":"?? 权限 & 申请","user_id":"374797264","guild_id":"4674611826831570","voice_quality":"1","limit_amount":0,"is_category":0,"is_readonly":false,"parent_id":"9201982985091207","is_private":false,"server_type":1,"server_url":"ws-sh4.kaiheila.cn:443","level":3,"slow_mode":0,"topic":"","is_master":false,"type":1,"permission_overwrites":[{"role_id":28231,"allow":0,"deny":2048},{"role_id":28232,"allow":0,"deny":2048},{"role_id":70039,"allow":0,"deny":2048},{"role_id":29953,"allow":0,"deny":2048},{"role_id":28423,"allow":0,"deny":2048},{"role_id":0,"allow":6144,"deny":418856}],"permission_users":[],"permission_sync":0},{"id":"8946246843830026","name":"publicPush","user_id":"374797264","guild_id":"4674611826831570","voice_quality":"1","limit_amount":0,"is_category":0,"is_readonly":false,"parent_id":"9201982985091207","is_private":false,"server_type":1,"server_url":"ws-sh4.kaiheila.cn:443","level":4,"slow_mode":0,"topic":"8946246843830026","is_master":false,"type":1,"permission_overwrites":[{"role_id":0,"allow":0,"deny":4096}],"permission_users":[],"permission_sync":0},{"id":"8876187633547319","name":"privatePush","user_id":"374797264","guild_id":"4674611826831570","voice_quality":"1","limit_amount":0,"is_category":0,"is_readonly":false,"parent_id":"9201982985091207","is_private":false,"server_type":1,"server_url":"ws-sh3.kaiheila.cn:443","level":5,"slow_mode":0,"topic":"8876187633547319","is_master":false,"type":1,"permission_overwrites":[{"role_id":0,"allow":12615680,"deny":264192}],"permission_users":[{"user":{"id":"2279933469","username":"@野生的怪才君","identify_num":"6561","online":true,"os":"Websocket","status":1,"avatar":"https://img.kaiheila.cn/avatars/2021-01/YaJKS70ClV04g04g.png/icon","tag_info":{"color":"#6666CC","text":"开黑啦"},"mobile_verified":true,"nickname":"@野生的怪才君","roles":[28423,70039],"joined_at":1599030970000,"active_time":1609435303477},"allow":6144,"deny":0},{"user":{"id":"2898845865","username":"楚子御233","identify_num":"2398","online":false,"os":"Android","status":1,"avatar":"https://img.kaiheila.cn/avatars/2020-09/RwyDDjUOml0xc0xc.jpg/icon","mobile_verified":true,"nickname":"楚子御233","roles":[28232,91402],"joined_at":1595391577000,"active_time":1606399740765},"allow":2048,"deny":0}],"permission_sync":0}]},{"id":"2040082336289336","name":"?? 进击时刻","guild_id":"4674611826831570","is_category":1,"is_master":false,"level":2,"type":0,"permission_overwrites":[{"role_id":0,"allow":0,"deny":0}],"permission_users":[],"channels":[{"id":"4920503065903445","name":"?? 闲聊","user_id":"374797264","guild_id":"4674611826831570","voice_quality":"1","limit_amount":0,"is_category":0,"is_readonly":false,"parent_id":"2040082336289336","is_private":false,"server_type":1,"server_url":"ws-sh4.kaiheila.cn:443","level":1,"slow_mode":0,"topic":"都可以聊，没错，这边是真正的闲聊频道","is_master":false,"type":1,"permission_overwrites":[{"role_id":0,"allow":0,"deny":0}],"permission_users":[],"permission_sync":0},{"id":"3407099043767163","name":"?? 原神地铁站","user_id":"374797264","guild_id":"4674611826831570","voice_quality":"1","limit_amount":0,"is_category":0,"is_readonly":false,"parent_id":"2040082336289336","is_private":false,"server_type":1,"server_url":"ws-sh3.kaiheila.cn:443","level":2,"slow_mode":0,"topic":"","is_master":false,"type":1,"permission_overwrites":[{"role_id":0,"allow":0,"deny":0}],"permission_users":[],"permission_sync":1},{"id":"1074378324827907","name":"??圣诞节狂欢夜~","user_id":"374797264","guild_id":"4674611826831570","voice_quality":"1","limit_amount":0,"is_category":0,"is_readonly":false,"parent_id":"2040082336289336","is_private":false,"server_type":1,"server_url":"ws-sh4.kaiheila.cn:443","level":5,"slow_mode":0,"topic":"","is_master":false,"type":1,"permission_overwrites":[{"role_id":0,"allow":0,"deny":2048}],"permission_users":[],"permission_sync":0},{"id":"6923348389173964","name":"??圣诞节狂欢夜~","user_id":"374797264","guild_id":"4674611826831570","voice_quality":"2","limit_amount":50,"is_category":0,"is_readonly":false,"parent_id":"2040082336289336","is_private":false,"server_type":1,"server_url":"ws-sh3.kaiheila.cn:443","level":6,"slow_mode":0,"topic":"","is_master":false,"type":2,"permission_overwrites":[{"role_id":0,"allow":0,"deny":2048}],"permission_users":[],"permission_sync":0},{"id":"2602081638118679","name":"??? 闲聊","user_id":"374797264","guild_id":"4674611826831570","voice_quality":"2","limit_amount":50,"is_category":0,"is_readonly":false,"parent_id":"2040082336289336","is_private":false,"server_type":1,"server_url":"ws-sh4.kaiheila.cn:443","level":7,"slow_mode":0,"topic":"","is_master":false,"type":2,"permission_overwrites":[{"role_id":0,"allow":0,"deny":0}],"permission_users":[],"permission_sync":1}]},{"id":"3148240951158032","name":"??? 直播专区","guild_id":"4674611826831570","is_category":1,"is_master":false,"level":4,"type":0,"permission_overwrites":[{"role_id":28231,"allow":63437864,"deny":0},{"role_id":28232,"allow":63437864,"deny":0},{"role_id":70039,"allow":12621824,"deny":0},{"role_id":0,"allow":34816,"deny":64451624}],"permission_users":[],"channels":[{"id":"2213468576199940","name":"?? 萌动の天启小队","user_id":"374797264","guild_id":"4674611826831570","voice_quality":"3","limit_amount":10,"is_category":0,"is_readonly":false,"parent_id":"3148240951158032","is_private":false,"server_type":1,"server_url":"ws-sh3.kaiheila.cn:443","level":2,"slow_mode":0,"topic":"","is_master":false,"type":2,"permission_overwrites":[{"role_id":28231,"allow":63437864,"deny":0},{"role_id":28232,"allow":63437864,"deny":0},{"role_id":70039,"allow":12621824,"deny":0},{"role_id":0,"allow":34816,"deny":64451624}],"permission_users":[],"permission_sync":1,"users":[{"id":"374797264","username":"萌动众生","identify_num":"3507","online":true,"os":"Android","status":1,"avatar":"https://img.kaiheila.cn/avatars/2020-07/XkyJKsvalO2bc2bc.jpg/icon","mobile_verified":true,"nickname":"萌动众生"},{"id":"452244037","username":"BiliBili泽少","identify_num":"6583","online":true,"os":"Websocket","status":1,"avatar":"https://img.kaiheila.cn/avatars/2020-07/riBrofjkV902s02s.jpg/icon","mobile_verified":true,"nickname":"BiliBili泽少"}]},{"id":"9127567535107846","name":"? 阿泽的小队","user_id":"374797264","guild_id":"4674611826831570","voice_quality":"3","limit_amount":10,"is_category":0,"is_readonly":false,"parent_id":"3148240951158032","is_private":false,"server_type":1,"server_url":"ws-sh4.kaiheila.cn:443","level":3,"slow_mode":0,"topic":"","is_master":false,"type":2,"permission_overwrites":[{"role_id":28231,"allow":63437864,"deny":0},{"role_id":28232,"allow":63437864,"deny":0},{"role_id":70039,"allow":12621824,"deny":0},{"role_id":0,"allow":34816,"deny":64451624}],"permission_users":[],"permission_sync":1},{"id":"9336352446506648","name":"录制专用","user_id":"374797264","guild_id":"4674611826831570","voice_quality":"3","limit_amount":10,"is_category":0,"is_readonly":false,"parent_id":"3148240951158032","is_private":false,"server_type":1,"server_url":"ws-sh3.kaiheila.cn:443","level":4,"slow_mode":0,"topic":"","is_master":false,"type":2,"permission_overwrites":[{"role_id":28231,"allow":63437864,"deny":0},{"role_id":0,"allow":0,"deny":64486440}],"permission_users":[],"permission_sync":0}]},{"id":"4381278616673205","name":"???  开黑小队","guild_id":"4674611826831570","is_category":1,"is_master":false,"level":5,"type":0,"permission_overwrites":[{"role_id":28231,"allow":63437864,"deny":0},{"role_id":28232,"allow":63437864,"deny":0},{"role_id":0,"allow":12621824,"deny":51864616}],"permission_users":[],"channels":[{"id":"8204415661056837","name":"?? 我的世界·MOJANG","user_id":"374797264","guild_id":"4674611826831570","voice_quality":"2","limit_amount":25,"is_category":0,"is_readonly":false,"parent_id":"4381278616673205","is_private":false,"server_type":1,"server_url":"ws-sh3.kaiheila.cn:443","level":2,"slow_mode":0,"topic":"","is_master":false,"type":2,"permission_overwrites":[{"role_id":28231,"allow":63437864,"deny":0},{"role_id":28232,"allow":63437864,"deny":0},{"role_id":0,"allow":12621824,"deny":51864616}],"permission_users":[],"permission_sync":1},{"id":"3503268996803831","name":"?? 超级动物大逃杀","user_id":"374797264","guild_id":"4674611826831570","voice_quality":"2","limit_amount":25,"is_category":0,"is_readonly":false,"parent_id":"4381278616673205","is_private":false,"server_type":1,"server_url":"ws-sh4.kaiheila.cn:443","level":3,"slow_mode":0,"topic":"","is_master":false,"type":2,"permission_overwrites":[{"role_id":28231,"allow":63437864,"deny":0},{"role_id":28232,"allow":63437864,"deny":0},{"role_id":0,"allow":12621824,"deny":51864616}],"permission_users":[],"permission_sync":1},{"id":"9986841986701024","name":"? 原神","user_id":"374797264","guild_id":"4674611826831570","voice_quality":"2","limit_amount":50,"is_category":0,"is_readonly":false,"parent_id":"4381278616673205","is_private":false,"server_type":1,"server_url":"ws-sh3.kaiheila.cn:443","level":4,"slow_mode":0,"topic":"","is_master":false,"type":2,"permission_overwrites":[{"role_id":28231,"allow":63437864,"deny":0},{"role_id":28232,"allow":63437864,"deny":0},{"role_id":0,"allow":12621824,"deny":51864616}],"permission_users":[],"permission_sync":1},{"id":"7986733477113949","name":"?? 歌会","user_id":"374797264","guild_id":"4674611826831570","voice_quality":"3","limit_amount":50,"is_category":0,"is_readonly":false,"parent_id":"4381278616673205","is_private":false,"server_type":1,"server_url":"ws-sh3.kaiheila.cn:443","level":5,"slow_mode":0,"topic":"","is_master":false,"type":2,"permission_overwrites":[{"role_id":28231,"allow":63437864,"deny":0},{"role_id":28232,"allow":63437864,"deny":0},{"role_id":0,"allow":12621824,"deny":51864616}],"permission_users":[],"permission_sync":1},{"id":"5933403837754325","name":":-=-=-=-=-=-=-=-=-=-:","user_id":"374797264","guild_id":"4674611826831570","voice_quality":"2","limit_amount":0,"is_category":0,"is_readonly":false,"parent_id":"4381278616673205","is_private":false,"server_type":1,"server_url":"ws-sh3.kaiheila.cn:443","level":6,"slow_mode":0,"topic":"","is_master":false,"type":2,"permission_overwrites":[{"role_id":28231,"allow":63437864,"deny":0},{"role_id":28232,"allow":63437864,"deny":0},{"role_id":0,"allow":12621824,"deny":51864616}],"permission_users":[],"permission_sync":1},{"id":"8322595493063682","name":"??? 开黑小队Ⅰ","user_id":"374797264","guild_id":"4674611826831570","voice_quality":"2","limit_amount":25,"is_category":0,"is_readonly":false,"parent_id":"4381278616673205","is_private":false,"server_type":1,"server_url":"ws-sh3.kaiheila.cn:443","level":7,"slow_mode":0,"topic":"","is_master":false,"type":2,"permission_overwrites":[{"role_id":28231,"allow":63437864,"deny":0},{"role_id":28232,"allow":63437864,"deny":0},{"role_id":0,"allow":12621824,"deny":51864616}],"permission_users":[],"permission_sync":1},{"id":"9220366270536135","name":"??? 开黑小队Ⅱ","user_id":"374797264","guild_id":"4674611826831570","voice_quality":"2","limit_amount":25,"is_category":0,"is_readonly":false,"parent_id":"4381278616673205","is_private":false,"server_type":1,"server_url":"ws-sh3.kaiheila.cn:443","level":8,"slow_mode":0,"topic":"","is_master":false,"type":2,"permission_overwrites":[{"role_id":28231,"allow":63437864,"deny":0},{"role_id":28232,"allow":63437864,"deny":0},{"role_id":0,"allow":12621824,"deny":51864616}],"permission_users":[],"permission_sync":1},{"id":"9884518620168687","name":"??? 开黑小队Ⅲ","user_id":"374797264","guild_id":"4674611826831570","voice_quality":"2","limit_amount":25,"is_category":0,"is_readonly":false,"parent_id":"4381278616673205","is_private":false,"server_type":1,"server_url":"ws-sh4.kaiheila.cn:443","level":9,"slow_mode":0,"topic":"","is_master":false,"type":2,"permission_overwrites":[{"role_id":28231,"allow":63437864,"deny":0},{"role_id":28232,"allow":63437864,"deny":0},{"role_id":0,"allow":12621824,"deny":51864616}],"permission_users":[],"permission_sync":1},{"id":"9651308534877259","name":"??? 开黑小队Ⅳ","user_id":"374797264","guild_id":"4674611826831570","voice_quality":"2","limit_amount":25,"is_category":0,"is_readonly":false,"parent_id":"4381278616673205","is_private":false,"server_type":1,"server_url":"ws-sh4.kaiheila.cn:443","level":10,"slow_mode":0,"topic":"","is_master":false,"type":2,"permission_overwrites":[{"role_id":28231,"allow":63437864,"deny":0},{"role_id":28232,"allow":63437864,"deny":0},{"role_id":0,"allow":12621824,"deny":51864616}],"permission_users":[],"permission_sync":1},{"id":"2678692603936134","name":"??? 开黑小队Ⅴ","user_id":"374797264","guild_id":"4674611826831570","voice_quality":"2","limit_amount":25,"is_category":0,"is_readonly":false,"parent_id":"4381278616673205","is_private":false,"server_type":1,"server_url":"ws-sh4.kaiheila.cn:443","level":11,"slow_mode":0,"topic":"","is_master":false,"type":2,"permission_overwrites":[{"role_id":28231,"allow":63437864,"deny":0},{"role_id":28232,"allow":63437864,"deny":0},{"role_id":0,"allow":12621824,"deny":51864616}],"permission_users":[],"permission_sync":1},{"id":"9643802261257194","name":"??? 开黑小队Ⅵ","user_id":"374797264","guild_id":"4674611826831570","voice_quality":"2","limit_amount":25,"is_category":0,"is_readonly":false,"parent_id":"4381278616673205","is_private":false,"server_type":1,"server_url":"ws-sh4.kaiheila.cn:443","level":12,"slow_mode":0,"topic":"","is_master":false,"type":2,"permission_overwrites":[{"role_id":28231,"allow":63437864,"deny":0},{"role_id":28232,"allow":63437864,"deny":0},{"role_id":0,"allow":12621824,"deny":51864616}],"permission_users":[],"permission_sync":1},{"id":"4965167685249531","name":":-=-=-=-=-=-=-=-=-=-:","user_id":"374797264","guild_id":"4674611826831570","voice_quality":"2","limit_amount":0,"is_category":0,"is_readonly":false,"parent_id":"4381278616673205","is_private":false,"server_type":1,"server_url":"ws-sh4.kaiheila.cn:443","level":13,"slow_mode":0,"topic":"","is_master":false,"type":2,"permission_overwrites":[{"role_id":28231,"allow":63437864,"deny":0},{"role_id":28232,"allow":63437864,"deny":0},{"role_id":0,"allow":12621824,"deny":51864616}],"permission_users":[],"permission_sync":1},{"id":"3964949110027696","name":"??? 私聊Ⅰ","user_id":"374797264","guild_id":"4674611826831570","voice_quality":"2","limit_amount":4,"is_category":0,"is_readonly":false,"parent_id":"4381278616673205","is_private":false,"server_type":1,"server_url":"ws-sh3.kaiheila.cn:443","level":14,"slow_mode":0,"topic":"","is_master":false,"type":2,"permission_overwrites":[{"role_id":28231,"allow":63437864,"deny":0},{"role_id":28232,"allow":63437864,"deny":0},{"role_id":0,"allow":12621824,"deny":51864616}],"permission_users":[],"permission_sync":1},{"id":"8786161793548173","name":"??? 私聊Ⅱ","user_id":"374797264","guild_id":"4674611826831570","voice_quality":"2","limit_amount":4,"is_category":0,"is_readonly":false,"parent_id":"4381278616673205","is_private":false,"server_type":1,"server_url":"ws-sh3.kaiheila.cn:443","level":15,"slow_mode":0,"topic":"","is_master":false,"type":2,"permission_overwrites":[{"role_id":28231,"allow":63437864,"deny":0},{"role_id":28232,"allow":63437864,"deny":0},{"role_id":0,"allow":12621824,"deny":51864616}],"permission_users":[],"permission_sync":1},{"id":"8389819858077310","name":"??? 私聊Ⅲ","user_id":"374797264","guild_id":"4674611826831570","voice_quality":"2","limit_amount":4,"is_category":0,"is_readonly":false,"parent_id":"4381278616673205","is_private":false,"server_type":1,"server_url":"ws-sh4.kaiheila.cn:443","level":16,"slow_mode":0,"topic":"","is_master":false,"type":2,"permission_overwrites":[{"role_id":28231,"allow":63437864,"deny":0},{"role_id":28232,"allow":63437864,"deny":0},{"role_id":0,"allow":12621824,"deny":51864616}],"permission_users":[],"permission_sync":1}]},{"id":"5851911091434057","name":"?? 专属频道","guild_id":"4674611826831570","is_category":1,"is_master":false,"level":100,"type":0,"permission_overwrites":[{"role_id":0,"allow":12621824,"deny":0}],"permission_users":[],"channels":[{"id":"1613665896150746","name":"升君文化办公室聊天","user_id":"374797264","guild_id":"4674611826831570","voice_quality":"1","limit_amount":0,"is_category":0,"is_readonly":false,"parent_id":"5851911091434057","is_private":false,"server_type":1,"server_url":"ws-sh4.kaiheila.cn:443","level":1,"slow_mode":0,"topic":"","is_master":false,"type":1,"permission_overwrites":[{"role_id":0,"allow":12877824,"deny":6144}],"permission_users":[{"user":{"id":"1362466679","username":"老升","identify_num":"9090","online":false,"os":"Websocket","status":1,"avatar":"https://img.kaiheila.cn/assets/avatar_10.jpg/icon","mobile_verified":true,"nickname":"老升","roles":[28423,70039],"joined_at":1606816224000,"active_time":1607002162780},"allow":268288,"deny":0},{"user":{"id":"3655720641","username":"皮卡没有丘","identify_num":"0284","online":false,"os":"Websocket","status":1,"avatar":"https://img.kaiheila.cn/avatars/2020-12/c6n8y2mmMN02s02s.jpg/icon","mobile_verified":true,"nickname":"皮卡没有丘","roles":[28423,70039],"joined_at":1606816616000,"active_time":1606816616645},"allow":268288,"deny":0}],"permission_sync":0},{"id":"6438647694329361","name":"内鬼专用档案室","user_id":"374797264","guild_id":"4674611826831570","voice_quality":"1","limit_amount":0,"is_category":0,"is_readonly":false,"parent_id":"5851911091434057","is_private":false,"server_type":1,"server_url":"ws-sh3.kaiheila.cn:443","level":2,"slow_mode":0,"topic":"","is_master":false,"type":1,"permission_overwrites":[{"role_id":0,"allow":262144,"deny":2048}],"permission_users":[{"user":{"id":"3633010535","username":"Shugen","identify_num":"3438","online":true,"os":"Websocket","status":1,"avatar":"https://img.kaiheila.cn/avatars/2020-05/GVQi914BNL02s02s.jpg/icon","mobile_verified":true,"nickname":"Shugen","roles":[28231],"joined_at":1595499865000,"active_time":1610377998062},"allow":2048,"deny":0},{"user":{"id":"3966258738","username":"Il Harper","identify_num":"0735","online":true,"os":"Websocket","status":1,"avatar":"https://img.kaiheila.cn/avatars/2020-07/WoZ8T12JXq08c08c.jpg/icon","mobile_verified":true,"nickname":"Il Harper","roles":[28423,70039],"joined_at":1595562199000,"active_time":1610378112080},"allow":2048,"deny":0}],"permission_sync":0},{"id":"6887699588602185","name":"??B站三方对接","user_id":"374797264","guild_id":"4674611826831570","voice_quality":"1","limit_amount":0,"is_category":0,"is_readonly":false,"parent_id":"5851911091434057","is_private":false,"server_type":1,"server_url":"ws-sh4.kaiheila.cn:443","level":3,"slow_mode":0,"topic":"","is_master":false,"type":1,"permission_overwrites":[{"role_id":0,"allow":262144,"deny":2048}],"permission_users":[{"user":{"id":"3966258738","username":"Il Harper","identify_num":"0735","online":true,"os":"Websocket","status":1,"avatar":"https://img.kaiheila.cn/avatars/2020-07/WoZ8T12JXq08c08c.jpg/icon","mobile_verified":true,"nickname":"Il Harper","roles":[28423,70039],"joined_at":1595562199000,"active_time":1610378112080},"allow":2048,"deny":0},{"user":{"id":"3633010535","username":"Shugen","identify_num":"3438","online":true,"os":"Websocket","status":1,"avatar":"https://img.kaiheila.cn/avatars/2020-05/GVQi914BNL02s02s.jpg/icon","mobile_verified":true,"nickname":"Shugen","roles":[28231],"joined_at":1595499865000,"active_time":1610377998062},"allow":2048,"deny":0}],"permission_sync":0},{"id":"8711710822435428","name":"升君文化办公室","user_id":"374797264","guild_id":"4674611826831570","voice_quality":"2","limit_amount":10,"is_category":0,"is_readonly":false,"parent_id":"5851911091434057","is_private":false,"server_type":1,"server_url":"ws-sh3.kaiheila.cn:443","level":4,"slow_mode":0,"topic":"","is_master":false,"type":2,"permission_overwrites":[{"role_id":0,"allow":4096,"deny":12617728}],"permission_users":[{"user":{"id":"1362466679","username":"老升","identify_num":"9090","online":false,"os":"Websocket","status":1,"avatar":"https://img.kaiheila.cn/assets/avatar_10.jpg/icon","mobile_verified":true,"nickname":"老升","roles":[28423,70039],"joined_at":1606816224000,"active_time":1607002162780},"allow":13631488,"deny":0},{"user":{"id":"3655720641","username":"皮卡没有丘","identify_num":"0284","online":false,"os":"Websocket","status":1,"avatar":"https://img.kaiheila.cn/avatars/2020-12/c6n8y2mmMN02s02s.jpg/icon","mobile_verified":true,"nickname":"皮卡没有丘","roles":[28423,70039],"joined_at":1606816616000,"active_time":1606816616645},"allow":13664256,"deny":0}],"permission_sync":0},{"id":"6719874300234196","name":"??B站三方对接","user_id":"374797264","guild_id":"4674611826831570","voice_quality":"2","limit_amount":50,"is_category":0,"is_readonly":false,"parent_id":"5851911091434057","is_private":false,"server_type":1,"server_url":"ws-sh3.kaiheila.cn:443","level":5,"slow_mode":0,"topic":"","is_master":false,"type":2,"permission_overwrites":[{"role_id":0,"allow":0,"deny":2048}],"permission_users":[],"permission_sync":0},{"id":"7980903271743302","name":"楚子御233 ??","user_id":"374797264","guild_id":"4674611826831570","voice_quality":"2","limit_amount":10,"is_category":0,"is_readonly":false,"parent_id":"5851911091434057","is_private":false,"server_type":1,"server_url":"ws-sh3.kaiheila.cn:443","level":6,"slow_mode":0,"topic":"","is_master":false,"type":2,"permission_overwrites":[{"role_id":0,"allow":12621824,"deny":0}],"permission_users":[],"permission_sync":1},{"id":"9549600785206171","name":"shugen ??","user_id":"374797264","guild_id":"4674611826831570","voice_quality":"2","limit_amount":10,"is_category":0,"is_readonly":false,"parent_id":"5851911091434057","is_private":false,"server_type":1,"server_url":"ws-sh3.kaiheila.cn:443","level":7,"slow_mode":0,"topic":"","is_master":false,"type":2,"permission_overwrites":[{"role_id":0,"allow":12621824,"deny":0}],"permission_users":[{"user":{"id":"3633010535","username":"Shugen","identify_num":"3438","online":true,"os":"Websocket","status":1,"avatar":"https://img.kaiheila.cn/avatars/2020-05/GVQi914BNL02s02s.jpg/icon","mobile_verified":true,"nickname":"Shugen","roles":[28231],"joined_at":1595499865000,"active_time":1610377998062},"allow":1064,"deny":0}],"permission_sync":0}]}],"user_notify_type":0,"emojis":[],"my_roles":[77700,70039],"my_nickname":"BMLive","recommend_info":{"guild_id":"4674611826831570","open_id":"43628314","default_channel_id":"4920503065903445","name":"萌动の进击小队","icon":"https://img.kaiheila.cn/icons/2020-07/lGtX0jyRsB0hs0hs.jpg/icon","banner":"https://img.kaiheila.cn/assets/2020-07/WYZtaSAZPl0sg0go.png","desc":"B站主播萌动众生的进击小队语音","status":1,"tag":"我的世界  Minecraft"}},{"id":"3785158050166220","name":"机器人社区 - Bot Community","topic":"","user_id":"3966258738","is_master":false,"icon":"https://img.kaiheila.cn/icons/2020-11/fKIFpYdgfd0e80e8.png/icon","invite_enabled":1,"notify_type":1,"region":"shanghai","enable_open":1,"open_id":15862667,"default_channel_id":"2118926065513331","default_channel_id_setting":"2118926065513331","welcome_channel_id":"7399419909964325","ws_type":1,"roles":[{"role_id":62365,"name":"社区管理","color":3066993,"position":1,"hoist":1,"mentionable":0,"permissions":134217729},{"role_id":79691,"name":"机器人公约","color":15844367,"position":2,"hoist":0,"mentionable":0,"permissions":147642888},{"role_id":72119,"name":"Bot","color":15277667,"position":3,"hoist":1,"mentionable":0,"permissions":134742528},{"role_id":72508,"name":"开黑啦官方","color":15105570,"position":4,"hoist":1,"mentionable":0,"permissions":147642888},{"role_id":74884,"name":"蓝牌","color":3447003,"position":5,"hoist":1,"mentionable":0,"permissions":147642888},{"role_id":77641,"name":"Harper猫猫","color":0,"position":6,"hoist":0,"mentionable":0,"permissions":201326591},{"role_id":77643,"name":"Root","color":0,"position":7,"hoist":0,"mentionable":0,"permissions":199229143},{"role_id":77715,"name":"BMLive","color":0,"position":8,"hoist":0,"mentionable":0,"permissions":134217731},{"role_id":80055,"name":"四季酱","color":0,"position":9,"hoist":0,"mentionable":0,"permissions":134217959},{"role_id":83335,"name":"翻译/Translator","color":0,"position":10,"hoist":0,"mentionable":0,"permissions":134217728},{"role_id":93523,"name":"开播啦","color":0,"position":11,"hoist":0,"mentionable":0,"permissions":134221824},{"role_id":95322,"name":"检查/Inspector","color":0,"position":12,"hoist":0,"mentionable":0,"permissions":0},{"role_id":0,"name":"@全体成员","color":0,"hoist":0,"mentionable":0,"permissions":147642888}],"channels":[{"id":"9248381262346207","name":"欢迎","guild_id":"3785158050166220","is_category":1,"is_master":false,"level":1,"type":0,"permission_overwrites":[{"role_id":0,"allow":0,"deny":64221184}],"permission_users":[],"channels":[{"id":"2118926065513331","name":"公告","user_id":"3966258738","guild_id":"3785158050166220","voice_quality":"1","limit_amount":0,"is_category":0,"is_readonly":false,"parent_id":"9248381262346207","is_private":false,"server_type":1,"server_url":"ws-sh4.kaiheila.cn:443","level":1,"slow_mode":0,"topic":"","is_master":false,"type":1,"permission_overwrites":[{"role_id":0,"allow":0,"deny":64221184}],"permission_users":[],"permission_sync":1},{"id":"4311014847902427","name":"通知","user_id":"3966258738","guild_id":"3785158050166220","voice_quality":"1","limit_amount":0,"is_category":0,"is_readonly":false,"parent_id":"9248381262346207","is_private":false,"server_type":1,"server_url":"ws-sh4.kaiheila.cn:443","level":2,"slow_mode":0,"topic":"","is_master":false,"type":1,"permission_overwrites":[{"role_id":0,"allow":0,"deny":64221184}],"permission_users":[],"permission_sync":1},{"id":"7399419909964325","name":"欢迎","user_id":"3966258738","guild_id":"3785158050166220","voice_quality":"1","limit_amount":0,"is_category":0,"is_readonly":false,"parent_id":"9248381262346207","is_private":false,"server_type":1,"server_url":"ws-sh4.kaiheila.cn:443","level":3,"slow_mode":0,"topic":"","is_master":false,"type":1,"permission_overwrites":[{"role_id":0,"allow":0,"deny":64221184}],"permission_users":[],"permission_sync":1}]},{"id":"1700606945702051","name":"综合","guild_id":"3785158050166220","is_category":1,"is_master":false,"level":2,"type":0,"permission_overwrites":[{"role_id":0,"allow":0,"deny":0}],"permission_users":[],"channels":[{"id":"8316705894505670","name":"闲聊区","user_id":"3966258738","guild_id":"3785158050166220","voice_quality":"1","limit_amount":0,"is_category":0,"is_readonly":false,"parent_id":"1700606945702051","is_private":false,"server_type":0,"server_url":"ws1.kaiheila.cn:4443","level":1,"slow_mode":0,"topic":"","is_master":false,"type":1,"permission_overwrites":[{"role_id":0,"allow":0,"deny":0}],"permission_users":[],"permission_sync":1}]},{"id":"1742885831146235","name":"机器人公约","guild_id":"3785158050166220","is_category":1,"is_master":false,"level":3,"type":0,"permission_overwrites":[{"role_id":0,"allow":0,"deny":0}],"permission_users":[],"channels":[{"id":"3285459045056497","name":"介绍","user_id":"3966258738","guild_id":"3785158050166220","voice_quality":"1","limit_amount":0,"is_category":0,"is_readonly":false,"parent_id":"1742885831146235","is_private":false,"server_type":1,"server_url":"ws-sh4.kaiheila.cn:443","level":100,"slow_mode":0,"topic":"","is_master":false,"type":1,"permission_overwrites":[{"role_id":77641,"allow":423936,"deny":0},{"role_id":0,"allow":0,"deny":422944}],"permission_users":[],"permission_sync":0},{"id":"9155203584956320","name":"讨论","user_id":"3966258738","guild_id":"3785158050166220","voice_quality":"1","limit_amount":0,"is_category":0,"is_readonly":false,"parent_id":"1742885831146235","is_private":false,"server_type":1,"server_url":"ws-sh3.kaiheila.cn:443","level":100,"slow_mode":0,"topic":"","is_master":false,"type":1,"permission_overwrites":[{"role_id":0,"allow":0,"deny":0}],"permission_users":[],"permission_sync":1}]},{"id":"1123361744605908","name":"四季酱（测试）","guild_id":"3785158050166220","is_category":1,"is_master":false,"level":4,"type":0,"permission_overwrites":[{"role_id":0,"allow":0,"deny":0}],"permission_users":[{"user":{"id":"3854020099","username":"孤梦星影","identify_num":"5898","online":false,"os":"Websocket","status":1,"avatar":"https://img.kaiheila.cn/avatars/2020-07/XO1jU0Mlxk02s02s.jpg/icon","mobile_verified":true,"nickname":"孤梦星影","roles":[74884,62365],"joined_at":1606834660000,"active_time":1609738190950},"allow":3112,"deny":0}],"channels":[{"id":"9780593380130385","name":"介绍","user_id":"3966258738","guild_id":"3785158050166220","voice_quality":"1","limit_amount":0,"is_category":0,"is_readonly":false,"parent_id":"1123361744605908","is_private":false,"server_type":1,"server_url":"ws-sh3.kaiheila.cn:443","level":1,"slow_mode":0,"topic":"","is_master":false,"type":1,"permission_overwrites":[{"role_id":0,"allow":0,"deny":421888}],"permission_users":[{"user":{"id":"3854020099","username":"孤梦星影","identify_num":"5898","online":false,"os":"Websocket","status":1,"avatar":"https://img.kaiheila.cn/avatars/2020-07/XO1jU0Mlxk02s02s.jpg/icon","mobile_verified":true,"nickname":"孤梦星影","roles":[74884,62365],"joined_at":1606834660000,"active_time":1609738190950},"allow":3112,"deny":0}],"permission_sync":0},{"id":"6410201717804387","name":"告示板","user_id":"3854020099","guild_id":"3785158050166220","voice_quality":"1","limit_amount":0,"is_category":0,"is_readonly":false,"parent_id":"1123361744605908","is_private":false,"server_type":1,"server_url":"ws-sh3.kaiheila.cn:443","level":2,"slow_mode":0,"topic":"每日告示 / 精准卡池 / 首杀公告","is_master":false,"type":1,"permission_overwrites":[{"role_id":80055,"allow":14336,"deny":0},{"role_id":0,"allow":0,"deny":421888}],"permission_users":[{"user":{"id":"3854020099","username":"孤梦星影","identify_num":"5898","online":false,"os":"Websocket","status":1,"avatar":"https://img.kaiheila.cn/avatars/2020-07/XO1jU0Mlxk02s02s.jpg/icon","mobile_verified":true,"nickname":"孤梦星影","roles":[74884,62365],"joined_at":1606834660000,"active_time":1609738190950},"allow":3112,"deny":0}],"permission_sync":0},{"id":"6004165964684811","name":"讨论","user_id":"3966258738","guild_id":"3785158050166220","voice_quality":"1","limit_amount":0,"is_category":0,"is_readonly":false,"parent_id":"1123361744605908","is_private":false,"server_type":1,"server_url":"ws-sh3.kaiheila.cn:443","level":3,"slow_mode":0,"topic":"","is_master":false,"type":1,"permission_overwrites":[{"role_id":0,"allow":0,"deny":0}],"permission_users":[{"user":{"id":"3854020099","username":"孤梦星影","identify_num":"5898","online":false,"os":"Websocket","status":1,"avatar":"https://img.kaiheila.cn/avatars/2020-07/XO1jU0Mlxk02s02s.jpg/icon","mobile_verified":true,"nickname":"孤梦星影","roles":[74884,62365],"joined_at":1606834660000,"active_time":1609738190950},"allow":3112,"deny":0}],"permission_sync":1}]},{"id":"9378025328687596","name":"翻译/Translator（测试）","guild_id":"3785158050166220","is_category":1,"is_master":false,"level":5,"type":0,"permission_overwrites":[{"role_id":0,"allow":0,"deny":0}],"permission_users":[],"channels":[{"id":"7889264829456748","name":"介绍","user_id":"3966258738","guild_id":"3785158050166220","voice_quality":"1","limit_amount":0,"is_category":0,"is_readonly":false,"parent_id":"9378025328687596","is_private":false,"server_type":1,"server_url":"ws-sh4.kaiheila.cn:443","level":1,"slow_mode":0,"topic":"","is_master":false,"type":1,"permission_overwrites":[{"role_id":83335,"allow":421888,"deny":0},{"role_id":0,"allow":0,"deny":421888}],"permission_users":[],"permission_sync":0},{"id":"5381478316780071","name":"通知","user_id":"3966258738","guild_id":"3785158050166220","voice_quality":"1","limit_amount":0,"is_category":0,"is_readonly":false,"parent_id":"9378025328687596","is_private":false,"server_type":1,"server_url":"ws-sh3.kaiheila.cn:443","level":2,"slow_mode":0,"topic":"","is_master":false,"type":1,"permission_overwrites":[{"role_id":0,"allow":0,"deny":421888}],"permission_users":[],"permission_sync":0},{"id":"8358660539431182","name":"报名申请","user_id":"3966258738","guild_id":"3785158050166220","voice_quality":"1","limit_amount":0,"is_category":0,"is_readonly":false,"parent_id":"9378025328687596","is_private":false,"server_type":1,"server_url":"ws-sh3.kaiheila.cn:443","level":3,"slow_mode":0,"topic":"","is_master":false,"type":1,"permission_overwrites":[{"role_id":0,"allow":0,"deny":0}],"permission_users":[],"permission_sync":1},{"id":"3780971593907556","name":"讨论","user_id":"3966258738","guild_id":"3785158050166220","voice_quality":"1","limit_amount":0,"is_category":0,"is_readonly":false,"parent_id":"9378025328687596","is_private":false,"server_type":1,"server_url":"ws-sh4.kaiheila.cn:443","level":4,"slow_mode":0,"topic":"","is_master":false,"type":1,"permission_overwrites":[{"role_id":0,"allow":0,"deny":0}],"permission_users":[],"permission_sync":1}]},{"id":"2312446683923812","name":"开播啦（Beta）&BMLive","guild_id":"3785158050166220","is_category":1,"is_master":false,"level":100,"type":0,"permission_overwrites":[{"role_id":0,"allow":0,"deny":0}],"permission_users":[],"channels":[{"id":"1519238947373450","name":"介绍","user_id":"374797264","guild_id":"3785158050166220","voice_quality":"1","limit_amount":0,"is_category":0,"is_readonly":false,"parent_id":"2312446683923812","is_private":false,"server_type":1,"server_url":"ws-sh4.kaiheila.cn:443","level":1,"slow_mode":0,"topic":"","is_master":false,"type":1,"permission_overwrites":[{"role_id":0,"allow":0,"deny":4096}],"permission_users":[],"permission_sync":0},{"id":"1228002058500804","name":"通知","user_id":"374797264","guild_id":"3785158050166220","voice_quality":"1","limit_amount":0,"is_category":0,"is_readonly":false,"parent_id":"2312446683923812","is_private":false,"server_type":1,"server_url":"ws-sh4.kaiheila.cn:443","level":2,"slow_mode":0,"topic":"","is_master":false,"type":1,"permission_overwrites":[{"role_id":0,"allow":0,"deny":4096}],"permission_users":[],"permission_sync":0},{"id":"2183078874313786","name":"讨论","user_id":"374797264","guild_id":"3785158050166220","voice_quality":"1","limit_amount":0,"is_category":0,"is_readonly":false,"parent_id":"2312446683923812","is_private":false,"server_type":1,"server_url":"ws-sh3.kaiheila.cn:443","level":3,"slow_mode":0,"topic":"","is_master":false,"type":1,"permission_overwrites":[{"role_id":0,"allow":0,"deny":0}],"permission_users":[],"permission_sync":1},{"id":"2784279851707867","name":"测试（2021）","user_id":"374797264","guild_id":"3785158050166220","voice_quality":"1","limit_amount":0,"is_category":0,"is_readonly":false,"parent_id":"2312446683923812","is_private":false,"server_type":1,"server_url":"ws-sh4.kaiheila.cn:443","level":4,"slow_mode":0,"topic":"","is_master":false,"type":1,"permission_overwrites":[{"role_id":0,"allow":0,"deny":0}],"permission_users":[],"permission_sync":1}]}],"user_notify_type":0,"emojis":[],"my_roles":[77715,74884,72119],"my_nickname":"BMLive","recommend_info":{"guild_id":"3785158050166220","open_id":"15862667","default_channel_id":"2118926065513331","name":"机器人社区 - Bot Community","icon":"https://img.kaiheila.cn/icons/2020-11/fKIFpYdgfd0e80e8.png/icon","banner":"https://img.kaiheila.cn/assets/2020-12/KbxIqit3xG0sg0go.png","desc":"开黑啦Bot讨论与测试的集中社区，在这里找到你需要的Bot吧。","status":1,"tag":"其他社群"}}]}

 ' 频道数组:



.子程序 user_me, 文本型, , 
.参数 token, 文本型, 可空, 多机器人预留位置 采用文件对应 token=token

.局部变量 url, 文本型, , , 
.局部变量 header, 文本型, , , 
.局部变量 result, 类_json, , , 

赋值 (url, 相加 (g_url, “/user/me”))
赋值 (header, 相加 (“Authorization: Bot ”, 选择 (等于 (token, “”), g_token, 读配置项 (相加 (取运行目录 (), “\bot_token.ini”), “token”, token, )), #换行符, “Content-type: application/json”))
 ' json.置属性 (“guild_id”, GuildId, )
 ' 调试输出 (baseUrl, header, json.取数据文本 ())
result.解析 (编码_utf8到gb2312 (到文本 (网页_访问 (url, 0, , , , header, , , , , , , ))), )
 ' 调试输出 (, “获取服务器信息”, “kaiheila”)
 ' 调试输出 (, “返回信息: ” ＋ result.取数据文本 (), “kaiheila”)
 ' {"code":0,"message":"操作成功","data":{"id":"*****","username":"****","identify_num":"9028","online":true,"os":"Websocket","status":0,"avatar":"https://img.kaiheila.cn/assets/2021-01/OQlgu5UiGJ0e80e8.jpeg/icon","bot":true,"tag_info":{"color":"#34A853","text":"机器人"},"mobile_verified":true,"client_id":"********","mobile_prefix":"86","mobile":"****","privacy_game_activity":0,"privacy_music_activity":0,"enable_desktop_notification":true,"audio_setting":"","auto_exit_audio_channel":false,"invited_count":"0","need_guide":false,"friend_setting":{"all":true},"chat_setting":"1","auth_info":[]}}'
返回 (result.取数据文本 ())


.子程序 asset_create, 文本型, , 
.参数 token, 文本型, 可空, 
.参数 本地资源路径, 文本型, , 

.局部变量 url, 文本型, , , 
.局部变量 uuid, 文本型, , , 
.局部变量 type, 文本型, , , 
.局部变量 header, 文本型, , , 
.局部变量 Playload, 字节集, , , 
.局部变量 json, 类_json, , , 

赋值 (url, 相加 (g_url, “/asset/create”))
赋值 (uuid, 文本_取随机数字 (10, ))
赋值 (type, 文件_取扩展名 (本地资源路径))
.判断开始 (等于 (type, “.png”))
    赋值 (type, “image/png”)
.默认
    赋值 (type, “image/png”)
.判断结束
赋值 (header, 相加 (“Content-Type: multipart/form-data; boundary=--------------------------”, uuid))
赋值 (header, 相加 (header, #换行符, “Authorization: Bot ”, 选择 (等于 (token, “”), g_token, 读配置项 (相加 (取运行目录 (), “\bot_token.ini”), “token”, token, ))))
赋值 (Playload, 到字节集 (相加 (“----------------------------”, uuid, #换行符)))
赋值 (Playload, 相加 (Playload, 到字节集 (相加 (“Content-Disposition: form-data; name=”, #引号, “file”, #引号, “; filename=”, #引号, “temp”, 文件_取文件名 (本地资源路径, ), #引号, #换行符))))
赋值 (Playload, 相加 (Playload, 到字节集 (相加 (“Content-Type: ”, type, #换行符))))
赋值 (Playload, 相加 (Playload, 到字节集 (#换行符)))
赋值 (Playload, 相加 (Playload, 读入文件 (本地资源路径), 到字节集 (#换行符)))
赋值 (Playload, 相加 (Playload, 到字节集 (相加 (“----------------------------”, uuid, “--”))))
 ' 调试输出 (url, header, 到文本 (Playload))
json.解析 (编码_utf8到gb2312 (到文本 (网页_访问 (url, 1, , , , header, , , Playload, , , , ))), )
 ' {"code":0,"message":"操作成功","data":{"url":"https://img.kaiheila.cn/assets/2021-01/22/zV8yikTGJf0la0k5.png"}}
返回 (json.取数据文本 ())

.子程序 guild_role_index, 空白型, , 获取服务器角色列表
.参数 token, 文本型, 可空, 多机器人预留位置 采用文件对应 token=token
.参数 guild_id, 文本型, , 

.局部变量 url, 文本型, , , 
.局部变量 header, 文本型, , , 
.局部变量 result, 类_json, , , 

赋值 (url, 相加 (g_url, “/guild-role/index”))
赋值 (url, 相加 (url, “?guild_id=”, guild_id))
赋值 (header, 相加 (“Authorization: Bot ”, 选择 (等于 (token, “”), g_token, 读配置项 (相加 (取运行目录 (), “\bot_token.ini”), “token”, token, )), #换行符, “Content-type: application/json”))
result.解析 (编码_utf8到gb2312 (到文本 (网页_访问 (url, 0, , , , header, , , , , , , ))), )
 ' 调试输出 (, “获取服务器信息”, “kaiheila”)
 ' 调试输出 (, “返回信息: ” ＋ result.取数据文本 (), “kaiheila”)
 ' role_id unsigned int 角色的id
 ' name string 角色的名称
 ' color unsigned int 角色的色值0x000000 - 0xFFFFFF
 ' position unsigned int 顺序，值越小载靠前
 ' hoist unsigned int 只能为0或者1，是否把该角色的用户在用户列表排到前面
 ' mentionable unsigned int 只能为0或者1，该角色是否可以被提及
 ' permissions unsigned int 权限,参见权限说明
 ' {"code":0,"message":"操作成功","data":[{"role_id":5712,"name":"新角色1","color":3066993,"position":1,"hoist":0,"mentionable":0,"permissions":147643914},{"role_id":0,"name":"@全体成员","color":0,"position":999,"hoist":0,"mentionable":0,"permissions":147642888}],}
返回 (result.取数据文本 ())


.子程序 guild_role_create, 空白型, , 创建服务器角色
.参数 token, 文本型, 可空, 多机器人预留位置 采用文件对应 token=token
.参数 name, 文本型, 可空, 
.参数 guild_id, 文本型, , 

.局部变量 url, 文本型, , , 
.局部变量 header, 文本型, , , 
.局部变量 json, 类_json, , , 
.局部变量 result, 类_json, , , 

赋值 (url, 相加 (g_url, “/guild-role/create”))
赋值 (header, 相加 (“Authorization: Bot ”, 选择 (等于 (token, “”), g_token, 读配置项 (相加 (取运行目录 (), “\bot_token.ini”), “token”, token, )), #换行符, “Content-type: application/json”))
.如果真 (不等于 (name, “”))
    json.置属性 (“name”, name, )
.如果真结束
json.置属性 (“guild_id”, guild_id, )
result.解析 (编码_utf8到gb2312 (到文本 (网页_访问 (url, 1, 编码_URL编码 (json.取数据文本 (), , 真), , , header, , , , , , , ))), )
 ' 调试输出 (, “获取服务器信息”, “kaiheila”)
 ' 调试输出 (, “返回信息: ” ＋ result.取数据文本 (), “kaiheila”)
 ' role_id unsigned int 角色的id
 ' name string 角色的名称
 ' color unsigned int 角色的色值0x000000 - 0xFFFFFF
 ' position unsigned int 顺序，值越小载靠前
 ' hoist unsigned int 只能为0或者1，是否把该角色的用户在用户列表排到前面
 ' mentionable unsigned int 只能为0或者1，该角色是否可以被提及
 ' permissions unsigned int 权限,参见权限说明
 ' {"code":0,"message":"操作成功","data":[{"role_id":5712,"name":"新角色1","color":3066993,"position":1,"hoist":0,"mentionable":0,"permissions":147643914}],}
返回 (result.取数据文本 ())


.子程序 guild_role_update, 空白型, , 更新服务器角色
.参数 token, 文本型, 可空, 多机器人预留位置 采用文件对应 token=token
.参数 guild_id, 文本型, , 
.参数 role_id, 整数型, , 
.参数 hoist, 整数型, 可空, 
.参数 mentionable, 整数型, 可空, 
.参数 permissions, 整数型, 可空, 

.局部变量 url, 文本型, , , 
.局部变量 header, 文本型, , , 
.局部变量 result, 类_json, , , 
.局部变量 json, 类_json, , , 

赋值 (url, 相加 (g_url, “/guild-role/update”))
json.置属性 (“guild_id”, guild_id, )
json.置属性数值 (“role_id”, role_id)
.如果真 (等于 (是否为空 (hoist), 假))
    json.置属性数值 (“hoist”, 选择 (等于 (hoist, 1), 1, 2), )
.如果真结束
.如果真 (等于 (是否为空 (mentionable), 假))
    json.置属性数值 (“mentionable”, 选择 (等于 (mentionable, 1), 1, 2), )
.如果真结束
.如果真 (等于 (是否为空 (permissions), 假))
    json.置属性数值 (“permissions”, permissions, )
.如果真结束
赋值 (header, 相加 (“Authorization: Bot ”, 选择 (等于 (token, “”), g_token, 读配置项 (相加 (取运行目录 (), “\bot_token.ini”), “token”, token, )), #换行符, “Content-type: application/json”))
result.解析 (编码_utf8到gb2312 (到文本 (网页_访问 (url, 1, 编码_URL编码 (json.取数据文本 (), 真, ), , , header, , , , , , , ))), )
 ' 调试输出 (, “获取服务器信息”, “kaiheila”)
 ' 调试输出 (, “返回信息: ” ＋ result.取数据文本 (), “kaiheila”)
 ' role_id unsigned int 角色的id
 ' name string 角色的名称
 ' color unsigned int 角色的色值0x000000 - 0xFFFFFF
 ' position unsigned int 顺序，值越小载靠前
 ' hoist unsigned int 只能为0或者1，是否把该角色的用户在用户列表排到前面
 ' mentionable unsigned int 只能为0或者1，该角色是否可以被提及
 ' permissions unsigned int 权限,参见权限说明
 ' {"code":0,"message":"操作成功","data":[{"role_id":5712,"name":"新角色1","color":3066993,"position":1,"hoist":0,"mentionable":0,"permissions":147643914}],}
返回 (result.取数据文本 ())


.子程序 guild_role_delete, 空白型, , 删除服务器角色
.参数 token, 文本型, 可空, 多机器人预留位置 采用文件对应 token=token
.参数 guild_id, 文本型, , 
.参数 role_id, 整数型, , 

.局部变量 url, 文本型, , , 
.局部变量 header, 文本型, , , 
.局部变量 result, 类_json, , , 
.局部变量 json, 类_json, , , 

赋值 (url, 相加 (g_url, “/guild-role/delete”))
赋值 (header, 相加 (“Authorization: Bot ”, 选择 (等于 (token, “”), g_token, 读配置项 (相加 (取运行目录 (), “\bot_token.ini”), “token”, token, )), #换行符, “Content-type: application/json”))
json.置属性 (“guild_id”, guild_id, )
json.置属性数值 (“role_id”, role_id, )
result.解析 (编码_utf8到gb2312 (到文本 (网页_访问 (url, 1, 编码_URL编码 (json.取数据文本 (), 真, ), , , header, , , , , , , ))), )
 ' 调试输出 (, “获取服务器信息”, “kaiheila”)
 ' 调试输出 (, “返回信息: ” ＋ result.取数据文本 (), “kaiheila”)
 ' {"code":0,"message":"操作成功","data":[]}
返回 (result.取数据文本 ())


.子程序 guild_role_grant, 空白型, , 赋予用户角色
.参数 token, 文本型, 可空, 多机器人预留位置 采用文件对应 token=token
.参数 guild_id, 文本型, , 
.参数 user_id, 文本型, , 
.参数 role_id, 整数型, , 

.局部变量 url, 文本型, , , 
.局部变量 header, 文本型, , , 
.局部变量 result, 类_json, , , 
.局部变量 json, 类_json, , , 

赋值 (url, 相加 (g_url, “/guild-role/grant”))
赋值 (header, 相加 (“Authorization: Bot ”, 选择 (等于 (token, “”), g_token, 读配置项 (相加 (取运行目录 (), “\bot_token.ini”), “token”, token, )), #换行符, “Content-type: application/json”))
json.置属性 (“guild_id”, guild_id, )
json.置属性 (“user_id”, user_id, )
json.置属性数值 (“role_id”, role_id)
result.解析 (编码_utf8到gb2312 (到文本 (网页_访问 (url, 1, 编码_URL编码 (json.取数据文本 (), 真, ), , , header, , , , , , , ))), )
 ' user_id string 用户id
 ' guild_id string 服务器id
 ' roles Array 角色id的列表
 ' 调试输出 (, “获取服务器信息”, “kaiheila”)
 ' 调试输出 (, “返回信息: ” ＋ result.取数据文本 (), “kaiheila”)
 ' {"code":0,"message":"操作成功","data":{"user_id":"xxxx","guild_id":"xxxx","roles":[1,2]}}
返回 (result.取数据文本 ())


.子程序 guild_role_revoke, 空白型, , 删除用户角色
.参数 token, 文本型, 可空, 多机器人预留位置 采用文件对应 token=token
.参数 guild_id, 文本型, , 
.参数 role_id, 整数型, , 
.参数 user_id, 文本型, , 

.局部变量 url, 文本型, , , 
.局部变量 header, 文本型, , , 
.局部变量 result, 类_json, , , 
.局部变量 json, 类_json, , , 

赋值 (url, 相加 (g_url, “/guild-role/revoke”))
赋值 (header, 相加 (“Authorization: Bot ”, 选择 (等于 (token, “”), g_token, 读配置项 (相加 (取运行目录 (), “\bot_token.ini”), “token”, token, )), #换行符, “Content-type: application/json”))
json.置属性 (“guild_id”, guild_id, )
json.置属性数值 (“role_id”, role_id)
json.置属性 (“user_id”, user_id, )
result.解析 (编码_utf8到gb2312 (到文本 (网页_访问 (url, 1, 编码_URL编码 (json.取数据文本 (), 真, ), , , header, , , , , , , ))), )
 ' 调试输出 (, “获取服务器信息”, “kaiheila”)
 ' 调试输出 (, “返回信息: ” ＋ result.取数据文本 (), “kaiheila”)
 ' guild_id string 服务器id
 ' user_id string 角色id
 ' roles Array 角色id的列表
 ' {"code":0,"message":"操作成功","data":{"user_id":"xxxx","guild_id":"xxxx","roles":[9]}}
返回 (result.取数据文本 ())


.程序集 Queue, , , 

.子程序 QueueHeart, 空白型, , 
.循环判断首 ()
    QueueHeartProc ()
    程序_延时 (5, 1)
.循环判断尾 (不等于 (Version, “”))



.子程序 QueueHeartProc, 空白型, , 
.局部变量 msgJson, 类_json, , , 
.局部变量 匿名局部变量_11470, 空白型, , , 
.局部变量 channel_type, 文本型, , , 
.局部变量 target_id, 文本型, , , 
.局部变量 msg_id, 文本型, , , 
.局部变量 content, 文本型, , , 
.局部变量 guild_id, 文本型, , , 
.局部变量 channel_name, 文本型, , , 
.局部变量 senderid, 文本型, , , 
.局部变量 sendernickname, 文本型, , , 
.局部变量 verify_token, 文本型, , , 
.局部变量 result, 文本型, , , 
.局部变量 i, 整数型, , , 
.局部变量 item, 文本型, , , 

.判断循环首 (大于 (取数组成员数 (g_msgList), 0))
     ' 只要有数据就进来：
    msgJson.解析 (g_msgList [1], )
    删除成员 (g_msgList, 1, 1)
     ' 删除成员 (g_khl_msgList_id, 1, 1)
    赋值 (msgJson, msgJson.取属性 (“d”))
    .如果真 (等于 (msgJson.取通用属性 (“extra.author.bot”, ), “true”))
        到循环尾 ()
    .如果真结束
    
    赋值 (channel_type, msgJson.取通用属性 (“channel_type”, )) ' GROUP
    
    
    .判断开始 (等于 (channel_type, “plugin_log”))
         ' 这是插件发回来的数据，可以直接处理，不需要对外。
        赋值 (target_id, msgJson.取通用属性 (“pluginid”, ))
         ' 告知是哪个插件发回来的日志
        赋值 (content, msgJson.取通用属性 (“content”, ))
        日志_输出 (“→”, 相加 (“plugin-”, target_id, “: ”, content))
        
    .判断 (等于 (channel_type, “PERSON”))
         ' {"type":255,"channel_type":"PERSON","target_id":"414248069","author_id":"1","content":"[系统消息]","msg_id":"01bba042-1b8e-4600-9de2-a6adf84dee1c","msg_timestamp":1611381724543,"nonce":"","extra":{"type":"message_btn_click","body":{"value":"test value","msg_id":"38623f74-94ef-4bc2-8eee-9d29d5a565de","user_id":"2393184238"}}}
    .判断 (等于 (channel_type, “GROUP”)) ' 频道消息
        赋值 (target_id, msgJson.取通用属性 (“target_id”, ))
        赋值 (msg_id, msgJson.取通用属性 (“msg_id”, ))
        赋值 (content, msgJson.取通用属性 (“content”, ))
        赋值 (guild_id, msgJson.取通用属性 (“extra['guild_id']”, )) ' 4674611826831570=main
        赋值 (channel_name, msgJson.取通用属性 (“extra['channel_name']”, ))
        赋值 (senderid, msgJson.取通用属性 (“extra.author.id”, ))
        赋值 (sendernickname, msgJson.取通用属性 (“extra.author.nickname”, ))
        赋值 (verify_token, msgJson.取通用属性 (“verify_token”, ))
        QueueExec (选择 (等于 (channel_type, “GROUP”), 0, 1), msgJson.取属性数值 (“type”), target_id, senderid, content, msg_id, msgJson.取数据文本 ())
        
         ' 01-01 01:18:05 {"s":0,"d":{"type":1,"channel_type":"GROUP","target_id":"8876187633547319","author_id":"374797264","content":"@@野生的怪才君#2279933469 ","msg_id":"2b1ce912-6b55-47e1-a42b-918c154d3c9b","msg_timestamp":1609435085214,"nonce":"","extra":{"local_id":"5PlkQi5wEyXufD7vVwWNPblq","type":"1","guild_id":"4674611826831570","channel_name":"privatePush","mention":["2279933469"],"mention_all":false,"mention_roles":[],"mention_here":false,"code":"","author":{"identify_num":"3507","avatar":"https://img.kaiheila.cn/avatars/2020-07/XkyJKsvalO2bc2bc.jpg/icon","username":"萌动众生","id":"374797264","nickname":"萌动众生","roles":[29953,28231]}},"verify_token":""},"sn":719}
         ' {"s":0,"d":{"type":1,"channel_type":"GROUP","target_id":"7873127691138410","author_id":"374797264","content":"@萌动众生#374797264 @易语言模板测试#1698900299 @role:95455; ","msg_id":"b34464da-da9c-473c-bc1a-d0eb0631d269","msg_timestamp":1610603734178,"nonce":"","extra":{"local_id":"lp3JfeNPUrpBcNdlYYI7Odpv","type":1,"guild_id":"6277101564729879","channel_name":"文字频道","mention":["374797264","1698900299"],"mention_all":false,"mention_roles":[95455],"mention_here":false,"code":"","author":{"identify_num":"3507","avatar":"https://img.kaiheila.cn/avatars/2020-07/XkyJKsvalO2bc2bc.jpg/icon","username":"萌动众生","id":"374797264","nickname":"萌动众生","roles":[]},"quote":{"local_id":"o5WoZqKQU5I6qT5rWDQCxCnw","type":1,"guild_id":"6277101564729879","channel_name":"文字频道","mention":[],"mention_all":false,"mention_roles":[],"mention_here":false,"code":"","author":{"identify_num":"3507","avatar":"https://img.kaiheila.cn/avatars/2020-07/XkyJKsvalO2bc2bc.jpg/icon","username":"萌动众生","id":"374797264","nickname":"萌动众生","roles":[]},"id":"bb891959-6381-4313-a07c-8e8cf31daebc","content":".test-tools","create_at":1610603600673,"notCount":true,"status":"SEND_SUCCESS","timeStr":"今天 下午 01:53","showTime":false,"gather_id":"5a2d7d94-4f09-44e0-b6f8-5fab80eada69","in_group":true,"rong_id":"bb891959-6381-4313-a07c-8e8cf31daebc","errorInfo":null,"pb0":true}},"verify_token":""},"sn":4}
        
        .判断开始 (不等于 (寻找文本 (content, 相加 (“@”, g_bot.quard), , 假), -1)) ' 艾特了机器人
            赋值 (result, 相加 (“消息类型: ”, 选择 (等于 (msgJson.取通用属性 (“type”, ), “1”), “文字消息”, “其他”)))
            赋值 (result, 相加 (result, #换行符, “消息ID: ”, msg_id))
            赋值 (result, 相加 (result, #换行符, “发送人: ”, sendernickname, “#”, senderid))
            赋值 (result, 相加 (result, #换行符, “服务器: ”, guild_id))
            赋值 (result, 相加 (result, #换行符, “频道: ”, channel_name, “#”, target_id))
            
            .如果真 (不等于 (msgJson.取通用属性 (“extra.quote['id']”, ), “”))
                赋值 (result, 相加 (result, #换行符, “引用消息ID: ”, msgJson.取通用属性 (“extra.quote['id']”, )))
                赋值 (result, 相加 (result, #换行符, “引用消息发送人: ”, msgJson.取通用属性 (“extra.quote.author.username”, ), “#”, msgJson.取通用属性 (“extra.quote.author.id”, )))
            .如果真结束
            .如果真 (大于 (msgJson.取属性 (“extra.mention”).成员数 (), 0))
                .计次循环首 (msgJson.取属性 (“extra.mention”).成员数 (), i)
                    赋值 (result, 相加 (result, #换行符, “引用用户: ”, at部分处理 (content, msgJson.取通用属性 (相加 (“extra.mention['”, 到文本 (相减 (i, 1)), “']”), ))))
                .计次循环尾 ()
                
            .如果真结束
             ' .如果真 (大于 (msgJson.取属性 (“extra.mention”, ).成员数 (), 0))
                 ' .计次循环首 (msgJson.取属性 (“extra.mention_roles”, ).成员数 (), i)
                     ' result ＝ result ＋ #换行符 ＋ “引用用户: ” ＋ msgJson.取通用属性 (“extra.mention['” ＋ 到文本 (i － 1) ＋ “']”, )
                 ' .计次循环尾 ()
             ' .如果真结束
            .如果真 (等于 (msgJson.取通用属性 (“extra['mention_all']”, ), “true”))
                赋值 (result, 相加 (result, #换行符, “引用全体成员: ”, msg_id))
            .如果真结束
            .如果真 (等于 (msgJson.取通用属性 (“extra['mention_here']”, ), “true”))
                赋值 (result, 相加 (result, #换行符, “引用在线成员: ”, msg_id))
            .如果真结束
            channel_message (1, target_id, result, msg_id, , )
        .默认
            
        .判断结束
        
        
    .默认
        
    .判断结束
    
    
.判断循环尾 ()


.子程序 QueueExec, 空白型, , 
.参数 msgFrom, 整数型, , 0=频道聊天  1=好友私聊
.参数 msgType, 整数型, , 同步之前的
.参数 channelId, 文本型, , 当msgFrom=0时才有
.参数 userId, 文本型, , 
.参数 contant, 文本型, , 
.参数 msgId, 文本型, , 
.参数 json, 文本型, , 备用 留给你自己解析

GoCorefunction (msgFrom, msgType, channelId, userId, contant, msgId, json)

PluginsCall (msgFrom, msgType, channelId, userId, contant, msgId, json)


.子程序 at部分处理, 文本型, , 
.参数 content, 文本型, , 
.参数 uid, 文本型, , 

.局部变量 list, 文本型, , "0", 
.局部变量 i, 整数型, , , 

赋值 (list, 分割文本 (content, “ ”, ))
.计次循环首 (取数组成员数 (list), i)
    .如果真 (等于 (文本_取文本之后 (list [i], “#”), uid))
        返回 (文本_取文本之后 (list [i], “@”))
    .如果真结束
    
    
.计次循环尾 ()
返回 (uid)

.程序集 tools, , , 

.子程序 rolevalueTorole, role_new, , 
.参数 roleValue, 整数型, , 

.局部变量 temp, role_new, , , 

 ' 数据位的说明如下：
 ' 0 1 管理员 拥有此权限会获得完整的管理权，包括绕开所有其他权限（包括频道权限）限制，属于危险权限。
赋值 (temp._0, 选择 (__query_bit (roleValue, 0), 0, 1))
 ' 1 2 管理服务器 拥有此权限的成员可以修改服务器名称和更换区域。
赋值 (temp._1, 选择 (__query_bit (roleValue, 1), 0, 1))
 ' 2 4 查看管理日志 拥有此权限的成员可以查看服务器的管理日志。
赋值 (temp._2, 选择 (__query_bit (roleValue, 2), 0, 1))
 ' 3 8 创建服务器邀请 能否创建服务器邀请链接
赋值 (temp._3, 选择 (__query_bit (roleValue, 3), 0, 1))
 ' 4 16 管理邀请 拥有该权限可以管理服务器的邀请
赋值 (temp._4, 选择 (__query_bit (roleValue, 4), 0, 1))
 ' 5 32 频道管理 拥有此权限的成员可以创建新的频道以及编辑或删除已存在的频道。
赋值 (temp._5, 选择 (__query_bit (roleValue, 5), 0, 1))
 ' 6 64 踢出用户
赋值 (temp._6, 选择 (__query_bit (roleValue, 6), 0, 1))
 ' 7 128 封禁用户
赋值 (temp._7, 选择 (__query_bit (roleValue, 7), 0, 1))
 ' 8 256 管理自定义表情
赋值 (temp._8, 选择 (__query_bit (roleValue, 8), 0, 1))
 ' 9 512 修改服务器昵称 拥有此权限的用户可以更改他们的昵称。
赋值 (temp._9, 选择 (__query_bit (roleValue, 9), 0, 1))
 ' 10 1024 管理角色权限 拥有此权限成员可以创建新的角色和编辑删除低于该角色的身份。
赋值 (temp._10, 选择 (__query_bit (roleValue, 10), 0, 1))
 ' 11 2048 查看文字、语音频道
赋值 (temp._11, 选择 (__query_bit (roleValue, 11), 0, 1))
 ' 12 4096 发布消息
赋值 (temp._12, 选择 (__query_bit (roleValue, 12), 0, 1))
 ' 13 8192 管理消息 拥有此权限的成员可以删除其他成员发出的消息和置顶消息。
赋值 (temp._13, 选择 (__query_bit (roleValue, 13), 0, 1))
 ' 14 16384 上传文件
赋值 (temp._14, 选择 (__query_bit (roleValue, 14), 0, 1))
 ' 15 32768 语音链接
赋值 (temp._15, 选择 (__query_bit (roleValue, 15), 0, 1))
 ' 16 65536 语音管理 拥有此权限的成员可以把其他成员移动和踢出频道；但此类移动仅限于在该成员和被移动成员均有权限的频道之间进行。
赋值 (temp._16, 选择 (__query_bit (roleValue, 16), 0, 1))
 ' 17 131072 提及@全体成员 拥有此权限的成员可使用@全体成员以提及该频道中所有成员。
赋值 (temp._17, 选择 (__query_bit (roleValue, 17), 0, 1))
 ' 18 262144 添加反应 拥有此权限的成员可以对消息添加新的反应。
赋值 (temp._18, 选择 (__query_bit (roleValue, 18), 0, 1))
 ' 19 524288 跟随添加反应 拥有此权限的成员可以跟随使用已经添加的反应。
赋值 (temp._19, 选择 (__query_bit (roleValue, 19), 0, 1))
 ' 20 1048576 被动连接语音频道 拥有此限制的成员无法主动连接语音频道，只能在被动邀请或被人移动时，才可以进入语音频道。
赋值 (temp._20, 选择 (__query_bit (roleValue, 20), 0, 1))
 ' 21 2097152 仅使用按键说话 拥有此限制的成员加入语音频道后，只能使用按键说话。
赋值 (temp._21, 选择 (__query_bit (roleValue, 21), 0, 1))
 ' 22 4194304 使用自由麦 没有此权限的成员，必须在频道内使用按键说话。
赋值 (temp._22, 选择 (__query_bit (roleValue, 22), 0, 1))
 ' 23 8388608 说话
赋值 (temp._23, 选择 (__query_bit (roleValue, 23), 0, 1))
 ' 24 16777216 服务器静音
赋值 (temp._24, 选择 (__query_bit (roleValue, 24), 0, 1))
 ' 25 33554432 服务器闭麦
赋值 (temp._25, 选择 (__query_bit (roleValue, 25), 0, 1))
 ' 26 67108864 修改他人昵称 拥有此权限的用户可以更改他人的昵称
赋值 (temp._26, 选择 (__query_bit (roleValue, 26), 0, 1))
 ' 27 134217728 播放伴奏 拥有此权限的成员可在语音频道中播放音乐伴奏
赋值 (temp._27, 选择 (__query_bit (roleValue, 27), 0, 1))
赋值 (temp._28, 选择 (__query_bit (roleValue, 28), 0, 1))
赋值 (temp._29, 选择 (__query_bit (roleValue, 29), 0, 1))
赋值 (temp._30, 选择 (__query_bit (roleValue, 30), 0, 1))
赋值 (temp._31, 选择 (__query_bit (roleValue, 31), 0, 1))
返回 (temp)
 ' 比特位 值 权限 说明


.子程序 roleTorolevalue, 整数型, , 
.参数 role, role_new, , 

.局部变量 value, 整数型, , , 

赋值 (value, 选择 (等于 (role._0, 1), __set_bit_on (value, 0), __set_bit_off (value, 0)))
赋值 (value, 选择 (等于 (role._1, 1), __set_bit_on (value, 1), __set_bit_off (value, 1)))
赋值 (value, 选择 (等于 (role._2, 1), __set_bit_on (value, 2), __set_bit_off (value, 2)))
赋值 (value, 选择 (等于 (role._3, 1), __set_bit_on (value, 3), __set_bit_off (value, 3)))
赋值 (value, 选择 (等于 (role._4, 1), __set_bit_on (value, 4), __set_bit_off (value, 4)))
赋值 (value, 选择 (等于 (role._5, 1), __set_bit_on (value, 5), __set_bit_off (value, 5)))
赋值 (value, 选择 (等于 (role._6, 1), __set_bit_on (value, 6), __set_bit_off (value, 6)))
赋值 (value, 选择 (等于 (role._7, 1), __set_bit_on (value, 7), __set_bit_off (value, 7)))
赋值 (value, 选择 (等于 (role._8, 1), __set_bit_on (value, 8), __set_bit_off (value, 8)))
赋值 (value, 选择 (等于 (role._9, 1), __set_bit_on (value, 9), __set_bit_off (value, 9)))
赋值 (value, 选择 (等于 (role._10, 1), __set_bit_on (value, 10), __set_bit_off (value, 10)))
赋值 (value, 选择 (等于 (role._11, 1), __set_bit_on (value, 11), __set_bit_off (value, 11)))
赋值 (value, 选择 (等于 (role._12, 1), __set_bit_on (value, 12), __set_bit_off (value, 12)))
赋值 (value, 选择 (等于 (role._13, 1), __set_bit_on (value, 13), __set_bit_off (value, 13)))
赋值 (value, 选择 (等于 (role._14, 1), __set_bit_on (value, 14), __set_bit_off (value, 14)))
赋值 (value, 选择 (等于 (role._15, 1), __set_bit_on (value, 15), __set_bit_off (value, 15)))
赋值 (value, 选择 (等于 (role._16, 1), __set_bit_on (value, 16), __set_bit_off (value, 16)))
赋值 (value, 选择 (等于 (role._17, 1), __set_bit_on (value, 17), __set_bit_off (value, 17)))
赋值 (value, 选择 (等于 (role._18, 1), __set_bit_on (value, 18), __set_bit_off (value, 18)))
赋值 (value, 选择 (等于 (role._19, 1), __set_bit_on (value, 19), __set_bit_off (value, 19)))
赋值 (value, 选择 (等于 (role._20, 1), __set_bit_on (value, 20), __set_bit_off (value, 20)))
赋值 (value, 选择 (等于 (role._21, 1), __set_bit_on (value, 21), __set_bit_off (value, 21)))
赋值 (value, 选择 (等于 (role._22, 1), __set_bit_on (value, 22), __set_bit_off (value, 22)))
赋值 (value, 选择 (等于 (role._23, 1), __set_bit_on (value, 23), __set_bit_off (value, 23)))
赋值 (value, 选择 (等于 (role._24, 1), __set_bit_on (value, 24), __set_bit_off (value, 24)))
赋值 (value, 选择 (等于 (role._25, 1), __set_bit_on (value, 25), __set_bit_off (value, 25)))
赋值 (value, 选择 (等于 (role._26, 1), __set_bit_on (value, 26), __set_bit_off (value, 26)))
赋值 (value, 选择 (等于 (role._27, 1), __set_bit_on (value, 27), __set_bit_off (value, 27)))
赋值 (value, 选择 (等于 (role._28, 1), __set_bit_on (value, 28), __set_bit_off (value, 28)))
赋值 (value, 选择 (等于 (role._29, 1), __set_bit_on (value, 29), __set_bit_off (value, 29)))
赋值 (value, 选择 (等于 (role._30, 1), __set_bit_on (value, 30), __set_bit_off (value, 30)))
赋值 (value, 选择 (等于 (role._31, 1), __set_bit_on (value, 31), __set_bit_off (value, 31)))
返回 (value)

.子程序 roleCrraftNull, role_new, , 
.局部变量 i, 整数型, , , 
.局部变量 value, 整数型, , , 

 ' 数据位的说明如下：
返回 (rolevalueTorole (0))
 ' 比特位 值 权限 说明
 ' 0 1 管理员 拥有此权限会获得完整的管理权，包括绕开所有其他权限（包括频道权限）限制，属于危险权限。
 ' 1 2 管理服务器 拥有此权限的成员可以修改服务器名称和更换区域。
 ' 2 4 查看管理日志 拥有此权限的成员可以查看服务器的管理日志。
 ' 3 8 创建服务器邀请 能否创建服务器邀请链接
 ' 4 16 管理邀请 拥有该权限可以管理服务器的邀请
 ' 5 32 频道管理 拥有此权限的成员可以创建新的频道以及编辑或删除已存在的频道。
 ' 6 64 踢出用户
 ' 7 128 封禁用户
 ' 8 256 管理自定义表情
 ' 9 512 修改服务器昵称 拥有此权限的用户可以更改他们的昵称。
 ' 10 1024 管理角色权限 拥有此权限成员可以创建新的角色和编辑删除低于该角色的身份。
 ' 11 2048 查看文字、语音频道
 ' 12 4096 发布消息
 ' 13 8192 管理消息 拥有此权限的成员可以删除其他成员发出的消息和置顶消息。
 ' 14 16384 上传文件
 ' 15 32768 语音链接
 ' 16 65536 语音管理 拥有此权限的成员可以把其他成员移动和踢出频道；但此类移动仅限于在该成员和被移动成员均有权限的频道之间进行。
 ' 17 131072 提及@全体成员 拥有此权限的成员可使用@全体成员以提及该频道中所有成员。
 ' 18 262144 添加反应 拥有此权限的成员可以对消息添加新的反应。
 ' 19 524288 跟随添加反应 拥有此权限的成员可以跟随使用已经添加的反应。
 ' 20 1048576 被动连接语音频道 拥有此限制的成员无法主动连接语音频道，只能在被动邀请或被人移动时，才可以进入语音频道。
 ' 21 2097152 仅使用按键说话 拥有此限制的成员加入语音频道后，只能使用按键说话。
 ' 22 4194304 使用自由麦 没有此权限的成员，必须在频道内使用按键说话。
 ' 23 8388608 说话
 ' 24 16777216 服务器静音
 ' 25 33554432 服务器闭麦
 ' 26 67108864 修改他人昵称 拥有此权限的用户可以更改他人的昵称
 ' 27 134217728 播放伴奏 拥有此权限的成员可在语音频道中播放音乐伴奏


.子程序 卡片测试, 空白型, , 
.局部变量 content, 类_json, , , 消息.加成员(card)
.局部变量 card, 类_json, , , 卡片<arr>.加成员(modules)
.局部变量 modules, 类_json, , , 模块<arr>
.局部变量 item, 类_json, , , 元素
.局部变量 item2, 类_json, , , 


card.置属性 (“type”, “card”, )
modules.置属性 (“type”, “section”, ) ' image-group  把item加到modules的elements属性里
item.置属性 (“type”, “plain-text”, )
item.置属性 (“content”, “我是标题”, )
modules.置属性 (“text”, item.取数据文本 (), 真)
item.置属性 (“type”, “button”, )
item.置属性 (“value”, “.bilisublist”, )
item.置属性 (“click”, “return-val”, )
item.置属性 (“text”, “测试”, )
 ' item.置属性 (“src”, “https://s3.ax1x.com/2021/01/05/sFStpt.png”, )
 ' item.置属性 (“alt”, “123”, )
 ' item.置属性 (“size”, “lg”, )
 ' item.置属性 (“circle”, “true”, 真)

modules.置属性 (“accessory”, item.取数据文本 (), 真)

card.加成员 (modules.取数据文本 (), “modules”, 真, )
content.加成员 (card.取数据文本 (), , 真, )
调试输出 (content.取数据文本 ())


.子程序 rolevalueTorole_fase, role, , 
.参数 roleValue, 整数型, , 

.局部变量 role, role, , , 
.局部变量 i, 整数型, , , 

.计次循环首 (32, i)
    赋值 (role [i], __query_bit (roleValue, 相减 (i, 1)))
.计次循环尾 ()


.子程序 roleTorolevalue_fase, 整数型, , 
.参数 role, role, , 

.局部变量 i, 整数型, , , 
.局部变量 rolevalue, 整数型, , , 

.计次循环首 (32, i)
    赋值 (rolevalue, 选择 (等于 (role [i], 0), __set_bit_off (rolevalue, 相减 (i, 1)), __set_bit_on (rolevalue, 相减 (i, 1))))
.计次循环尾 ()
返回 (rolevalue)

.子程序 roleCrraftNull_fase, role, , 
.局部变量 value, role, , , 

返回 (value)

.程序集 CardMessage, , , 

.子程序 CardMessage_index, 文本型, , 
.局部变量 item, 类_json, , , 
.局部变量 item2, 类_json, , , 
.局部变量 modules, 类_json, , , 
.局部变量 moduless, 类_json, , , 
.局部变量 Card, 类_json, , , 
.局部变量 Cards, 类_json, , , 
.局部变量 temp, 文本型, , , 

 ' 先创建一个文本元素
赋值 (item, item_new_text (“测试”, 假))
赋值 (item2, item_new_button (“info”, “button1”, “return-val”, “按钮”))
 ' Items_add (json,json1 )
 ' 元素部分处理完了，加入到对应模块里,需要形成数组的需要 items_add
赋值 (modules, Modules_new_section (item, item2))
 ' 模块弄好了，封装成组
Modules_add (moduless, modules)
赋值 (item, Modules_new_countdown (到长整数 (时间_到时间戳 (增减时间 (取现行时间 (), #日, 1), , )), 到长整数 (时间_到时间戳 (增减时间 (取现行时间 (), #小时, 1), , )), “second”))
Modules_add (moduless, item)
 ' 丢到卡片里
赋值 (Card, Card_new (moduless))
 ' 卡片封装成组
Card_add (Cards, Card)
 ' 传走的时候一定要用文本型 （不知道啥问题）
赋值 (temp, Cards.取数据文本 ())
调试输出 (temp)
channel_message (10, “7873127691138410”, temp, , , )
返回 (temp)

.子程序 Card_add, 空白型, , Card+Card
.参数 json, 类_json, , 
.参数 item, 类_json, , 

json.加成员 (item.取数据文本 (), , 真, )
返回 ()

.子程序 Card_new, 类_json, , modules->card
.参数 modules, 类_json, , 

.局部变量 json, 类_json, , , 

json.置属性 (“type”, “card”, )
json.置属性 (“modules”, modules.取数据文本 (), 真)
返回 (json)

.子程序 Modules_add, 空白型, , modules+modules
.参数 json, 类_json, , 
.参数 item, 类_json, , 

json.加成员 (item.取数据文本 (), , 真, )
返回 ()

.子程序 Modules_new_header, 类_json, , 标题模块
.参数 content, 文本型, , 

.局部变量 json, 类_json, , , 
.局部变量 item, 类_json, , , 

json.置属性 (“type”, “header”, )
item.置属性 (“type”, “plain-text”, )
item.置属性 (“content”, content, )
json.置属性 (“text”, item.取数据文本 (), 真)
返回 (json)

.子程序 Modules_new_section, 类_json, , 内容模块 1：1 图文
.参数 text, 类_json, , 
.参数 accessory, 类_json, , 

.局部变量 json, 类_json, , , 
.局部变量 item, 类_json, , , 

json.置属性 (“type”, “header”, )
json.置属性 (“text”, text.取数据文本 (), 真)
json.置属性 (“accessory”, accessory.取数据文本 (), 真) ' item.new()

返回 (json)

.子程序 Modules_new_imagegroup, 类_json, , 
.参数 elements, 类_json, , 图片元素组 item.image 1-9

.局部变量 json, 类_json, , , 

json.置属性 (“type”, “image-group”, )
json.置属性 (“elements”, elements.取数据文本 (), 真)
返回 (json)

.子程序 Modules_new_actiongroup, 类_json, , 
.参数 elements, 类_json, , 交互元素组 item.buttons 1-4

.局部变量 json, 类_json, , , 

json.置属性 (“type”, “action-group”, )
json.置属性 (“elements”, elements.取数据文本 (), 真)
返回 (json)

.子程序 Modules_new_context, 类_json, , 图文混排
.参数 elements, 类_json, , 图文元素组 item.plain-text, kmarkdown, image 1-10

.局部变量 json, 类_json, , , 

json.置属性 (“type”, “context”, )
json.置属性 (“elements”, elements.取数据文本 (), 真)
返回 (json)

.子程序 Modules_new_divider, 类_json, , 分割线
.局部变量 json, 类_json, , , 

json.置属性 (“type”, “divider”, )
返回 (json)

.子程序 Modules_new_file, 类_json, , 文件
.参数 type, 文本型, , file|audio|video
.参数 src, 文本型, , 
.参数 title, 文本型, , 
.参数 cover, 文本型, , audio有效

.局部变量 json, 类_json, , , 

json.置属性 (“type”, type, )
json.置属性 (“src”, src, )
json.置属性 (“title”, title, )
json.置属性 (“cover”, cover, )
返回 (json)

.子程序 Modules_new_countdown, 类_json, , 倒计时
.参数 endTime, 长整数型, , 到期的毫秒时间戳
.参数 startTime, 长整数型, , 起始的毫秒时间戳，仅当mode为second才有这个字段
.参数 mode, 文本型, , day,hour,second //倒计时样式, 按天显示，按小时显示或者按秒显示

.局部变量 json, 类_json, , , 

json.置属性 (“type”, “countdown”, )
json.置属性数值 (“endTime”, endTime)
json.置属性数值 (“startTime”, startTime)
json.置属性 (“mode”, mode, )
返回 (json)

.子程序 Items_add, 空白型, , 
.参数 json, 类_json, , 
.参数 item, 类_json, , 

json.加成员 (item.取数据文本 (), , 真, )
返回 ()

.子程序 item_new_text, 类_json, , 元素 文本
.参数 content, 文本型, , 
.参数 emoji, 逻辑型, , 

.局部变量 json, 类_json, , , 

json.置属性 (“type”, “plain-text”, )
json.置属性 (“content”, content, ) ' 也可以只有这个
json.置属性 (“emoji”, 选择 (emoji, “true”, “false”), 真)
返回 (json)


.子程序 item_new_kmarkdown, 类_json, , 元素 md文本
.参数 content, 文本型, , 

.局部变量 json, 类_json, , , 

json.置属性 (“type”, “kmarkdown”, )
json.置属性 (“content”, content, ) ' 也可以只有这个
返回 (json)

.子程序 item_new_image, 类_json, , 元素 图片
.参数 src, 文本型, , 图片类型（MimeType）限制说明：目前仅支持image/jpeg, image/gif, image/png这3种
.参数 alt, 文本型, , 
.参数 size, 文本型, , sm|lg
.参数 circle, 逻辑型, , 圆形

.局部变量 json, 类_json, , , 

json.置属性 (“type”, “image”, )
json.置属性 (“src”, src, )
json.置属性 (“alt”, alt, )
json.置属性 (“content”, src, )
json.置属性 (“circle”, 选择 (circle, “true”, “false”), 真)
返回 (json)

.子程序 item_new_button, 类_json, , 元素 按钮
.参数 theme, 文本型, , "primary|warning|info|danger|...", //按钮的主题颜色
.参数 value, 文本型, , //要传递的value，为string
.参数 click, 文本型, , //click时的事件类型， return-val 返回value值
.参数 text, 文本型, , text可以为plain-text, kmarkdown

.局部变量 json, 类_json, , , 
.局部变量 src, 文本型, , , 

json.置属性 (“type”, “button”, )
json.置属性 (“theme”, theme, )
json.置属性 (“value”, value, )
json.置属性 (“click”, click, )
 ' click代表用户点击的事件,默认为""，代表无任何事件。
 ' 当为link时，会跳转到value代表的链接;
 ' 当为return-val时，系统会通过系统消息将消息id,点击用户id和value发回给发送者，发送者可以根据自己的需求进行处理。
json.置属性 (“text”, text, )
返回 (json)

.子程序 Modules_new_paragraph, 类_json, , 结构体 区域文本
.参数 cols, 空白型, , 栏数
.参数 fields, 类_json, , 元素数组

.局部变量 json, 类_json, , , 

json.置属性 (“type”, “paragraph”, )
json.置属性数值 (“cols”, cols)
json.置属性 (“fields”, fields.取数据文本 (), 真)
返回 (json)

.程序集 Corefunction, , , 

.子程序 InitCorefunction, 空白型, , 
重定义数组 (core_function, 假, 0)
 ' .  注册到系统      功能名称      指令前缀   函数地址
RegFunctionToCore (“debug助手”, “.debug”, &funcDebug)

.子程序 RegFunctionToCore, 空白型, , 
.参数 functionName, 文本型, , 
.参数 commandPrefix, 文本型, , 
.参数 functionAddr, 子程序指针, , 

.局部变量 item, function, , , 

赋值 (item.name, functionName)
赋值 (item.prefix, commandPrefix)
赋值 (item.fundaddr, functionAddr)
加入成员 (core_function, item)
日志_输出 (“→”, 相加 (“coreinit-”, functionName, “ 注册前缀 ”, commandPrefix, “ 在地址 ”, 到文本 (取指针地址_子程序指针 (functionAddr))))

.子程序 funcDebug, 逻辑型, , 
.参数 msgFrom, 整数型, , 0=频道聊天  1=好友私聊
.参数 msgType, 整数型, , 同步之前的
.参数 channelId, 文本型, , 当msgFrom=0时才有
.参数 userId, 文本型, , 
.参数 contant, 文本型, , 
.参数 msgId, 文本型, , 
.参数 json, 文本型, , 备用 留给你自己解析

返回 (假)

.子程序 GoCorefunction, 空白型, , 消息从这里丢
.参数 msgFrom, 整数型, , 0=频道聊天  1=好友私聊
.参数 msgType, 整数型, , 同步之前的
.参数 channelId, 文本型, , 当msgFrom=0时才有
.参数 userId, 文本型, , 
.参数 contant, 文本型, , 
.参数 msgId, 文本型, , 
.参数 json, 文本型, , 备用 留给你自己解析

.局部变量 i, 整数型, , , 
.局部变量 item, function, , , 
.局部变量 JumpBack, 逻辑型, , , 

.计次循环首 (取数组成员数 (core_function), i)
    赋值 (item, core_function [i])
    .如果真 (等于 (命令_是否捕获 (contant, item.prefix), 真))
        调用子程序 (item.fundaddr, , JumpBack, msgFrom, msgType, channelId, userId, contant, json)
        .如果 (等于 (JumpBack, 真))
            跳出循环 ()
        .否则
            
        .如果结束
        
    .如果真结束
    
.计次循环尾 ()

.子程序 命令_是否捕获, 逻辑型, , 
.参数 contant, 文本型, , 
.参数 commandperitx, 文本型, , 

.如果 (等于 (取文本左边 (contant, 取文本长度 (commandperitx)), commandperitx))
    返回 (真)
.否则
    
.如果结束
返回 (假)


.程序集 plugins, , , 

.子程序 PluginsInitialize, 空白型, , 修改完毕
.局部变量 DLL文件, 文本型, , , 
.局部变量 n, 整数型, , , 
.局部变量 插件信息, 文本型, , "0", 
.局部变量 MOD函数_临时, plugin, , , 
.局部变量 插件分割, 文本型, , "0", 
.局部变量 i, 整数型, , , 
.局部变量 MODFileList, 文本型, , "0", 

删除目录 (相加 (取运行目录 (), “\plugin_tmp”))
创建目录 (相加 (取运行目录 (), “\plugin_tmp”))
.如果真 (等于 (目录_是否存在 (相加 (取运行目录 (), “\plugin”)), 假))
    创建目录 (相加 (取运行目录 (), “\plugin”))
.如果真结束
清除数组 (MODFileList)
赋值 (DLL文件, 寻找文件 (相加 (取运行目录 (), “\plugin\*.dll”), ))
复制文件 (相加 (取运行目录 (), “\plugin\”, DLL文件), 相加 (取运行目录 (), “\plugin_tmp\”, DLL文件))
.判断循环首 (不等于 (DLL文件, “”))
    加入成员 (MODFileList, DLL文件)
    赋值 (DLL文件, 寻找文件 ())
    复制文件 (相加 (取运行目录 (), “\plugin\”, DLL文件), 相加 (取运行目录 (), “\plugin_tmp\”, DLL文件)) ' 移动到tmp目录下
    处理事件 ()
.判断循环尾 ()
清除数组 (plugins)

.计次循环首 (取数组成员数 (MODFileList), n)
    .如果真 (DLL命令调用转向 (相加 (取运行目录 (), “\plugin_tmp\”, MODFileList [n]), “start”))
        .如果真 (等于 (启动插件 (g_token), “假”)) ' 这里要提供一些必要参数了
            
            到循环尾 ()
        .如果真结束
        .如果真 (DLL命令调用转向 (相加 (取运行目录 (), “\plugin_tmp\”, MODFileList [n]), “info”))
            文本_取中间_批量 (插件信息 (), “{”, “}”, 插件分割)
             ' 分割文本 (插件信息 () ＋ #换行符 ＋ “-----”, “-----” ＋ #换行符, )
            .计次循环首 (取数组成员数 (插件分割), i)
                赋值 (插件信息, 分割文本 (插件分割 [i], “,”, ))
                .如果真 (等于 (取数组成员数 (插件信息), 7))
                    赋值 (MOD函数_临时.插件名, 插件信息 [1])
                    赋值 (MOD函数_临时.版本, 插件信息 [2])
                    赋值 (MOD函数_临时.作者, 插件信息 [3])
                    赋值 (MOD函数_临时.介绍, 插件信息 [4])
                    赋值 (MOD函数_临时.格式左, 插件信息 [5])
                    赋值 (MOD函数_临时.调用名, 插件信息 [6])
                    赋值 (MOD函数_临时.功能中显示, 选择 (等于 (插件信息 [7], “true”), 真, 假))
                    赋值 (MOD函数_临时.文件名, MODFileList [n])
                    赋值 (MOD函数_临时.启用状态, 选择 (等于 (读配置项 (相加 (取运行目录 (), “\plugin\set.ini”), “open”, 相加 (MOD函数_临时.插件名, “_”, MODFileList [n]), ), “true”), 真, 假))
                    加入成员 (plugins, MOD函数_临时)
                .如果真结束
                 ' 处理事件 ()
            .计次循环尾 ()
        .如果真结束
        
    .如果真结束
    
.计次循环尾 ()
 ' 'ApplicationUI.超级列表框3.全部删除 ()
 ' .计次循环首 (取数组成员数 (), n)
     ' ApplicationUI.超级列表框3.插入表项 (, , , , , )
     ' ApplicationUI.超级列表框3.置标题 (n － 1, 0, MODFunction [n].插件名)
     ' ApplicationUI.超级列表框3.置标题 (n － 1, 1, MODFunction [n].文件名)
     ' ApplicationUI.超级列表框3.置标题 (n － 1, 2, MODFunction [n].格式左)
     ' ApplicationUI.超级列表框3.置标题 (n － 1, 3, MODFunction [n].介绍)
     ' ' 超级列表框3.置标题 (n － 1, 4, MOD函数 [n].作者)
     ' ApplicationUI.超级列表框3.置状态图片 (n － 1, 文本逻到数字逻辑 (到文本 (MODFunction [n].启用状态)))
     ' 处理事件 ()
 ' .计次循环尾 ()
 ' ApplicationUI.编辑框5.内容 ＝ “请选中一个模组以查看详情！”
 ' 重加载组合框1
 ' ApplicationUI.组合框1.清空 ()
 ' ApplicationUI.组合框1.加入项目 (“运行时间”, )
 ' 计次循环首 (取数组成员数 (MODFileList), n)
 ' ApplicationUI.组合框1.加入项目 (MODFileList [n], )

 ' ApplicationUI.组合框1.内容 ＝ 读配置项 (取运行目录 () ＋ “\Lt.Config”, “悬浮窗”, “事件”, “运行时间”)

.子程序 PluginsCall, 空白型, , 从应用发起的API
.参数 msgFrom, 整数型, , 0=频道聊天  1=好友私聊
.参数 msgType, 整数型, , 同步之前的
.参数 channelId, 文本型, , 当msgFrom=0时才有
.参数 userId, 文本型, , 
.参数 contant, 文本型, , 
.参数 msgId, 文本型, , 
.参数 json, 文本型, , 备用 留给你自己解析

.局部变量 n, 整数型, , , 
.局部变量 临时文本, 文本型, , , 
.局部变量 plugin, plugin, , , 

.计次循环首 (取数组成员数 (plugins), n)
    赋值 (plugin, plugins [n])
     ' 写环境变量 (“corerun”, “MOD函数：” ＋ MODFunction [n].文件名 ＋ “,” ＋ MODFunction [n].插件名)
    .如果真 (等于 (plugin.启用状态, 假))
        到循环尾 ()
    .如果真结束
     ' 过滤
    
    
    .如果 (命令_是否捕获 (contant, plugin.格式左))
        
    .否则
        到循环尾 ()
    .如果结束
    
    .判断开始 (DLL命令调用转向 (相加 (取运行目录 (), “\plugin_tmp\”, plugin.文件名), plugin.调用名))
         ' 这里cookies应该加个 用户授权的
         ' 当前插件 ＝ MOD函数[n].文件名
        赋值 (临时文本, 使用插件 (msgFrom, msgType, channelId, userId, contant, msgId, json))
        .如果真 (不等于 (临时文本, “”))
            返回 ()
        .如果真结束
        
    .默认
        
    .判断结束
    
.计次循环尾 ()
返回 ()


 ' 不属于任何一个程序集、类模块的函数：
